// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2018.3 (lin64) Build 2405991 Thu Dec  6 23:36:41 MST 2018
// Date        : Mon Nov 18 13:48:09 2019
// Host        : AndoUbuntu running 64-bit Ubuntu 16.04.6 LTS
// Command     : write_verilog -force -mode funcsim bfm_axi.vm
// Design      : bfm_axi
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xczu9eg-ffvb1156-2-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* AXI_WIDTH_AD = "32" *) (* AXI_WIDTH_CID = "4" *) (* AXI_WIDTH_DA = "32" *) 
(* AXI_WIDTH_DS = "4" *) (* AXI_WIDTH_DSB = "2" *) (* AXI_WIDTH_ID = "4" *) 
(* DEPTH_FIFO_CU2F = "512" *) (* DEPTH_FIFO_DF2U = "512" *) (* DEPTH_FIFO_DU2F = "512" *) 
(* FPGA_FAMILY = "ZynqUSP" *) (* PCLK_FREQ = "80000000" *) (* PCLK_INV = "1'b1" *) 
(* TRANSACTOR_ID = "4'b0000" *) 
(* NotValidForBitStream *)
module bfm_axi
   (SYS_CLK_STABLE,
    SYS_CLK,
    SYS_RST_N,
    SL_RST_N,
    SL_CS_N,
    SL_PCLK,
    SL_AD,
    SL_FLAGA,
    SL_FLAGB,
    SL_FLAGC,
    SL_FLAGD,
    SL_RD_N,
    SL_WR_N,
    SL_OE_N,
    SL_PKTEND_N,
    SL_DT_I,
    SL_DT_O,
    SL_DT_T,
    SL_MODE,
    ARESETn,
    ACLK,
    MID,
    AWID,
    AWADDR,
    AWLEN,
    AWLOCK,
    AWSIZE,
    AWBURST,
    AWVALID,
    AWREADY,
    AWQOS,
    AWREGION,
    WID,
    WDATA,
    WSTRB,
    WLAST,
    WVALID,
    WREADY,
    BID,
    BRESP,
    BVALID,
    BREADY,
    ARID,
    ARADDR,
    ARLEN,
    ARLOCK,
    ARSIZE,
    ARBURST,
    ARVALID,
    ARREADY,
    ARQOS,
    ARREGION,
    RID,
    RDATA,
    RRESP,
    RLAST,
    RVALID,
    RREADY,
    IRQ,
    FIQ,
    GPOUT,
    GPIN);
  input SYS_CLK_STABLE;
  input SYS_CLK;
  output SYS_RST_N;
  input SL_RST_N;
  output SL_CS_N;
  output SL_PCLK;
  output [1:0]SL_AD;
  input SL_FLAGA;
  input SL_FLAGB;
  input SL_FLAGC;
  input SL_FLAGD;
  output SL_RD_N;
  output SL_WR_N;
  output SL_OE_N;
  output SL_PKTEND_N;
  input [31:0]SL_DT_I;
  output [31:0]SL_DT_O;
  output SL_DT_T;
  input [1:0]SL_MODE;
  input ARESETn;
  input ACLK;
  input [3:0]MID;
  output [3:0]AWID;
  output [31:0]AWADDR;
  output [7:0]AWLEN;
  output AWLOCK;
  output [2:0]AWSIZE;
  output [1:0]AWBURST;
  output AWVALID;
  input AWREADY;
  output [3:0]AWQOS;
  output [3:0]AWREGION;
  output [3:0]WID;
  output [31:0]WDATA;
  output [3:0]WSTRB;
  output WLAST;
  output WVALID;
  input WREADY;
  input [3:0]BID;
  input [1:0]BRESP;
  input BVALID;
  output BREADY;
  output [3:0]ARID;
  output [31:0]ARADDR;
  output [7:0]ARLEN;
  output ARLOCK;
  output [2:0]ARSIZE;
  output [1:0]ARBURST;
  output ARVALID;
  input ARREADY;
  output [3:0]ARQOS;
  output [3:0]ARREGION;
  input [3:0]RID;
  input [31:0]RDATA;
  input [1:0]RRESP;
  input RLAST;
  input RVALID;
  output RREADY;
  input IRQ;
  input FIQ;
  output [15:0]GPOUT;
  input [15:0]GPIN;

  wire ACLK;
  wire [31:0]ARADDR;
  wire [1:0]ARBURST;
  wire ARESETn;
  wire [3:0]ARID;
  wire [7:0]ARLEN;
  wire ARLOCK;
  wire [3:0]ARQOS;
  wire ARREADY;
  wire [3:0]ARREGION;
  wire [2:0]ARSIZE;
  wire ARVALID;
  wire [31:0]AWADDR;
  wire [1:0]AWBURST;
  wire [3:0]AWID;
  wire [7:0]AWLEN;
  wire AWLOCK;
  wire [3:0]AWQOS;
  wire AWREADY;
  wire [3:0]AWREGION;
  wire [2:0]AWSIZE;
  wire AWVALID;
  wire [3:0]BID;
  wire BREADY;
  wire [1:0]BRESP;
  wire BVALID;
  wire FIQ;
  wire [15:0]GPIN;
  wire [15:0]GPOUT;
  wire IRQ;
  wire [3:0]MID;
  wire [31:0]RDATA;
  wire [3:0]RID;
  wire RLAST;
  wire RREADY;
  wire [1:0]RRESP;
  wire RVALID;
  wire [1:0]SL_AD;
  wire SL_CS_N;
  wire [31:0]SL_DT_I;
  wire [31:0]SL_DT_O;
  wire SL_DT_T;
  wire SL_FLAGA;
  wire SL_FLAGB;
  wire SL_FLAGC;
  wire SL_FLAGD;
  wire [1:0]SL_MODE;
  wire SL_OE_N;
  wire SL_PCLK;
  wire SL_PKTEND_N;
  wire SL_RD_N;
  wire SL_RST_N;
  wire SL_WR_N;
  wire SYS_CLK;
  wire SYS_CLK_STABLE;
  wire SYS_RST_N;
  wire [31:0]WDATA;
  wire [3:0]WID;
  wire WLAST;
  wire WREADY;
  wire [3:0]WSTRB;
  wire WVALID;
  wire [31:0]cmd_rd_data;
  wire [15:0]cmd_rd_items;
  wire cmd_rd_ready;
  wire cmd_rd_valid;
  wire [33:0]f2u_wr_data;
  wire f2u_wr_ready;
  wire [15:0]f2u_wr_rooms;
  wire f2u_wr_valid;
  wire [3:0]transactor_sel;
  wire [31:0]u2f_rd_data;
  wire [15:0]u2f_rd_items;
  wire u2f_rd_ready;
  wire u2f_rd_valid;
  wire NLW_u_gpif2mst_cmd_rd_empty_UNCONNECTED;
  wire NLW_u_gpif2mst_f2u_wr_full_UNCONNECTED;
  wire NLW_u_gpif2mst_u2f_rd_empty_UNCONNECTED;

  (* ADD_CMD = "2'b00" *) 
  (* ADD_F2U = "2'b10" *) 
  (* ADD_U2F = "2'b00" *) 
  (* CMD_CU2F = "4'b0010" *) 
  (* CMD_DF2U = "4'b0101" *) 
  (* CMD_DU2F = "4'b0100" *) 
  (* CMD_REQ = "4'b1000" *) 
  (* DEPTH_FIFO_CU2F = "512" *) 
  (* DEPTH_FIFO_DF2U = "512" *) 
  (* DEPTH_FIFO_DU2F = "512" *) 
  (* FIFO_CU2F = "2'b00" *) 
  (* FIFO_DF2U = "2'b10" *) 
  (* FIFO_DU2F = "2'b01" *) 
  (* FPGA_FAMILY = "ZynqUSP" *) 
  (* MODE_CMD = "2'b00" *) 
  (* MODE_SF2U = "2'b10" *) 
  (* MODE_SLOOP = "2'b11" *) 
  (* MODE_SU2F = "2'b01" *) 
  (* NUM_WATERMARK = "4" *) 
  (* PCLK_FREQ = "80000000" *) 
  (* PCLK_INV = "1'b1" *) 
  (* PCLK_MHZ = "80" *) 
  (* STA_CMD0 = "5'b00001" *) 
  (* STA_CMD1 = "5'b00010" *) 
  (* STA_CMD2 = "5'b00011" *) 
  (* STA_F2U = "5'b01110" *) 
  (* STA_F2U0 = "5'b01101" *) 
  (* STA_F2U_END = "5'b10100" *) 
  (* STA_F2U_GUARD = "5'b01100" *) 
  (* STA_F2U_WAIT = "5'b10010" *) 
  (* STA_F2U_WAIT_EMPTY = "5'b10001" *) 
  (* STA_F2U_WAIT_FULL = "5'b10000" *) 
  (* STA_F2U_WAIT_FULL_N = "5'b01111" *) 
  (* STA_F2U_ZLP = "5'b10011" *) 
  (* STA_PAR = "5'b00100" *) 
  (* STA_READY = "5'b00000" *) 
  (* STA_REQ = "5'b10101" *) 
  (* STA_U2F = "5'b00110" *) 
  (* STA_U2F_END0 = "5'b01001" *) 
  (* STA_U2F_END1 = "5'b01010" *) 
  (* STA_U2F_END2 = "5'b01011" *) 
  (* STA_U2F_GUARD = "5'b00101" *) 
  (* STA_U2F_PRE_EMPTY_N = "5'b00111" *) 
  (* STA_U2F_WAIT_EMPTY_N = "5'b01000" *) 
  (* WIDTH_DT = "32" *) 
  gpif2mst u_gpif2mst
       (.SL_AD(SL_AD),
        .SL_CS_N(SL_CS_N),
        .SL_DT_I(SL_DT_I),
        .SL_DT_O(SL_DT_O),
        .SL_DT_T(SL_DT_T),
        .SL_FLAGA(SL_FLAGA),
        .SL_FLAGB(SL_FLAGB),
        .SL_FLAGC(SL_FLAGC),
        .SL_FLAGD(SL_FLAGD),
        .SL_MODE(SL_MODE),
        .SL_OE_N(SL_OE_N),
        .SL_PCLK(SL_PCLK),
        .SL_PKTEND_N(SL_PKTEND_N),
        .SL_RD_N(SL_RD_N),
        .SL_RST_N(SL_RST_N),
        .SL_WR_N(SL_WR_N),
        .SYS_CLK(SYS_CLK),
        .SYS_CLK_STABLE(SYS_CLK_STABLE),
        .SYS_RST_N(SYS_RST_N),
        .cmd_rd_clk(ACLK),
        .cmd_rd_data(cmd_rd_data),
        .cmd_rd_empty(NLW_u_gpif2mst_cmd_rd_empty_UNCONNECTED),
        .cmd_rd_items(cmd_rd_items),
        .cmd_rd_ready(cmd_rd_ready),
        .cmd_rd_valid(cmd_rd_valid),
        .f2u_wr_clk(ACLK),
        .f2u_wr_data(f2u_wr_data),
        .f2u_wr_full(NLW_u_gpif2mst_f2u_wr_full_UNCONNECTED),
        .f2u_wr_ready(f2u_wr_ready),
        .f2u_wr_rooms(f2u_wr_rooms),
        .f2u_wr_valid(f2u_wr_valid),
        .transactor_sel(transactor_sel),
        .u2f_rd_clk(ACLK),
        .u2f_rd_data(u2f_rd_data),
        .u2f_rd_empty(NLW_u_gpif2mst_u2f_rd_empty_UNCONNECTED),
        .u2f_rd_items(u2f_rd_items),
        .u2f_rd_ready(u2f_rd_ready),
        .u2f_rd_valid(u2f_rd_valid));
  (* AXI_WIDTH_AD = "32" *) 
  (* AXI_WIDTH_CID = "4" *) 
  (* AXI_WIDTH_DA = "32" *) 
  (* AXI_WIDTH_DS = "4" *) 
  (* AXI_WIDTH_DSB = "2" *) 
  (* AXI_WIDTH_ID = "4" *) 
  (* F2U_FIFO_FAW = "4" *) 
  (* F2U_FIFO_FDW = "32" *) 
  (* F2U_FIFO_FULN = "4" *) 
  (* SC_BURST = "4" *) 
  (* SC_CMD = "1" *) 
  (* SC_IDLE = "0" *) 
  (* SC_IE_WAIT = "5" *) 
  (* SC_RD_WAIT = "3" *) 
  (* SC_WR_WAIT = "2" *) 
  (* SR_ARB = "1" *) 
  (* SR_END = "4" *) 
  (* SR_IDLE = "0" *) 
  (* SR_INT = "3" *) 
  (* SR_RD = "2" *) 
  (* SW_ARB = "1" *) 
  (* SW_END = "5" *) 
  (* SW_IDLE = "0" *) 
  (* SW_WR0 = "2" *) 
  (* SW_WR1 = "3" *) 
  (* SW_WR2 = "4" *) 
  (* TRANSACTOR_ID = "4'b0000" *) 
  (* U2F_FIFO_FAW = "4" *) 
  (* U2F_FIFO_FDW = "41" *) 
  (* U2F_FIFO_FULN = "4" *) 
  trx_axi u_trx_axi
       (.ACLK(ACLK),
        .ARADDR(ARADDR),
        .ARBURST(ARBURST),
        .ARESETn(ARESETn),
        .ARID(ARID),
        .ARLEN(ARLEN),
        .ARLOCK(ARLOCK),
        .ARQOS(ARQOS),
        .ARREADY(ARREADY),
        .ARREGION(ARREGION),
        .ARSIZE(ARSIZE),
        .ARVALID(ARVALID),
        .AWADDR(AWADDR),
        .AWBURST(AWBURST),
        .AWID(AWID),
        .AWLEN(AWLEN),
        .AWLOCK(AWLOCK),
        .AWQOS(AWQOS),
        .AWREADY(AWREADY),
        .AWREGION(AWREGION),
        .AWSIZE(AWSIZE),
        .AWVALID(AWVALID),
        .BID(BID),
        .BREADY(BREADY),
        .BRESP(BRESP),
        .BVALID(BVALID),
        .FIQ(FIQ),
        .GPIN(GPIN),
        .GPOUT(GPOUT),
        .IRQ(IRQ),
        .MID(MID),
        .RDATA(RDATA),
        .RID(RID),
        .RLAST(RLAST),
        .RREADY(RREADY),
        .RRESP(RRESP),
        .RVALID(RVALID),
        .WDATA(WDATA),
        .WID(WID),
        .WLAST(WLAST),
        .WREADY(WREADY),
        .WSTRB(WSTRB),
        .WVALID(WVALID),
        .cmd_data(cmd_rd_data),
        .cmd_items(cmd_rd_items),
        .cmd_ready(cmd_rd_ready),
        .cmd_valid(cmd_rd_valid),
        .f2u_data(f2u_wr_data),
        .f2u_ready(f2u_wr_ready),
        .f2u_rooms(f2u_wr_rooms),
        .f2u_valid(f2u_wr_valid),
        .transactor_sel(transactor_sel),
        .u2f_data(u2f_rd_data),
        .u2f_items(u2f_rd_items),
        .u2f_ready(u2f_rd_ready),
        .u2f_valid(u2f_rd_valid));
endmodule

(* ADD_CMD = "2'b00" *) (* ADD_F2U = "2'b10" *) (* ADD_U2F = "2'b00" *) 
(* CMD_CU2F = "4'b0010" *) (* CMD_DF2U = "4'b0101" *) (* CMD_DU2F = "4'b0100" *) 
(* CMD_REQ = "4'b1000" *) (* DEPTH_FIFO_CU2F = "512" *) (* DEPTH_FIFO_DF2U = "512" *) 
(* DEPTH_FIFO_DU2F = "512" *) (* FIFO_CU2F = "2'b00" *) (* FIFO_DF2U = "2'b10" *) 
(* FIFO_DU2F = "2'b01" *) (* FPGA_FAMILY = "ZynqUSP" *) (* MODE_CMD = "2'b00" *) 
(* MODE_SF2U = "2'b10" *) (* MODE_SLOOP = "2'b11" *) (* MODE_SU2F = "2'b01" *) 
(* NUM_WATERMARK = "4" *) (* PCLK_FREQ = "80000000" *) (* PCLK_INV = "1'b1" *) 
(* PCLK_MHZ = "80" *) (* STA_CMD0 = "5'b00001" *) (* STA_CMD1 = "5'b00010" *) 
(* STA_CMD2 = "5'b00011" *) (* STA_F2U = "5'b01110" *) (* STA_F2U0 = "5'b01101" *) 
(* STA_F2U_END = "5'b10100" *) (* STA_F2U_GUARD = "5'b01100" *) (* STA_F2U_WAIT = "5'b10010" *) 
(* STA_F2U_WAIT_EMPTY = "5'b10001" *) (* STA_F2U_WAIT_FULL = "5'b10000" *) (* STA_F2U_WAIT_FULL_N = "5'b01111" *) 
(* STA_F2U_ZLP = "5'b10011" *) (* STA_PAR = "5'b00100" *) (* STA_READY = "5'b00000" *) 
(* STA_REQ = "5'b10101" *) (* STA_U2F = "5'b00110" *) (* STA_U2F_END0 = "5'b01001" *) 
(* STA_U2F_END1 = "5'b01010" *) (* STA_U2F_END2 = "5'b01011" *) (* STA_U2F_GUARD = "5'b00101" *) 
(* STA_U2F_PRE_EMPTY_N = "5'b00111" *) (* STA_U2F_WAIT_EMPTY_N = "5'b01000" *) (* WIDTH_DT = "32" *) 
module gpif2mst
   (SYS_CLK_STABLE,
    SYS_CLK,
    SYS_RST_N,
    SL_RST_N,
    SL_CS_N,
    SL_PCLK,
    SL_AD,
    SL_FLAGA,
    SL_FLAGB,
    SL_FLAGC,
    SL_FLAGD,
    SL_RD_N,
    SL_WR_N,
    SL_OE_N,
    SL_PKTEND_N,
    SL_DT_I,
    SL_DT_O,
    SL_DT_T,
    SL_MODE,
    transactor_sel,
    cmd_rd_clk,
    cmd_rd_ready,
    cmd_rd_valid,
    cmd_rd_data,
    cmd_rd_empty,
    cmd_rd_items,
    u2f_rd_clk,
    u2f_rd_ready,
    u2f_rd_valid,
    u2f_rd_data,
    u2f_rd_empty,
    u2f_rd_items,
    f2u_wr_clk,
    f2u_wr_ready,
    f2u_wr_valid,
    f2u_wr_data,
    f2u_wr_full,
    f2u_wr_rooms);
  (* xc_pulldown = "1" *) input SYS_CLK_STABLE;
  input SYS_CLK;
  (* mark_debug = "true" *) (* xc_pullup = "1" *) output SYS_RST_N;
  (* mark_debug = "true" *) input SL_RST_N;
  (* mark_debug = "true" *) output SL_CS_N;
  output SL_PCLK;
  (* IOB = "TRUE" *) (* mark_debug = "true" *) output [1:0]SL_AD;
  (* mark_debug = "true" *) (* xc_pullup = "1" *) input SL_FLAGA;
  (* mark_debug = "true" *) (* xc_pullup = "1" *) input SL_FLAGB;
  (* mark_debug = "true" *) (* xc_pullup = "1" *) input SL_FLAGC;
  (* mark_debug = "true" *) (* xc_pullup = "1" *) input SL_FLAGD;
  (* IOB = "TRUE" *) (* mark_debug = "true" *) (* xc_pullup = "1" *) output SL_RD_N;
  (* IOB = "TRUE" *) (* mark_debug = "true" *) (* xc_pullup = "1" *) output SL_WR_N;
  (* IOB = "true" *) (* mark_debug = "true" *) (* xc_pullup = "1" *) output SL_OE_N;
  (* IOB = "TRUE" *) (* mark_debug = "true" *) (* xc_pullup = "1" *) output SL_PKTEND_N;
  (* IOB = "TRUE" *) (* mark_debug = "true" *) input [31:0]SL_DT_I;
  (* IOB = "TRUE" *) (* mark_debug = "true" *) output [31:0]SL_DT_O;
  (* mark_debug = "true" *) output SL_DT_T;
  (* mark_debug = "true" *) (* xc_pulldown = "1" *) input [1:0]SL_MODE;
  (* keep = "true" *) (* mark_debug = "true" *) output [3:0]transactor_sel;
  input cmd_rd_clk;
  (* mark_debug = "true" *) input cmd_rd_ready;
  (* mark_debug = "true" *) output cmd_rd_valid;
  (* mark_debug = "true" *) output [31:0]cmd_rd_data;
  (* mark_debug = "true" *) output cmd_rd_empty;
  (* mark_debug = "true" *) output [15:0]cmd_rd_items;
  input u2f_rd_clk;
  (* mark_debug = "true" *) input u2f_rd_ready;
  (* mark_debug = "true" *) output u2f_rd_valid;
  (* mark_debug = "true" *) output [31:0]u2f_rd_data;
  (* mark_debug = "true" *) output u2f_rd_empty;
  (* mark_debug = "true" *) output [15:0]u2f_rd_items;
  input f2u_wr_clk;
  (* mark_debug = "true" *) output f2u_wr_ready;
  (* mark_debug = "true" *) input f2u_wr_valid;
  (* mark_debug = "true" *) input [33:0]f2u_wr_data;
  (* mark_debug = "true" *) output f2u_wr_full;
  (* mark_debug = "true" *) output [15:0]f2u_wr_rooms;

  wire \<const0> ;
  (* MARK_DEBUG *) wire [1:0]SL_AD;
  wire \SL_AD[0]_i_1_n_0 ;
  wire \SL_AD[1]_i_1_n_0 ;
  wire \SL_AD[1]_i_2_n_0 ;
  wire \SL_AD[1]_i_3_n_0 ;
  wire \SL_AD[1]_i_4_n_0 ;
  wire \SL_AD[1]_i_5_n_0 ;
  wire \SL_AD[1]_i_6_n_0 ;
  wire \SL_AD[1]_i_7_n_0 ;
  wire \SL_AD[1]_i_8_n_0 ;
  wire \SL_AD[1]_i_9_n_0 ;
  (* IOB = "TRUE" *) (* MARK_DEBUG *) wire [31:0]SL_DT_I;
  (* MARK_DEBUG *) wire [31:0]SL_DT_O;
  wire \SL_DT_O[0]_i_1_n_0 ;
  wire \SL_DT_O[10]_i_1_n_0 ;
  wire \SL_DT_O[11]_i_1_n_0 ;
  wire \SL_DT_O[12]_i_1_n_0 ;
  wire \SL_DT_O[13]_i_1_n_0 ;
  wire \SL_DT_O[14]_i_1_n_0 ;
  wire \SL_DT_O[15]_i_1_n_0 ;
  wire \SL_DT_O[16]_i_1_n_0 ;
  wire \SL_DT_O[17]_i_1_n_0 ;
  wire \SL_DT_O[18]_i_1_n_0 ;
  wire \SL_DT_O[19]_i_1_n_0 ;
  wire \SL_DT_O[19]_i_2_n_0 ;
  wire \SL_DT_O[19]_i_3_n_0 ;
  wire \SL_DT_O[1]_i_1_n_0 ;
  wire \SL_DT_O[20]_i_1_n_0 ;
  wire \SL_DT_O[20]_i_2_n_0 ;
  wire \SL_DT_O[20]_i_3_n_0 ;
  wire \SL_DT_O[21]_i_1_n_0 ;
  wire \SL_DT_O[22]_i_1_n_0 ;
  wire \SL_DT_O[23]_i_1_n_0 ;
  wire \SL_DT_O[24]_i_1_n_0 ;
  wire \SL_DT_O[25]_i_1_n_0 ;
  wire \SL_DT_O[25]_i_2_n_0 ;
  wire \SL_DT_O[25]_i_3_n_0 ;
  wire \SL_DT_O[25]_i_4_n_0 ;
  wire \SL_DT_O[26]_i_1_n_0 ;
  wire \SL_DT_O[26]_i_2_n_0 ;
  wire \SL_DT_O[26]_i_3_n_0 ;
  wire \SL_DT_O[26]_i_4_n_0 ;
  wire \SL_DT_O[26]_i_5_n_0 ;
  wire \SL_DT_O[26]_i_6_n_0 ;
  wire \SL_DT_O[27]_i_1_n_0 ;
  wire \SL_DT_O[28]_i_1_n_0 ;
  wire \SL_DT_O[28]_i_2_n_0 ;
  wire \SL_DT_O[28]_i_3_n_0 ;
  wire \SL_DT_O[28]_i_4_n_0 ;
  wire \SL_DT_O[29]_i_10_n_0 ;
  wire \SL_DT_O[29]_i_11_n_0 ;
  wire \SL_DT_O[29]_i_1_n_0 ;
  wire \SL_DT_O[29]_i_2_n_0 ;
  wire \SL_DT_O[29]_i_3_n_0 ;
  wire \SL_DT_O[29]_i_4_n_0 ;
  wire \SL_DT_O[29]_i_5_n_0 ;
  wire \SL_DT_O[29]_i_6_n_0 ;
  wire \SL_DT_O[29]_i_7_n_0 ;
  wire \SL_DT_O[29]_i_8_n_0 ;
  wire \SL_DT_O[29]_i_9_n_0 ;
  wire \SL_DT_O[2]_i_1_n_0 ;
  wire \SL_DT_O[30]_i_1_n_0 ;
  wire \SL_DT_O[31]_i_1_n_0 ;
  wire \SL_DT_O[31]_i_2_n_0 ;
  wire \SL_DT_O[31]_i_3_n_0 ;
  wire \SL_DT_O[31]_i_4_n_0 ;
  wire \SL_DT_O[3]_i_1_n_0 ;
  wire \SL_DT_O[4]_i_1_n_0 ;
  wire \SL_DT_O[5]_i_1_n_0 ;
  wire \SL_DT_O[6]_i_1_n_0 ;
  wire \SL_DT_O[7]_i_1_n_0 ;
  wire \SL_DT_O[8]_i_1_n_0 ;
  wire \SL_DT_O[9]_i_1_n_0 ;
  wire \SL_DT_O[9]_i_2_n_0 ;
  (* MARK_DEBUG *) wire SL_DT_T;
  wire SL_DT_T_i_1_n_0;
  wire SL_DT_T_i_2_n_0;
  wire SL_DT_T_i_3_n_0;
  wire SL_DT_T_i_4_n_0;
  wire SL_DT_T_i_5_n_0;
  wire SL_DT_T_i_6_n_0;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire SL_EMPTY_N;
  (* MARK_DEBUG *) (* xc_pullup = "1" *) wire SL_FLAGA;
  (* MARK_DEBUG *) (* xc_pullup = "1" *) wire SL_FLAGB;
  (* MARK_DEBUG *) (* xc_pullup = "1" *) wire SL_FLAGC;
  (* MARK_DEBUG *) (* xc_pullup = "1" *) wire SL_FLAGD;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire SL_FULL_N;
  (* MARK_DEBUG *) (* xc_pulldown = "1" *) wire [1:0]SL_MODE;
  (* MARK_DEBUG *) (* xc_pullup = "1" *) wire SL_OE_N;
  wire SL_OE_N_i_1_n_0;
  wire SL_OE_N_i_2_n_0;
  wire SL_OE_N_i_3_n_0;
  wire SL_OE_N_i_4_n_0;
  wire SL_PCLK;
  (* MARK_DEBUG *) wire SL_PCLK_STABLE;
  (* MARK_DEBUG *) (* xc_pullup = "1" *) wire SL_PKTEND_N;
  wire SL_PKTEND_N_i_1_n_0;
  wire SL_PKTEND_N_i_2_n_0;
  wire SL_PKTEND_N_i_3_n_0;
  wire SL_PKTEND_N_i_4_n_0;
  wire SL_PKTEND_N_i_5_n_0;
  wire SL_PKTEND_N_i_6_n_0;
  wire SL_PKTEND_N_i_7_n_0;
  wire SL_PKTEND_N_i_8_n_0;
  wire SL_PKTEND_N_i_9_n_0;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire SL_PRE_EMPTY_N;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire SL_PRE_FULL_N;
  (* MARK_DEBUG *) (* xc_pullup = "1" *) wire SL_RD_N;
  wire SL_RD_N0;
  wire SL_RD_N00;
  wire SL_RD_N0_reg_n_0;
  wire SL_RD_N1;
  wire SL_RD_N_i_1_n_0;
  wire SL_RD_N_i_2_n_0;
  wire SL_RD_N_i_3_n_0;
  wire SL_RD_N_i_4_n_0;
  wire SL_RD_N_i_5_n_0;
  (* MARK_DEBUG *) wire SL_RST_N;
  (* MARK_DEBUG *) (* xc_pullup = "1" *) wire SL_WR_N;
  wire SL_WR_N1;
  wire SL_WR_N_i_1_n_0;
  wire SL_WR_N_i_2_n_0;
  wire SL_WR_N_i_3_n_0;
  wire SL_WR_N_i_4_n_0;
  wire SL_WR_N_i_5_n_0;
  wire SL_WR_N_i_6_n_0;
  wire SL_WR_N_i_7_n_0;
  wire SYS_CLK_STABLE;
  (* MARK_DEBUG *) (* xc_pullup = "1" *) wire SYS_RST_N;
  wire cmd_rd_clk;
  (* MARK_DEBUG *) wire [31:0]cmd_rd_data;
  (* MARK_DEBUG *) wire cmd_rd_empty;
  (* MARK_DEBUG *) wire [15:0]cmd_rd_items;
  (* MARK_DEBUG *) wire cmd_rd_ready;
  (* MARK_DEBUG *) wire cmd_rd_valid;
  (* MARK_DEBUG *) wire cmd_wr_clk;
  (* MARK_DEBUG *) wire [31:0]cmd_wr_data;
  wire \cmd_wr_data[31]_i_1_n_0 ;
  (* MARK_DEBUG *) wire cmd_wr_full;
  (* MARK_DEBUG *) wire cmd_wr_fullN;
  (* MARK_DEBUG *) wire cmd_wr_ready;
  (* MARK_DEBUG *) wire [15:0]cmd_wr_rooms;
  (* MARK_DEBUG *) wire cmd_wr_valid;
  wire cmd_wr_valid_i_1_n_0;
  (* MARK_DEBUG *) wire [15:0]cnt;
  wire \cnt[0]_i_10_n_0 ;
  wire \cnt[0]_i_11_n_0 ;
  wire \cnt[0]_i_12_n_0 ;
  wire \cnt[0]_i_13_n_0 ;
  wire \cnt[0]_i_1_n_0 ;
  wire \cnt[0]_i_2_n_0 ;
  wire \cnt[0]_i_3_n_0 ;
  wire \cnt[0]_i_4_n_0 ;
  wire \cnt[0]_i_5_n_0 ;
  wire \cnt[0]_i_6_n_0 ;
  wire \cnt[0]_i_7_n_0 ;
  wire \cnt[0]_i_8_n_0 ;
  wire \cnt[0]_i_9_n_0 ;
  wire \cnt[10]_i_1_n_0 ;
  wire \cnt[10]_i_2_n_0 ;
  wire \cnt[10]_i_3_n_0 ;
  wire \cnt[11]_i_1_n_0 ;
  wire \cnt[11]_i_2_n_0 ;
  wire \cnt[11]_i_3_n_0 ;
  wire \cnt[12]_i_1_n_0 ;
  wire \cnt[12]_i_2_n_0 ;
  wire \cnt[12]_i_3_n_0 ;
  wire \cnt[13]_i_1_n_0 ;
  wire \cnt[13]_i_2_n_0 ;
  wire \cnt[13]_i_3_n_0 ;
  wire \cnt[14]_i_1_n_0 ;
  wire \cnt[14]_i_2_n_0 ;
  wire \cnt[14]_i_3_n_0 ;
  wire \cnt[15]_i_10_n_0 ;
  wire \cnt[15]_i_11_n_0 ;
  wire \cnt[15]_i_12_n_0 ;
  wire \cnt[15]_i_14_n_0 ;
  wire \cnt[15]_i_15_n_0 ;
  wire \cnt[15]_i_16_n_0 ;
  wire \cnt[15]_i_17_n_0 ;
  wire \cnt[15]_i_18_n_0 ;
  wire \cnt[15]_i_19_n_0 ;
  wire \cnt[15]_i_1_n_0 ;
  wire \cnt[15]_i_20_n_0 ;
  wire \cnt[15]_i_2_n_0 ;
  wire \cnt[15]_i_3_n_0 ;
  wire \cnt[15]_i_4_n_0 ;
  wire \cnt[15]_i_5_n_0 ;
  wire \cnt[15]_i_6_n_0 ;
  wire \cnt[15]_i_7_n_0 ;
  wire \cnt[15]_i_8_n_0 ;
  wire \cnt[15]_i_9_n_0 ;
  wire \cnt[1]_i_1_n_0 ;
  wire \cnt[1]_i_2_n_0 ;
  wire \cnt[2]_i_1_n_0 ;
  wire \cnt[2]_i_2_n_0 ;
  wire \cnt[2]_i_3_n_0 ;
  wire \cnt[3]_i_1_n_0 ;
  wire \cnt[3]_i_2_n_0 ;
  wire \cnt[3]_i_3_n_0 ;
  wire \cnt[4]_i_1_n_0 ;
  wire \cnt[4]_i_2_n_0 ;
  wire \cnt[4]_i_3_n_0 ;
  wire \cnt[5]_i_1_n_0 ;
  wire \cnt[5]_i_2_n_0 ;
  wire \cnt[5]_i_3_n_0 ;
  wire \cnt[6]_i_1_n_0 ;
  wire \cnt[6]_i_2_n_0 ;
  wire \cnt[6]_i_3_n_0 ;
  wire \cnt[7]_i_1_n_0 ;
  wire \cnt[7]_i_2_n_0 ;
  wire \cnt[7]_i_3_n_0 ;
  wire \cnt[8]_i_1_n_0 ;
  wire \cnt[8]_i_2_n_0 ;
  wire \cnt[8]_i_3_n_0 ;
  wire \cnt[9]_i_1_n_0 ;
  wire \cnt[9]_i_2_n_0 ;
  wire \cnt[9]_i_3_n_0 ;
  (* RTL_KEEP = "true" *) wire [31:0]control_flit;
  wire \control_flit[0]_i_1_n_0 ;
  wire \control_flit[10]_i_1_n_0 ;
  wire \control_flit[11]_i_1_n_0 ;
  wire \control_flit[12]_i_1_n_0 ;
  wire \control_flit[12]_i_2_n_0 ;
  wire \control_flit[12]_i_3_n_0 ;
  wire \control_flit[12]_i_4_n_0 ;
  wire \control_flit[13]_i_1_n_0 ;
  wire \control_flit[14]_i_1_n_0 ;
  wire \control_flit[15]_i_1_n_0 ;
  wire \control_flit[15]_i_2_n_0 ;
  wire \control_flit[16]_i_1_n_0 ;
  wire \control_flit[17]_i_1_n_0 ;
  wire \control_flit[18]_i_1_n_0 ;
  wire \control_flit[19]_i_1_n_0 ;
  wire \control_flit[1]_i_1_n_0 ;
  wire \control_flit[20]_i_1_n_0 ;
  wire \control_flit[21]_i_1_n_0 ;
  wire \control_flit[22]_i_1_n_0 ;
  wire \control_flit[23]_i_1_n_0 ;
  wire \control_flit[24]_i_1_n_0 ;
  wire \control_flit[25]_i_1_n_0 ;
  wire \control_flit[26]_i_1_n_0 ;
  wire \control_flit[27]_i_1_n_0 ;
  wire \control_flit[28]_i_1_n_0 ;
  wire \control_flit[29]_i_1_n_0 ;
  wire \control_flit[2]_i_1_n_0 ;
  wire \control_flit[30]_i_1_n_0 ;
  wire \control_flit[31]_i_1_n_0 ;
  wire \control_flit[31]_i_2_n_0 ;
  wire \control_flit[31]_i_3_n_0 ;
  wire \control_flit[3]_i_1_n_0 ;
  wire \control_flit[4]_i_1_n_0 ;
  wire \control_flit[5]_i_1_n_0 ;
  wire \control_flit[6]_i_1_n_0 ;
  wire \control_flit[7]_i_1_n_0 ;
  wire \control_flit[8]_i_1_n_0 ;
  wire \control_flit[9]_i_1_n_0 ;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [3:0]ctl_cmd;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [15:0]dat_leng;
  (* MARK_DEBUG *) wire f2u_rd_clk;
  (* MARK_DEBUG *) wire [33:0]f2u_rd_data;
  (* MARK_DEBUG *) wire f2u_rd_empty;
  (* MARK_DEBUG *) wire f2u_rd_emptyN;
  (* MARK_DEBUG *) wire [15:0]f2u_rd_items;
  (* MARK_DEBUG *) wire f2u_rd_ready;
  wire f2u_rd_ready_inferred_i_2_n_0;
  wire f2u_rd_ready_inferred_i_4_n_0;
  (* MARK_DEBUG *) wire f2u_rd_valid;
  wire f2u_wr_clk;
  (* MARK_DEBUG *) wire [33:0]f2u_wr_data;
  (* MARK_DEBUG *) wire f2u_wr_full;
  (* MARK_DEBUG *) wire f2u_wr_ready;
  (* MARK_DEBUG *) wire [15:0]f2u_wr_rooms;
  (* MARK_DEBUG *) wire f2u_wr_valid;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [1:0]fifo_sel;
  wire \fifo_sel[0]_i_1_n_0 ;
  wire \fifo_sel[0]_i_2_n_0 ;
  wire \fifo_sel[0]_i_3_n_0 ;
  wire \fifo_sel[0]_i_4_n_0 ;
  wire \fifo_sel[0]_i_5_n_0 ;
  wire \fifo_sel[1]_i_10_n_0 ;
  wire \fifo_sel[1]_i_11_n_0 ;
  wire \fifo_sel[1]_i_12_n_0 ;
  wire \fifo_sel[1]_i_13_n_0 ;
  wire \fifo_sel[1]_i_14_n_0 ;
  wire \fifo_sel[1]_i_1_n_0 ;
  wire \fifo_sel[1]_i_2_n_0 ;
  wire \fifo_sel[1]_i_3_n_0 ;
  wire \fifo_sel[1]_i_4_n_0 ;
  wire \fifo_sel[1]_i_5_n_0 ;
  wire \fifo_sel[1]_i_6_n_0 ;
  wire \fifo_sel[1]_i_7_n_0 ;
  wire \fifo_sel[1]_i_8_n_0 ;
  wire \fifo_sel[1]_i_9_n_0 ;
  wire g0_b0__0_n_0;
  wire g0_b0_n_0;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [1:0]mask;
  wire \mask[0]_i_1_n_0 ;
  wire \mask[1]_i_1_n_0 ;
  wire [4:0]p_0_in__0;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [15:0]pushed;
  wire \pushed[0]_i_1_n_0 ;
  wire \pushed[10]_i_1_n_0 ;
  wire \pushed[11]_i_1_n_0 ;
  wire \pushed[12]_i_1_n_0 ;
  wire \pushed[13]_i_1_n_0 ;
  wire \pushed[14]_i_1_n_0 ;
  wire \pushed[15]_i_1_n_0 ;
  wire \pushed[1]_i_1_n_0 ;
  wire \pushed[2]_i_1_n_0 ;
  wire \pushed[3]_i_1_n_0 ;
  wire \pushed[4]_i_1_n_0 ;
  wire \pushed[5]_i_1_n_0 ;
  wire \pushed[6]_i_1_n_0 ;
  wire \pushed[7]_i_1_n_0 ;
  wire \pushed[7]_i_3_n_0 ;
  wire \pushed[8]_i_1_n_0 ;
  wire \pushed[9]_i_1_n_0 ;
  wire \pushed_reg[15]_i_2_n_1 ;
  wire \pushed_reg[15]_i_2_n_10 ;
  wire \pushed_reg[15]_i_2_n_11 ;
  wire \pushed_reg[15]_i_2_n_12 ;
  wire \pushed_reg[15]_i_2_n_13 ;
  wire \pushed_reg[15]_i_2_n_14 ;
  wire \pushed_reg[15]_i_2_n_15 ;
  wire \pushed_reg[15]_i_2_n_2 ;
  wire \pushed_reg[15]_i_2_n_3 ;
  wire \pushed_reg[15]_i_2_n_4 ;
  wire \pushed_reg[15]_i_2_n_5 ;
  wire \pushed_reg[15]_i_2_n_6 ;
  wire \pushed_reg[15]_i_2_n_7 ;
  wire \pushed_reg[15]_i_2_n_8 ;
  wire \pushed_reg[15]_i_2_n_9 ;
  wire \pushed_reg[7]_i_2_n_0 ;
  wire \pushed_reg[7]_i_2_n_1 ;
  wire \pushed_reg[7]_i_2_n_10 ;
  wire \pushed_reg[7]_i_2_n_11 ;
  wire \pushed_reg[7]_i_2_n_12 ;
  wire \pushed_reg[7]_i_2_n_13 ;
  wire \pushed_reg[7]_i_2_n_14 ;
  wire \pushed_reg[7]_i_2_n_15 ;
  wire \pushed_reg[7]_i_2_n_2 ;
  wire \pushed_reg[7]_i_2_n_3 ;
  wire \pushed_reg[7]_i_2_n_4 ;
  wire \pushed_reg[7]_i_2_n_5 ;
  wire \pushed_reg[7]_i_2_n_6 ;
  wire \pushed_reg[7]_i_2_n_7 ;
  wire \pushed_reg[7]_i_2_n_8 ;
  wire \pushed_reg[7]_i_2_n_9 ;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire reg_clk;
  wire reg_clk_i_1_n_0;
  (* MARK_DEBUG *) wire [15:0]remain;
  wire remain_inferred_i_10_n_0;
  wire remain_inferred_i_11_n_0;
  wire remain_inferred_i_12_n_0;
  wire remain_inferred_i_13_n_0;
  wire remain_inferred_i_14_n_0;
  wire remain_inferred_i_15_n_0;
  wire remain_inferred_i_16_n_0;
  wire remain_inferred_i_17_n_0;
  wire remain_inferred_i_18_n_0;
  wire remain_inferred_i_1_n_1;
  wire remain_inferred_i_1_n_2;
  wire remain_inferred_i_1_n_3;
  wire remain_inferred_i_1_n_4;
  wire remain_inferred_i_1_n_5;
  wire remain_inferred_i_1_n_6;
  wire remain_inferred_i_1_n_7;
  wire remain_inferred_i_2_n_0;
  wire remain_inferred_i_2_n_1;
  wire remain_inferred_i_2_n_2;
  wire remain_inferred_i_2_n_3;
  wire remain_inferred_i_2_n_4;
  wire remain_inferred_i_2_n_5;
  wire remain_inferred_i_2_n_6;
  wire remain_inferred_i_2_n_7;
  wire remain_inferred_i_3_n_0;
  wire remain_inferred_i_4_n_0;
  wire remain_inferred_i_5_n_0;
  wire remain_inferred_i_6_n_0;
  wire remain_inferred_i_7_n_0;
  wire remain_inferred_i_8_n_0;
  wire remain_inferred_i_9_n_0;
  (* MARK_DEBUG *) wire [3:0]req_cmd;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [1:0]sl_ad_reg;
  wire \sl_ad_reg[0]_i_1_n_0 ;
  wire \sl_ad_reg[1]_i_1_n_0 ;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [1:0]sl_mode_reg;
  wire \sl_mode_reg[1]_i_1_n_0 ;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire sl_oe_n_reg;
  wire sl_oe_n_reg_i_1_n_0;
  wire sl_oe_n_reg_i_2_n_0;
  wire sl_oe_n_reg_i_3_n_0;
  wire sl_oe_n_reg_i_4_n_0;
  wire sl_oe_n_reg_i_5_n_0;
  wire sl_oe_n_reg_i_6_n_0;
  wire sl_oe_n_reg_i_7_n_0;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire sl_pktend_n_reg;
  wire sl_pktend_n_reg_i_10_n_0;
  wire sl_pktend_n_reg_i_11_n_0;
  wire sl_pktend_n_reg_i_1_n_0;
  wire sl_pktend_n_reg_i_2_n_0;
  wire sl_pktend_n_reg_i_3_n_0;
  wire sl_pktend_n_reg_i_4_n_0;
  wire sl_pktend_n_reg_i_5_n_0;
  wire sl_pktend_n_reg_i_6_n_0;
  wire sl_pktend_n_reg_i_7_n_0;
  wire sl_pktend_n_reg_i_8_n_0;
  wire sl_pktend_n_reg_i_9_n_0;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire sl_rd_n_reg;
  wire sl_rd_n_reg_i_1_n_0;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire sl_wr_n_reg;
  wire sl_wr_n_reg_i_1_n_0;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [4:0]state;
  wire \state[0]_i_10_n_0 ;
  wire \state[0]_i_11_n_0 ;
  wire \state[0]_i_12_n_0 ;
  wire \state[0]_i_13_n_0 ;
  wire \state[0]_i_14_n_0 ;
  wire \state[0]_i_15_n_0 ;
  wire \state[0]_i_16_n_0 ;
  wire \state[0]_i_17_n_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[0]_i_3_n_0 ;
  wire \state[0]_i_4_n_0 ;
  wire \state[0]_i_5_n_0 ;
  wire \state[0]_i_6_n_0 ;
  wire \state[0]_i_7_n_0 ;
  wire \state[0]_i_8_n_0 ;
  wire \state[0]_i_9_n_0 ;
  wire \state[1]_i_10_n_0 ;
  wire \state[1]_i_11_n_0 ;
  wire \state[1]_i_12_n_0 ;
  wire \state[1]_i_13_n_0 ;
  wire \state[1]_i_2_n_0 ;
  wire \state[1]_i_3_n_0 ;
  wire \state[1]_i_4_n_0 ;
  wire \state[1]_i_5_n_0 ;
  wire \state[1]_i_6_n_0 ;
  wire \state[1]_i_7_n_0 ;
  wire \state[1]_i_8_n_0 ;
  wire \state[1]_i_9_n_0 ;
  wire \state[2]_i_10_n_0 ;
  wire \state[2]_i_11_n_0 ;
  wire \state[2]_i_12_n_0 ;
  wire \state[2]_i_13_n_0 ;
  wire \state[2]_i_14_n_0 ;
  wire \state[2]_i_15_n_0 ;
  wire \state[2]_i_16_n_0 ;
  wire \state[2]_i_17_n_0 ;
  wire \state[2]_i_18_n_0 ;
  wire \state[2]_i_19_n_0 ;
  wire \state[2]_i_20_n_0 ;
  wire \state[2]_i_21_n_0 ;
  wire \state[2]_i_22_n_0 ;
  wire \state[2]_i_23_n_0 ;
  wire \state[2]_i_24_n_0 ;
  wire \state[2]_i_25_n_0 ;
  wire \state[2]_i_26_n_0 ;
  wire \state[2]_i_27_n_0 ;
  wire \state[2]_i_2_n_0 ;
  wire \state[2]_i_3_n_0 ;
  wire \state[2]_i_4_n_0 ;
  wire \state[2]_i_5_n_0 ;
  wire \state[2]_i_6_n_0 ;
  wire \state[2]_i_7_n_0 ;
  wire \state[2]_i_8_n_0 ;
  wire \state[2]_i_9_n_0 ;
  wire \state[3]_i_10_n_0 ;
  wire \state[3]_i_11_n_0 ;
  wire \state[3]_i_12_n_0 ;
  wire \state[3]_i_13_n_0 ;
  wire \state[3]_i_14_n_0 ;
  wire \state[3]_i_15_n_0 ;
  wire \state[3]_i_16_n_0 ;
  wire \state[3]_i_17_n_0 ;
  wire \state[3]_i_18_n_0 ;
  wire \state[3]_i_19_n_0 ;
  wire \state[3]_i_20_n_0 ;
  wire \state[3]_i_21_n_0 ;
  wire \state[3]_i_22_n_0 ;
  wire \state[3]_i_23_n_0 ;
  wire \state[3]_i_24_n_0 ;
  wire \state[3]_i_25_n_0 ;
  wire \state[3]_i_26_n_0 ;
  wire \state[3]_i_27_n_0 ;
  wire \state[3]_i_28_n_0 ;
  wire \state[3]_i_29_n_0 ;
  wire \state[3]_i_2_n_0 ;
  wire \state[3]_i_3_n_0 ;
  wire \state[3]_i_4_n_0 ;
  wire \state[3]_i_5_n_0 ;
  wire \state[3]_i_6_n_0 ;
  wire \state[3]_i_7_n_0 ;
  wire \state[3]_i_8_n_0 ;
  wire \state[3]_i_9_n_0 ;
  wire \state[4]_i_10_n_0 ;
  wire \state[4]_i_11_n_0 ;
  wire \state[4]_i_12_n_0 ;
  wire \state[4]_i_13_n_0 ;
  wire \state[4]_i_14_n_0 ;
  wire \state[4]_i_15_n_0 ;
  wire \state[4]_i_16_n_0 ;
  wire \state[4]_i_17_n_0 ;
  wire \state[4]_i_18_n_0 ;
  wire \state[4]_i_19_n_0 ;
  wire \state[4]_i_2_n_0 ;
  wire \state[4]_i_3_n_0 ;
  wire \state[4]_i_4_n_0 ;
  wire \state[4]_i_5_n_0 ;
  wire \state[4]_i_6_n_0 ;
  wire \state[4]_i_7_n_0 ;
  wire \state[4]_i_8_n_0 ;
  wire \state[4]_i_9_n_0 ;
  (* MARK_DEBUG *) wire [2:0]timeout;
  wire \timeout[0]_i_1_n_0 ;
  wire \timeout[0]_i_2_n_0 ;
  wire \timeout[1]_i_1_n_0 ;
  wire \timeout[1]_i_2_n_0 ;
  wire \timeout[2]_i_1_n_0 ;
  wire \timeout[2]_i_2_n_0 ;
  wire \timeout[2]_i_3_n_0 ;
  wire \timeout[2]_i_4_n_0 ;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [3:0]transactor_sel;
  wire u2f_rd_clk;
  (* MARK_DEBUG *) wire [31:0]u2f_rd_data;
  (* MARK_DEBUG *) wire u2f_rd_empty;
  (* MARK_DEBUG *) wire [15:0]u2f_rd_items;
  (* MARK_DEBUG *) wire u2f_rd_ready;
  (* MARK_DEBUG *) wire u2f_rd_valid;
  (* MARK_DEBUG *) wire u2f_wr_clk;
  (* MARK_DEBUG *) wire [31:0]u2f_wr_data;
  wire \u2f_wr_data[31]_i_1_n_0 ;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire u2f_wr_full;
  (* MARK_DEBUG *) wire u2f_wr_fullN;
  (* MARK_DEBUG *) wire u2f_wr_ready;
  (* MARK_DEBUG *) wire [15:0]u2f_wr_rooms;
  (* MARK_DEBUG *) wire u2f_wr_valid;
  wire u2f_wr_valid_i_1_n_0;
  wire u_cu2f_i_1_n_0;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [15:0]written;
  wire \written[0]_i_1_n_0 ;
  wire \written[10]_i_1_n_0 ;
  wire \written[11]_i_1_n_0 ;
  wire \written[12]_i_1_n_0 ;
  wire \written[13]_i_1_n_0 ;
  wire \written[14]_i_1_n_0 ;
  wire \written[15]_i_1_n_0 ;
  wire \written[15]_i_2_n_0 ;
  wire \written[1]_i_1_n_0 ;
  wire \written[2]_i_1_n_0 ;
  wire \written[3]_i_1_n_0 ;
  wire \written[4]_i_1_n_0 ;
  wire \written[5]_i_1_n_0 ;
  wire \written[6]_i_1_n_0 ;
  wire \written[7]_i_1_n_0 ;
  wire \written[7]_i_3_n_0 ;
  wire \written[8]_i_1_n_0 ;
  wire \written[9]_i_1_n_0 ;
  wire \written_reg[15]_i_3_n_1 ;
  wire \written_reg[15]_i_3_n_10 ;
  wire \written_reg[15]_i_3_n_11 ;
  wire \written_reg[15]_i_3_n_12 ;
  wire \written_reg[15]_i_3_n_13 ;
  wire \written_reg[15]_i_3_n_14 ;
  wire \written_reg[15]_i_3_n_15 ;
  wire \written_reg[15]_i_3_n_2 ;
  wire \written_reg[15]_i_3_n_3 ;
  wire \written_reg[15]_i_3_n_4 ;
  wire \written_reg[15]_i_3_n_5 ;
  wire \written_reg[15]_i_3_n_6 ;
  wire \written_reg[15]_i_3_n_7 ;
  wire \written_reg[15]_i_3_n_8 ;
  wire \written_reg[15]_i_3_n_9 ;
  wire \written_reg[7]_i_2_n_0 ;
  wire \written_reg[7]_i_2_n_1 ;
  wire \written_reg[7]_i_2_n_10 ;
  wire \written_reg[7]_i_2_n_11 ;
  wire \written_reg[7]_i_2_n_12 ;
  wire \written_reg[7]_i_2_n_13 ;
  wire \written_reg[7]_i_2_n_14 ;
  wire \written_reg[7]_i_2_n_15 ;
  wire \written_reg[7]_i_2_n_2 ;
  wire \written_reg[7]_i_2_n_3 ;
  wire \written_reg[7]_i_2_n_4 ;
  wire \written_reg[7]_i_2_n_5 ;
  wire \written_reg[7]_i_2_n_6 ;
  wire \written_reg[7]_i_2_n_7 ;
  wire \written_reg[7]_i_2_n_8 ;
  wire \written_reg[7]_i_2_n_9 ;
  wire \NLW_BLK_VirtexUS.u_sl_pclk_CLKDIV_UNCONNECTED ;
  wire \NLW_BLK_VirtexUS.u_sl_pclk_T_OUT_UNCONNECTED ;
  wire [7:1]\NLW_BLK_VirtexUS.u_sl_pclk_D_UNCONNECTED ;
  wire [7:7]\NLW_pushed_reg[15]_i_2_CO_UNCONNECTED ;
  wire [7:7]NLW_remain_inferred_i_1_CO_UNCONNECTED;
  wire NLW_u_cu2f_emptyN_UNCONNECTED;
  wire NLW_u_df2u_fullN_UNCONNECTED;
  wire NLW_u_du2f_emptyN_UNCONNECTED;
  wire [7:7]\NLW_written_reg[15]_i_3_CO_UNCONNECTED ;

  assign SL_CS_N = \<const0> ;
  assign f2u_rd_clk = SYS_CLK;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "ODDRE1" *) 
  (* XILINX_TRANSFORM_PINMAP = "C:CLK SR:RST Q:OQ D1:D[0] D2:D[4]" *) 
  OSERDESE3 #(
    .INIT(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .ODDR_MODE("TRUE"),
    .OSERDES_T_BYPASS("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS")) 
    \BLK_VirtexUS.u_sl_pclk 
       (.CLK(f2u_rd_clk),
        .CLKDIV(\NLW_BLK_VirtexUS.u_sl_pclk_CLKDIV_UNCONNECTED ),
        .D({\NLW_BLK_VirtexUS.u_sl_pclk_D_UNCONNECTED [7:5],1'b1,\NLW_BLK_VirtexUS.u_sl_pclk_D_UNCONNECTED [3:1],1'b0}),
        .OQ(SL_PCLK),
        .RST(1'b0),
        .T(1'b0),
        .T_OUT(\NLW_BLK_VirtexUS.u_sl_pclk_T_OUT_UNCONNECTED ));
  GND GND
       (.G(\<const0> ));
  LUT6 #(
    .INIT(64'h020FFE7000000000)) 
    \SL_AD[0]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[4]),
        .I5(SL_AD[0]),
        .O(\SL_AD[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \SL_AD[1]_i_1 
       (.I0(SL_AD[1]),
        .I1(\SL_AD[1]_i_3_n_0 ),
        .I2(\SL_AD[1]_i_4_n_0 ),
        .O(\SL_AD[1]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \SL_AD[1]_i_2 
       (.I0(SYS_RST_N),
        .O(\SL_AD[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h465E5652)) 
    \SL_AD[1]_i_3 
       (.I0(state[4]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[1]),
        .I4(state[0]),
        .O(\SL_AD[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08080808080808A8)) 
    \SL_AD[1]_i_4 
       (.I0(\SL_AD[1]_i_5_n_0 ),
        .I1(\SL_AD[1]_i_6_n_0 ),
        .I2(\SL_AD[1]_i_7_n_0 ),
        .I3(ctl_cmd[1]),
        .I4(state[3]),
        .I5(\SL_AD[1]_i_8_n_0 ),
        .O(\SL_AD[1]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \SL_AD[1]_i_5 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[4]),
        .O(\SL_AD[1]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0888)) 
    \SL_AD[1]_i_6 
       (.I0(sl_mode_reg[1]),
        .I1(mask[1]),
        .I2(sl_mode_reg[0]),
        .I3(mask[0]),
        .O(\SL_AD[1]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFF2A)) 
    \SL_AD[1]_i_7 
       (.I0(state[3]),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .O(\SL_AD[1]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hF4FFFF4F)) 
    \SL_AD[1]_i_8 
       (.I0(\fifo_sel[1]_i_12_n_0 ),
        .I1(\SL_AD[1]_i_9_n_0 ),
        .I2(ctl_cmd[3]),
        .I3(ctl_cmd[0]),
        .I4(ctl_cmd[2]),
        .O(\SL_AD[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \SL_AD[1]_i_9 
       (.I0(dat_leng[3]),
        .I1(dat_leng[6]),
        .I2(ctl_cmd[0]),
        .I3(dat_leng[0]),
        .I4(dat_leng[12]),
        .I5(dat_leng[9]),
        .O(\SL_AD[1]_i_9_n_0 ));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_AD_reg[0] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_AD[0]_i_1_n_0 ),
        .Q(SL_AD[0]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_AD_reg[1] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(\SL_AD[1]_i_1_n_0 ),
        .Q(SL_AD[1]));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \SL_DT_O[0]_i_1 
       (.I0(\SL_DT_O[19]_i_2_n_0 ),
        .I1(\SL_DT_O[28]_i_2_n_0 ),
        .I2(SL_DT_O[0]),
        .I3(f2u_rd_data[0]),
        .I4(\SL_DT_O[28]_i_3_n_0 ),
        .O(\SL_DT_O[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \SL_DT_O[10]_i_1 
       (.I0(\SL_DT_O[19]_i_2_n_0 ),
        .I1(\SL_DT_O[28]_i_2_n_0 ),
        .I2(SL_DT_O[10]),
        .I3(f2u_rd_data[10]),
        .I4(\SL_DT_O[28]_i_3_n_0 ),
        .O(\SL_DT_O[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[11]_i_1 
       (.I0(f2u_rd_data[11]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[11]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[12]_i_1 
       (.I0(f2u_rd_data[12]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[12]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[13]_i_1 
       (.I0(f2u_rd_data[13]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[13]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[14]_i_1 
       (.I0(f2u_rd_data[14]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[14]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[15]_i_1 
       (.I0(f2u_rd_data[15]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[15]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[16]_i_1 
       (.I0(f2u_rd_data[16]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[16]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[17]_i_1 
       (.I0(f2u_rd_data[17]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[17]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[18]_i_1 
       (.I0(f2u_rd_data[18]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[18]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \SL_DT_O[19]_i_1 
       (.I0(\SL_DT_O[19]_i_2_n_0 ),
        .I1(\SL_DT_O[28]_i_2_n_0 ),
        .I2(SL_DT_O[19]),
        .I3(f2u_rd_data[19]),
        .I4(\SL_DT_O[28]_i_3_n_0 ),
        .O(\SL_DT_O[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \SL_DT_O[19]_i_2 
       (.I0(state[2]),
        .I1(\SL_DT_O[19]_i_3_n_0 ),
        .I2(\SL_DT_O[29]_i_4_n_0 ),
        .I3(cnt[1]),
        .I4(cnt[0]),
        .I5(\SL_DT_O[29]_i_6_n_0 ),
        .O(\SL_DT_O[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \SL_DT_O[19]_i_3 
       (.I0(state[0]),
        .I1(state[4]),
        .O(\SL_DT_O[19]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[1]_i_1 
       (.I0(f2u_rd_data[1]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[1]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAFFEAEAEAFFEA)) 
    \SL_DT_O[20]_i_1 
       (.I0(\SL_DT_O[20]_i_2_n_0 ),
        .I1(\SL_DT_O[28]_i_3_n_0 ),
        .I2(f2u_rd_data[20]),
        .I3(\SL_DT_O[20]_i_3_n_0 ),
        .I4(cnt[0]),
        .I5(cnt[1]),
        .O(\SL_DT_O[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h888888888F888888)) 
    \SL_DT_O[20]_i_2 
       (.I0(\SL_DT_O[28]_i_2_n_0 ),
        .I1(SL_DT_O[20]),
        .I2(\SL_DT_O[29]_i_4_n_0 ),
        .I3(\SL_DT_O[29]_i_3_n_0 ),
        .I4(cnt[1]),
        .I5(cnt[0]),
        .O(\SL_DT_O[20]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \SL_DT_O[20]_i_3 
       (.I0(\SL_DT_O[29]_i_3_n_0 ),
        .I1(cnt[1]),
        .I2(cnt[0]),
        .I3(\SL_DT_O[29]_i_4_n_0 ),
        .O(\SL_DT_O[20]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[21]_i_1 
       (.I0(f2u_rd_data[21]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[21]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \SL_DT_O[22]_i_1 
       (.I0(\SL_DT_O[28]_i_4_n_0 ),
        .I1(\SL_DT_O[28]_i_2_n_0 ),
        .I2(SL_DT_O[22]),
        .I3(f2u_rd_data[22]),
        .I4(\SL_DT_O[28]_i_3_n_0 ),
        .O(\SL_DT_O[22]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[23]_i_1 
       (.I0(f2u_rd_data[23]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[23]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[23]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \SL_DT_O[24]_i_1 
       (.I0(\SL_DT_O[28]_i_4_n_0 ),
        .I1(\SL_DT_O[28]_i_2_n_0 ),
        .I2(SL_DT_O[24]),
        .I3(f2u_rd_data[24]),
        .I4(\SL_DT_O[28]_i_3_n_0 ),
        .O(\SL_DT_O[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAEAAAEAABEAAAEAA)) 
    \SL_DT_O[25]_i_1 
       (.I0(\SL_DT_O[25]_i_2_n_0 ),
        .I1(cnt[0]),
        .I2(cnt[1]),
        .I3(\SL_DT_O[25]_i_3_n_0 ),
        .I4(timeout[0]),
        .I5(\SL_DT_O[25]_i_4_n_0 ),
        .O(\SL_DT_O[25]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[25]_i_2 
       (.I0(f2u_rd_data[25]),
        .I1(\SL_DT_O[28]_i_3_n_0 ),
        .I2(SL_DT_O[25]),
        .I3(\SL_DT_O[28]_i_2_n_0 ),
        .O(\SL_DT_O[25]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h4)) 
    \SL_DT_O[25]_i_3 
       (.I0(\SL_DT_O[29]_i_4_n_0 ),
        .I1(\SL_DT_O[29]_i_3_n_0 ),
        .O(\SL_DT_O[25]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \SL_DT_O[25]_i_4 
       (.I0(timeout[2]),
        .I1(timeout[1]),
        .O(\SL_DT_O[25]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hAAEAAAAA)) 
    \SL_DT_O[26]_i_1 
       (.I0(\SL_DT_O[26]_i_2_n_0 ),
        .I1(\SL_DT_O[26]_i_3_n_0 ),
        .I2(\SL_DT_O[26]_i_4_n_0 ),
        .I3(\SL_DT_O[29]_i_4_n_0 ),
        .I4(\SL_DT_O[29]_i_3_n_0 ),
        .O(\SL_DT_O[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[26]_i_2 
       (.I0(f2u_rd_data[26]),
        .I1(\SL_DT_O[28]_i_3_n_0 ),
        .I2(SL_DT_O[26]),
        .I3(\SL_DT_O[28]_i_2_n_0 ),
        .O(\SL_DT_O[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \SL_DT_O[26]_i_3 
       (.I0(written[12]),
        .I1(written[13]),
        .I2(written[14]),
        .I3(written[15]),
        .I4(cnt[0]),
        .I5(cnt[1]),
        .O(\SL_DT_O[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \SL_DT_O[26]_i_4 
       (.I0(\SL_DT_O[26]_i_5_n_0 ),
        .I1(written[7]),
        .I2(written[6]),
        .I3(written[5]),
        .I4(written[4]),
        .I5(\SL_DT_O[26]_i_6_n_0 ),
        .O(\SL_DT_O[26]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \SL_DT_O[26]_i_5 
       (.I0(written[11]),
        .I1(written[10]),
        .I2(written[9]),
        .I3(written[8]),
        .O(\SL_DT_O[26]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \SL_DT_O[26]_i_6 
       (.I0(written[1]),
        .I1(written[0]),
        .I2(written[3]),
        .I3(written[2]),
        .O(\SL_DT_O[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \SL_DT_O[27]_i_1 
       (.I0(\SL_DT_O[28]_i_2_n_0 ),
        .I1(SL_DT_O[27]),
        .I2(\SL_DT_O[28]_i_3_n_0 ),
        .I3(f2u_rd_data[27]),
        .I4(reg_clk),
        .I5(\SL_DT_O[28]_i_4_n_0 ),
        .O(\SL_DT_O[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \SL_DT_O[28]_i_1 
       (.I0(\SL_DT_O[28]_i_2_n_0 ),
        .I1(SL_DT_O[28]),
        .I2(\SL_DT_O[28]_i_3_n_0 ),
        .I3(f2u_rd_data[28]),
        .I4(u2f_wr_full),
        .I5(\SL_DT_O[28]_i_4_n_0 ),
        .O(\SL_DT_O[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4C4C5C5CCCFFFFFF)) 
    \SL_DT_O[28]_i_2 
       (.I0(state[4]),
        .I1(f2u_rd_empty),
        .I2(state[2]),
        .I3(SL_PRE_FULL_N),
        .I4(SL_FULL_N),
        .I5(state[0]),
        .O(\SL_DT_O[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1100300033333000)) 
    \SL_DT_O[28]_i_3 
       (.I0(state[4]),
        .I1(f2u_rd_empty),
        .I2(SL_PRE_FULL_N),
        .I3(SL_FULL_N),
        .I4(state[0]),
        .I5(state[2]),
        .O(\SL_DT_O[28]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \SL_DT_O[28]_i_4 
       (.I0(cnt[0]),
        .I1(cnt[1]),
        .I2(\SL_DT_O[25]_i_3_n_0 ),
        .O(\SL_DT_O[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAEEAAAEAAEAAAAA)) 
    \SL_DT_O[29]_i_1 
       (.I0(\SL_DT_O[29]_i_2_n_0 ),
        .I1(\SL_DT_O[29]_i_3_n_0 ),
        .I2(cnt[0]),
        .I3(\SL_DT_O[29]_i_4_n_0 ),
        .I4(cnt[1]),
        .I5(\SL_DT_O[29]_i_5_n_0 ),
        .O(\SL_DT_O[29]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \SL_DT_O[29]_i_10 
       (.I0(pushed[9]),
        .I1(pushed[8]),
        .I2(pushed[7]),
        .I3(pushed[6]),
        .O(\SL_DT_O[29]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \SL_DT_O[29]_i_11 
       (.I0(pushed[10]),
        .I1(pushed[11]),
        .I2(pushed[12]),
        .I3(pushed[13]),
        .I4(pushed[15]),
        .I5(pushed[14]),
        .O(\SL_DT_O[29]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[29]_i_2 
       (.I0(f2u_rd_data[29]),
        .I1(\SL_DT_O[28]_i_3_n_0 ),
        .I2(SL_DT_O[29]),
        .I3(\SL_DT_O[28]_i_2_n_0 ),
        .O(\SL_DT_O[29]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \SL_DT_O[29]_i_3 
       (.I0(\SL_DT_O[29]_i_6_n_0 ),
        .I1(state[2]),
        .I2(state[0]),
        .I3(state[4]),
        .O(\SL_DT_O[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \SL_DT_O[29]_i_4 
       (.I0(\SL_DT_O[29]_i_7_n_0 ),
        .I1(cnt[5]),
        .I2(cnt[4]),
        .I3(cnt[7]),
        .I4(cnt[6]),
        .I5(\SL_DT_O[29]_i_8_n_0 ),
        .O(\SL_DT_O[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \SL_DT_O[29]_i_5 
       (.I0(pushed[1]),
        .I1(pushed[0]),
        .I2(cnt[1]),
        .I3(\SL_DT_O[29]_i_9_n_0 ),
        .I4(\SL_DT_O[29]_i_10_n_0 ),
        .I5(\SL_DT_O[29]_i_11_n_0 ),
        .O(\SL_DT_O[29]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00010000)) 
    \SL_DT_O[29]_i_6 
       (.I0(req_cmd[2]),
        .I1(req_cmd[3]),
        .I2(req_cmd[0]),
        .I3(req_cmd[1]),
        .I4(SL_FULL_N),
        .O(\SL_DT_O[29]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \SL_DT_O[29]_i_7 
       (.I0(cnt[9]),
        .I1(cnt[8]),
        .I2(cnt[11]),
        .I3(cnt[10]),
        .O(\SL_DT_O[29]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \SL_DT_O[29]_i_8 
       (.I0(cnt[14]),
        .I1(cnt[15]),
        .I2(cnt[12]),
        .I3(cnt[13]),
        .I4(cnt[3]),
        .I5(cnt[2]),
        .O(\SL_DT_O[29]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \SL_DT_O[29]_i_9 
       (.I0(pushed[5]),
        .I1(pushed[4]),
        .I2(pushed[3]),
        .I3(pushed[2]),
        .O(\SL_DT_O[29]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[2]_i_1 
       (.I0(f2u_rd_data[2]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[2]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[30]_i_1 
       (.I0(f2u_rd_data[30]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[30]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h04600020)) 
    \SL_DT_O[31]_i_1 
       (.I0(state[4]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .O(\SL_DT_O[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[31]_i_2 
       (.I0(f2u_rd_data[31]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[31]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2200300033333000)) 
    \SL_DT_O[31]_i_3 
       (.I0(state[3]),
        .I1(f2u_rd_empty),
        .I2(SL_PRE_FULL_N),
        .I3(SL_FULL_N),
        .I4(state[0]),
        .I5(state[2]),
        .O(\SL_DT_O[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8C8CAEAECCFFFFFF)) 
    \SL_DT_O[31]_i_4 
       (.I0(state[3]),
        .I1(f2u_rd_empty),
        .I2(state[2]),
        .I3(SL_PRE_FULL_N),
        .I4(SL_FULL_N),
        .I5(state[0]),
        .O(\SL_DT_O[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \SL_DT_O[3]_i_1 
       (.I0(\SL_DT_O[19]_i_2_n_0 ),
        .I1(\SL_DT_O[28]_i_2_n_0 ),
        .I2(SL_DT_O[3]),
        .I3(f2u_rd_data[3]),
        .I4(\SL_DT_O[28]_i_3_n_0 ),
        .O(\SL_DT_O[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[4]_i_1 
       (.I0(f2u_rd_data[4]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[4]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \SL_DT_O[5]_i_1 
       (.I0(\SL_DT_O[19]_i_2_n_0 ),
        .I1(\SL_DT_O[28]_i_2_n_0 ),
        .I2(SL_DT_O[5]),
        .I3(f2u_rd_data[5]),
        .I4(\SL_DT_O[28]_i_3_n_0 ),
        .O(\SL_DT_O[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[6]_i_1 
       (.I0(f2u_rd_data[6]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[6]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \SL_DT_O[7]_i_1 
       (.I0(f2u_rd_data[7]),
        .I1(\SL_DT_O[31]_i_3_n_0 ),
        .I2(SL_DT_O[7]),
        .I3(\SL_DT_O[31]_i_4_n_0 ),
        .O(\SL_DT_O[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \SL_DT_O[8]_i_1 
       (.I0(\SL_DT_O[19]_i_2_n_0 ),
        .I1(\SL_DT_O[28]_i_2_n_0 ),
        .I2(SL_DT_O[8]),
        .I3(f2u_rd_data[8]),
        .I4(\SL_DT_O[28]_i_3_n_0 ),
        .O(\SL_DT_O[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \SL_DT_O[9]_i_1 
       (.I0(\SL_DT_O[28]_i_2_n_0 ),
        .I1(SL_DT_O[9]),
        .I2(\SL_DT_O[28]_i_3_n_0 ),
        .I3(f2u_rd_data[9]),
        .I4(\SL_DT_O[9]_i_2_n_0 ),
        .I5(\SL_DT_O[25]_i_3_n_0 ),
        .O(\SL_DT_O[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SL_DT_O[9]_i_2 
       (.I0(cnt[0]),
        .I1(cnt[1]),
        .O(\SL_DT_O[9]_i_2_n_0 ));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[0] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[0]_i_1_n_0 ),
        .Q(SL_DT_O[0]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[10] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[10]_i_1_n_0 ),
        .Q(SL_DT_O[10]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[11] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[11]_i_1_n_0 ),
        .Q(SL_DT_O[11]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[12] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[12]_i_1_n_0 ),
        .Q(SL_DT_O[12]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[13] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[13]_i_1_n_0 ),
        .Q(SL_DT_O[13]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[14] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[14]_i_1_n_0 ),
        .Q(SL_DT_O[14]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[15] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[15]_i_1_n_0 ),
        .Q(SL_DT_O[15]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[16] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[16]_i_1_n_0 ),
        .Q(SL_DT_O[16]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[17] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[17]_i_1_n_0 ),
        .Q(SL_DT_O[17]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[18] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[18]_i_1_n_0 ),
        .Q(SL_DT_O[18]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[19] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[19]_i_1_n_0 ),
        .Q(SL_DT_O[19]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[1] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[1]_i_1_n_0 ),
        .Q(SL_DT_O[1]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[20] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[20]_i_1_n_0 ),
        .Q(SL_DT_O[20]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[21] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[21]_i_1_n_0 ),
        .Q(SL_DT_O[21]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[22] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[22]_i_1_n_0 ),
        .Q(SL_DT_O[22]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[23] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[23]_i_1_n_0 ),
        .Q(SL_DT_O[23]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[24] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[24]_i_1_n_0 ),
        .Q(SL_DT_O[24]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[25] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[25]_i_1_n_0 ),
        .Q(SL_DT_O[25]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[26] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[26]_i_1_n_0 ),
        .Q(SL_DT_O[26]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[27] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[27]_i_1_n_0 ),
        .Q(SL_DT_O[27]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[28] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[28]_i_1_n_0 ),
        .Q(SL_DT_O[28]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[29] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[29]_i_1_n_0 ),
        .Q(SL_DT_O[29]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[2] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[2]_i_1_n_0 ),
        .Q(SL_DT_O[2]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[30] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[30]_i_1_n_0 ),
        .Q(SL_DT_O[30]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[31] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[31]_i_2_n_0 ),
        .Q(SL_DT_O[31]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[3] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[3]_i_1_n_0 ),
        .Q(SL_DT_O[3]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[4] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[4]_i_1_n_0 ),
        .Q(SL_DT_O[4]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[5] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[5]_i_1_n_0 ),
        .Q(SL_DT_O[5]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[6] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[6]_i_1_n_0 ),
        .Q(SL_DT_O[6]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[7] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[7]_i_1_n_0 ),
        .Q(SL_DT_O[7]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[8] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[8]_i_1_n_0 ),
        .Q(SL_DT_O[8]));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \SL_DT_O_reg[9] 
       (.C(f2u_rd_clk),
        .CE(\SL_DT_O[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\SL_DT_O[9]_i_1_n_0 ),
        .Q(SL_DT_O[9]));
  LUT6 #(
    .INIT(64'hFFFFFDFCFFFCFCFC)) 
    SL_DT_T_i_1
       (.I0(state[2]),
        .I1(SL_DT_T_i_2_n_0),
        .I2(SL_DT_T_i_3_n_0),
        .I3(SL_DT_T),
        .I4(state[3]),
        .I5(state[4]),
        .O(SL_DT_T_i_1_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAA2000000)) 
    SL_DT_T_i_2
       (.I0(SL_DT_T_i_4_n_0),
        .I1(ctl_cmd[0]),
        .I2(\state[2]_i_10_n_0 ),
        .I3(ctl_cmd[2]),
        .I4(state[2]),
        .I5(SL_DT_T_i_5_n_0),
        .O(SL_DT_T_i_2_n_0));
  LUT5 #(
    .INIT(32'hF8F8F000)) 
    SL_DT_T_i_3
       (.I0(state[2]),
        .I1(state[4]),
        .I2(SL_DT_T),
        .I3(state[0]),
        .I4(state[1]),
        .O(SL_DT_T_i_3_n_0));
  LUT5 #(
    .INIT(32'h00000203)) 
    SL_DT_T_i_4
       (.I0(state[2]),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[4]),
        .I4(state[3]),
        .O(SL_DT_T_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFF30FFAAFFAA)) 
    SL_DT_T_i_5
       (.I0(\control_flit[12]_i_4_n_0 ),
        .I1(ctl_cmd[2]),
        .I2(SL_DT_T_i_6_n_0),
        .I3(state[4]),
        .I4(ctl_cmd[1]),
        .I5(state[2]),
        .O(SL_DT_T_i_5_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    SL_DT_T_i_6
       (.I0(ctl_cmd[0]),
        .I1(ctl_cmd[3]),
        .O(SL_DT_T_i_6_n_0));
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    SL_DT_T_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(SL_DT_T_i_1_n_0),
        .PRE(u_cu2f_i_1_n_0),
        .Q(SL_DT_T));
  LUT6 #(
    .INIT(64'hAAFFAAAAAAAEAAAA)) 
    SL_OE_N_i_1
       (.I0(SL_OE_N_i_2_n_0),
        .I1(SL_OE_N_i_3_n_0),
        .I2(state[1]),
        .I3(state[0]),
        .I4(state[2]),
        .I5(state[3]),
        .O(SL_OE_N_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEEEEFEEEECC)) 
    SL_OE_N_i_2
       (.I0(state[4]),
        .I1(SL_OE_N_i_4_n_0),
        .I2(state[1]),
        .I3(state[2]),
        .I4(state[3]),
        .I5(SL_OE_N),
        .O(SL_OE_N_i_2_n_0));
  LUT4 #(
    .INIT(16'hFEEF)) 
    SL_OE_N_i_3
       (.I0(\state[2]_i_10_n_0 ),
        .I1(ctl_cmd[0]),
        .I2(ctl_cmd[2]),
        .I3(ctl_cmd[1]),
        .O(SL_OE_N_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000AAA2AAAAAAA2)) 
    SL_OE_N_i_4
       (.I0(\sl_mode_reg[1]_i_1_n_0 ),
        .I1(SL_EMPTY_N),
        .I2(cmd_wr_fullN),
        .I3(sl_mode_reg[1]),
        .I4(sl_mode_reg[0]),
        .I5(mask[0]),
        .O(SL_OE_N_i_4_n_0));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* xc_pullup = "1" *) 
  FDPE #(
    .INIT(1'b1)) 
    SL_OE_N_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(SL_OE_N_i_1_n_0),
        .PRE(u_cu2f_i_1_n_0),
        .Q(SL_OE_N));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF202)) 
    SL_PKTEND_N_i_1
       (.I0(SL_PKTEND_N_i_2_n_0),
        .I1(state[1]),
        .I2(state[2]),
        .I3(SL_PKTEND_N_i_3_n_0),
        .I4(SL_PKTEND_N_i_4_n_0),
        .I5(SL_PKTEND_N_i_5_n_0),
        .O(SL_PKTEND_N_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFF004000400040)) 
    SL_PKTEND_N_i_2
       (.I0(\cnt[0]_i_8_n_0 ),
        .I1(state[4]),
        .I2(state[0]),
        .I3(f2u_rd_data[32]),
        .I4(f2u_rd_empty),
        .I5(SL_PKTEND_N),
        .O(SL_PKTEND_N_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFCFEECC)) 
    SL_PKTEND_N_i_3
       (.I0(SL_PKTEND_N_i_6_n_0),
        .I1(SL_PKTEND_N_i_7_n_0),
        .I2(SL_FULL_N),
        .I3(sl_pktend_n_reg_i_3_n_0),
        .I4(state[4]),
        .I5(SL_PKTEND_N_i_8_n_0),
        .O(SL_PKTEND_N_i_3_n_0));
  LUT6 #(
    .INIT(64'h80FF808080808080)) 
    SL_PKTEND_N_i_4
       (.I0(SL_PKTEND_N_i_9_n_0),
        .I1(SL_PKTEND_N),
        .I2(state[3]),
        .I3(\SL_DT_O[29]_i_4_n_0 ),
        .I4(state[1]),
        .I5(state[4]),
        .O(SL_PKTEND_N_i_4_n_0));
  LUT6 #(
    .INIT(64'hF00CF00CFF0CFCCD)) 
    SL_PKTEND_N_i_5
       (.I0(state[2]),
        .I1(SL_PKTEND_N),
        .I2(state[3]),
        .I3(state[4]),
        .I4(state[1]),
        .I5(state[0]),
        .O(SL_PKTEND_N_i_5_n_0));
  LUT6 #(
    .INIT(64'h0040044000400040)) 
    SL_PKTEND_N_i_6
       (.I0(f2u_rd_data[32]),
        .I1(state[3]),
        .I2(state[1]),
        .I3(state[0]),
        .I4(f2u_rd_empty),
        .I5(SL_FULL_N),
        .O(SL_PKTEND_N_i_6_n_0));
  LUT6 #(
    .INIT(64'hFF000808FF00FF00)) 
    SL_PKTEND_N_i_7
       (.I0(SL_PKTEND_N),
        .I1(state[3]),
        .I2(SL_WR_N1),
        .I3(state[4]),
        .I4(state[1]),
        .I5(state[0]),
        .O(SL_PKTEND_N_i_7_n_0));
  LUT6 #(
    .INIT(64'h0800080808080808)) 
    SL_PKTEND_N_i_8
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[0]),
        .I3(f2u_rd_empty),
        .I4(SL_PRE_FULL_N),
        .I5(SL_FULL_N),
        .O(SL_PKTEND_N_i_8_n_0));
  LUT3 #(
    .INIT(8'h8F)) 
    SL_PKTEND_N_i_9
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[2]),
        .O(SL_PKTEND_N_i_9_n_0));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* xc_pullup = "1" *) 
  FDPE #(
    .INIT(1'b1)) 
    SL_PKTEND_N_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(SL_PKTEND_N_i_1_n_0),
        .PRE(u_cu2f_i_1_n_0),
        .Q(SL_PKTEND_N));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000010)) 
    SL_RD_N0_i_1
       (.I0(state[4]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .I5(sl_rd_n_reg),
        .O(SL_RD_N00));
  FDPE #(
    .INIT(1'b1)) 
    SL_RD_N0_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(SL_RD_N00),
        .PRE(u_cu2f_i_1_n_0),
        .Q(SL_RD_N0_reg_n_0));
  FDPE #(
    .INIT(1'b1)) 
    SL_RD_N1_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(SL_RD_N0_reg_n_0),
        .PRE(u_cu2f_i_1_n_0),
        .Q(SL_RD_N1));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF60000)) 
    SL_RD_N_i_1
       (.I0(state[1]),
        .I1(state[2]),
        .I2(state[0]),
        .I3(SL_RD_N_i_2_n_0),
        .I4(SL_RD_N),
        .I5(SL_RD_N_i_3_n_0),
        .O(SL_RD_N_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    SL_RD_N_i_2
       (.I0(state[4]),
        .I1(state[3]),
        .O(SL_RD_N_i_2_n_0));
  LUT6 #(
    .INIT(64'h3E3E3E3E3E3E323E)) 
    SL_RD_N_i_3
       (.I0(SL_RD_N0),
        .I1(SL_RD_N_i_4_n_0),
        .I2(SL_RD_N_i_5_n_0),
        .I3(SL_EMPTY_N),
        .I4(cmd_wr_fullN),
        .I5(\control_flit[12]_i_3_n_0 ),
        .O(SL_RD_N_i_3_n_0));
  LUT5 #(
    .INIT(32'h524E5253)) 
    SL_RD_N_i_4
       (.I0(state[4]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[1]),
        .I4(state[0]),
        .O(SL_RD_N_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFF6)) 
    SL_RD_N_i_5
       (.I0(state[1]),
        .I1(state[2]),
        .I2(state[0]),
        .I3(state[3]),
        .I4(state[4]),
        .O(SL_RD_N_i_5_n_0));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* xc_pullup = "1" *) 
  FDPE #(
    .INIT(1'b1)) 
    SL_RD_N_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(SL_RD_N_i_1_n_0),
        .PRE(u_cu2f_i_1_n_0),
        .Q(SL_RD_N));
  LUT3 #(
    .INIT(8'hF8)) 
    SL_WR_N_i_1
       (.I0(SL_WR_N),
        .I1(SL_WR_N_i_2_n_0),
        .I2(SL_WR_N_i_3_n_0),
        .O(SL_WR_N_i_1_n_0));
  LUT5 #(
    .INIT(32'h73037333)) 
    SL_WR_N_i_2
       (.I0(SL_WR_N_i_4_n_0),
        .I1(SL_WR_N_i_5_n_0),
        .I2(SL_WR_N_i_6_n_0),
        .I3(f2u_rd_empty),
        .I4(SL_FULL_N),
        .O(SL_WR_N_i_2_n_0));
  LUT6 #(
    .INIT(64'hEAFFEAEAEAEAEAEA)) 
    SL_WR_N_i_3
       (.I0(sl_pktend_n_reg_i_4_n_0),
        .I1(SL_WR_N_i_7_n_0),
        .I2(f2u_rd_data[33]),
        .I3(SL_FULL_N),
        .I4(SL_WR_N_i_5_n_0),
        .I5(SL_WR_N_i_4_n_0),
        .O(SL_WR_N_i_3_n_0));
  LUT5 #(
    .INIT(32'h0F6F071E)) 
    SL_WR_N_i_4
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[4]),
        .I3(state[3]),
        .I4(state[0]),
        .O(SL_WR_N_i_4_n_0));
  LUT5 #(
    .INIT(32'h020000C0)) 
    SL_WR_N_i_5
       (.I0(state[2]),
        .I1(state[0]),
        .I2(state[4]),
        .I3(state[1]),
        .I4(state[3]),
        .O(SL_WR_N_i_5_n_0));
  LUT5 #(
    .INIT(32'hAEAAA229)) 
    SL_WR_N_i_6
       (.I0(state[4]),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(state[3]),
        .O(SL_WR_N_i_6_n_0));
  LUT6 #(
    .INIT(64'h002000002222AAAA)) 
    SL_WR_N_i_7
       (.I0(sl_pktend_n_reg_i_3_n_0),
        .I1(f2u_rd_empty),
        .I2(SL_FULL_N),
        .I3(SL_WR_N_i_5_n_0),
        .I4(SL_WR_N_i_6_n_0),
        .I5(SL_WR_N_i_4_n_0),
        .O(SL_WR_N_i_7_n_0));
  (* IOB = "TRUE" *) 
  (* KEEP = "yes" *) 
  (* xc_pullup = "1" *) 
  FDPE #(
    .INIT(1'b1)) 
    SL_WR_N_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(SL_WR_N_i_1_n_0),
        .PRE(\SL_AD[1]_i_2_n_0 ),
        .Q(SL_WR_N));
  LUT3 #(
    .INIT(8'h80)) 
    SYS_RST_N_inferred_i_1
       (.I0(SL_RST_N),
        .I1(SYS_CLK_STABLE),
        .I2(SL_PCLK_STABLE),
        .O(SYS_RST_N));
  LUT2 #(
    .INIT(4'h1)) 
    \cmd_wr_data[31]_i_1 
       (.I0(fifo_sel[0]),
        .I1(fifo_sel[1]),
        .O(\cmd_wr_data[31]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[0] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[0]),
        .Q(cmd_wr_data[0]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[10] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[10]),
        .Q(cmd_wr_data[10]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[11] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[11]),
        .Q(cmd_wr_data[11]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[12] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[12]),
        .Q(cmd_wr_data[12]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[13] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[13]),
        .Q(cmd_wr_data[13]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[14] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[14]),
        .Q(cmd_wr_data[14]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[15] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[15]),
        .Q(cmd_wr_data[15]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[16] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[16]),
        .Q(cmd_wr_data[16]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[17] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[17]),
        .Q(cmd_wr_data[17]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[18] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[18]),
        .Q(cmd_wr_data[18]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[19] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[19]),
        .Q(cmd_wr_data[19]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[1] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[1]),
        .Q(cmd_wr_data[1]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[20] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[20]),
        .Q(cmd_wr_data[20]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[21] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[21]),
        .Q(cmd_wr_data[21]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[22] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[22]),
        .Q(cmd_wr_data[22]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[23] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[23]),
        .Q(cmd_wr_data[23]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[24] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[24]),
        .Q(cmd_wr_data[24]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[25] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[25]),
        .Q(cmd_wr_data[25]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[26] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[26]),
        .Q(cmd_wr_data[26]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[27] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[27]),
        .Q(cmd_wr_data[27]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[28] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[28]),
        .Q(cmd_wr_data[28]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[29] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[29]),
        .Q(cmd_wr_data[29]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[2] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[2]),
        .Q(cmd_wr_data[2]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[30] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[30]),
        .Q(cmd_wr_data[30]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[31] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[31]),
        .Q(cmd_wr_data[31]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[3] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[3]),
        .Q(cmd_wr_data[3]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[4] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[4]),
        .Q(cmd_wr_data[4]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[5] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[5]),
        .Q(cmd_wr_data[5]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[6] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[6]),
        .Q(cmd_wr_data[6]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[7] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[7]),
        .Q(cmd_wr_data[7]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[8] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[8]),
        .Q(cmd_wr_data[8]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cmd_wr_data_reg[9] 
       (.C(f2u_rd_clk),
        .CE(\cmd_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[9]),
        .Q(cmd_wr_data[9]));
  LUT3 #(
    .INIT(8'h01)) 
    cmd_wr_valid_i_1
       (.I0(SL_RD_N1),
        .I1(fifo_sel[1]),
        .I2(fifo_sel[0]),
        .O(cmd_wr_valid_i_1_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    cmd_wr_valid_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(cmd_wr_valid_i_1_n_0),
        .Q(cmd_wr_valid));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBBBA)) 
    \cnt[0]_i_1 
       (.I0(\cnt[0]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[0]_i_3_n_0 ),
        .I3(\cnt[0]_i_4_n_0 ),
        .I4(\cnt[0]_i_5_n_0 ),
        .I5(\cnt[0]_i_6_n_0 ),
        .O(\cnt[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAA8AA0A00000200)) 
    \cnt[0]_i_10 
       (.I0(\cnt[0]_i_13_n_0 ),
        .I1(ctl_cmd[0]),
        .I2(ctl_cmd[2]),
        .I3(ctl_cmd[3]),
        .I4(ctl_cmd[1]),
        .I5(cnt[0]),
        .O(\cnt[0]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \cnt[0]_i_11 
       (.I0(state[3]),
        .I1(state[2]),
        .O(\cnt[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h4000004040000000)) 
    \cnt[0]_i_12 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(SL_RD_N0),
        .I4(cnt[0]),
        .I5(sl_pktend_n_reg_i_3_n_0),
        .O(\cnt[0]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \cnt[0]_i_13 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[4]),
        .O(\cnt[0]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \cnt[0]_i_2 
       (.I0(cnt[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .O(\cnt[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF80AA80)) 
    \cnt[0]_i_3 
       (.I0(cnt[0]),
        .I1(\cnt[0]_i_7_n_0 ),
        .I2(\cnt[0]_i_8_n_0 ),
        .I3(\cnt[0]_i_9_n_0 ),
        .I4(\fifo_sel[1]_i_7_n_0 ),
        .I5(\cnt[0]_i_10_n_0 ),
        .O(\cnt[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBF00FFFFBF000000)) 
    \cnt[0]_i_4 
       (.I0(f2u_rd_empty),
        .I1(SL_FULL_N),
        .I2(sl_pktend_n_reg_i_3_n_0),
        .I3(state[3]),
        .I4(cnt[0]),
        .I5(\cnt[15]_i_6_n_0 ),
        .O(\cnt[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h03FF0301)) 
    \cnt[0]_i_5 
       (.I0(\control_flit[12]_i_4_n_0 ),
        .I1(state[2]),
        .I2(state[4]),
        .I3(cnt[0]),
        .I4(\cnt[15]_i_14_n_0 ),
        .O(\cnt[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF8888C888)) 
    \cnt[0]_i_6 
       (.I0(\cnt[15]_i_9_n_0 ),
        .I1(cnt[0]),
        .I2(\cnt[0]_i_11_n_0 ),
        .I3(state[1]),
        .I4(sl_pktend_n_reg_i_3_n_0),
        .I5(\cnt[0]_i_12_n_0 ),
        .O(\cnt[0]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \cnt[0]_i_7 
       (.I0(state[4]),
        .I1(state[2]),
        .O(\cnt[0]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \cnt[0]_i_8 
       (.I0(f2u_rd_empty),
        .I1(sl_pktend_n_reg_i_3_n_0),
        .O(\cnt[0]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h000200A0)) 
    \cnt[0]_i_9 
       (.I0(\cnt[0]_i_13_n_0 ),
        .I1(ctl_cmd[0]),
        .I2(ctl_cmd[2]),
        .I3(ctl_cmd[3]),
        .I4(ctl_cmd[1]),
        .O(\cnt[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \cnt[10]_i_1 
       (.I0(\cnt[10]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(cnt[10]),
        .I4(\cnt[10]_i_3_n_0 ),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888FF88F888F888)) 
    \cnt[10]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[10]_i_3_n_0 ),
        .I2(\cnt[15]_i_7_n_0 ),
        .I3(cnt[10]),
        .I4(\fifo_sel[1]_i_7_n_0 ),
        .I5(\cnt[15]_i_8_n_0 ),
        .O(\cnt[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF7FFFFF00800000)) 
    \cnt[10]_i_3 
       (.I0(cnt[9]),
        .I1(cnt[8]),
        .I2(cnt[7]),
        .I3(\cnt[6]_i_3_n_0 ),
        .I4(cnt[6]),
        .I5(cnt[10]),
        .O(\cnt[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFF222FFF2F22222)) 
    \cnt[11]_i_1 
       (.I0(\cnt[11]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(\cnt[11]_i_3_n_0 ),
        .I4(cnt[11]),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF822FF22F822F822)) 
    \cnt[11]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[11]_i_3_n_0 ),
        .I2(\cnt[15]_i_7_n_0 ),
        .I3(cnt[11]),
        .I4(\fifo_sel[1]_i_7_n_0 ),
        .I5(\cnt[15]_i_8_n_0 ),
        .O(\cnt[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF7FFFFFFFFFFFFF)) 
    \cnt[11]_i_3 
       (.I0(cnt[9]),
        .I1(cnt[8]),
        .I2(cnt[7]),
        .I3(\cnt[6]_i_3_n_0 ),
        .I4(cnt[6]),
        .I5(cnt[10]),
        .O(\cnt[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFF222FFF2F22222)) 
    \cnt[12]_i_1 
       (.I0(\cnt[12]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(\cnt[12]_i_3_n_0 ),
        .I4(cnt[12]),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF822FF22F822F822)) 
    \cnt[12]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[12]_i_3_n_0 ),
        .I2(\cnt[15]_i_7_n_0 ),
        .I3(cnt[12]),
        .I4(\fifo_sel[1]_i_7_n_0 ),
        .I5(\cnt[15]_i_8_n_0 ),
        .O(\cnt[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDFFFFFFFFFFFFFFF)) 
    \cnt[12]_i_3 
       (.I0(cnt[10]),
        .I1(\cnt[7]_i_3_n_0 ),
        .I2(cnt[7]),
        .I3(cnt[8]),
        .I4(cnt[9]),
        .I5(cnt[11]),
        .O(\cnt[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \cnt[13]_i_1 
       (.I0(\cnt[13]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(cnt[13]),
        .I4(\cnt[13]_i_3_n_0 ),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888FF88F888F888)) 
    \cnt[13]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[13]_i_3_n_0 ),
        .I2(\cnt[15]_i_7_n_0 ),
        .I3(cnt[13]),
        .I4(\fifo_sel[1]_i_7_n_0 ),
        .I5(\cnt[15]_i_8_n_0 ),
        .O(\cnt[13]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hDF20)) 
    \cnt[13]_i_3 
       (.I0(cnt[12]),
        .I1(\cnt[11]_i_3_n_0 ),
        .I2(cnt[11]),
        .I3(cnt[13]),
        .O(\cnt[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \cnt[14]_i_1 
       (.I0(\cnt[14]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(cnt[14]),
        .I4(\cnt[14]_i_3_n_0 ),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888FF88F888F888)) 
    \cnt[14]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[14]_i_3_n_0 ),
        .I2(\cnt[15]_i_7_n_0 ),
        .I3(cnt[14]),
        .I4(\fifo_sel[1]_i_7_n_0 ),
        .I5(\cnt[15]_i_8_n_0 ),
        .O(\cnt[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF7FF0800)) 
    \cnt[14]_i_3 
       (.I0(cnt[13]),
        .I1(cnt[11]),
        .I2(\cnt[11]_i_3_n_0 ),
        .I3(cnt[12]),
        .I4(cnt[14]),
        .O(\cnt[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \cnt[15]_i_1 
       (.I0(\cnt[15]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(cnt[15]),
        .I4(\cnt[15]_i_4_n_0 ),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h10100000101000FF)) 
    \cnt[15]_i_10 
       (.I0(sl_pktend_n_reg_i_3_n_0),
        .I1(state[3]),
        .I2(state[1]),
        .I3(\cnt[15]_i_18_n_0 ),
        .I4(state[2]),
        .I5(state[4]),
        .O(\cnt[15]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h404040EA00000000)) 
    \cnt[15]_i_11 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(SL_RD_N0),
        .I3(sl_pktend_n_reg_i_11_n_0),
        .I4(sl_pktend_n_reg_i_3_n_0),
        .I5(state[1]),
        .O(\cnt[15]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \cnt[15]_i_12 
       (.I0(state[2]),
        .I1(state[4]),
        .O(\cnt[15]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h5555DDF5)) 
    \cnt[15]_i_13 
       (.I0(SL_EMPTY_N),
        .I1(u2f_wr_fullN),
        .I2(cmd_wr_fullN),
        .I3(fifo_sel[0]),
        .I4(fifo_sel[1]),
        .O(SL_RD_N0));
  LUT5 #(
    .INIT(32'hF8888888)) 
    \cnt[15]_i_14 
       (.I0(sl_pktend_n_reg_i_3_n_0),
        .I1(\cnt[15]_i_19_n_0 ),
        .I2(state[2]),
        .I3(state[4]),
        .I4(SL_FULL_N),
        .O(\cnt[15]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h0000F444)) 
    \cnt[15]_i_15 
       (.I0(state[2]),
        .I1(state[4]),
        .I2(state[3]),
        .I3(SL_FULL_N),
        .I4(f2u_rd_empty),
        .O(\cnt[15]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h00FF020000000200)) 
    \cnt[15]_i_16 
       (.I0(\cnt[15]_i_20_n_0 ),
        .I1(ctl_cmd[2]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[4]),
        .I5(f2u_rd_empty),
        .O(\cnt[15]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E000)) 
    \cnt[15]_i_17 
       (.I0(ctl_cmd[1]),
        .I1(ctl_cmd[3]),
        .I2(state[2]),
        .I3(ctl_cmd[2]),
        .I4(state[3]),
        .I5(state[4]),
        .O(\cnt[15]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cnt[15]_i_18 
       (.I0(sl_mode_reg[1]),
        .I1(mask[1]),
        .O(\cnt[15]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    \cnt[15]_i_19 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(sl_mode_reg[1]),
        .I3(f2u_rd_empty),
        .I4(SL_PRE_FULL_N),
        .I5(SL_FULL_N),
        .O(\cnt[15]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hF888FF88F888F888)) 
    \cnt[15]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[15]_i_4_n_0 ),
        .I2(\cnt[15]_i_7_n_0 ),
        .I3(cnt[15]),
        .I4(\fifo_sel[1]_i_7_n_0 ),
        .I5(\cnt[15]_i_8_n_0 ),
        .O(\cnt[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF9)) 
    \cnt[15]_i_20 
       (.I0(ctl_cmd[3]),
        .I1(ctl_cmd[1]),
        .I2(ctl_cmd[0]),
        .O(\cnt[15]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFBFFFA)) 
    \cnt[15]_i_3 
       (.I0(\cnt[15]_i_9_n_0 ),
        .I1(\control_flit[12]_i_3_n_0 ),
        .I2(\cnt[15]_i_10_n_0 ),
        .I3(\cnt[15]_i_11_n_0 ),
        .I4(\cnt[15]_i_12_n_0 ),
        .I5(\control_flit[12]_i_2_n_0 ),
        .O(\cnt[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \cnt[15]_i_4 
       (.I0(cnt[14]),
        .I1(cnt[12]),
        .I2(\cnt[11]_i_3_n_0 ),
        .I3(cnt[11]),
        .I4(cnt[13]),
        .I5(cnt[15]),
        .O(\cnt[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00004F00)) 
    \cnt[15]_i_5 
       (.I0(SL_RD_N0),
        .I1(sl_pktend_n_reg_i_3_n_0),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[3]),
        .I5(\cnt[15]_i_14_n_0 ),
        .O(\cnt[15]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \cnt[15]_i_6 
       (.I0(sl_mode_reg[1]),
        .I1(sl_pktend_n_reg_i_3_n_0),
        .I2(\cnt[15]_i_15_n_0 ),
        .O(\cnt[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBABAFFFA)) 
    \cnt[15]_i_7 
       (.I0(\cnt[15]_i_16_n_0 ),
        .I1(SL_WR_N1),
        .I2(state[3]),
        .I3(\cnt[0]_i_7_n_0 ),
        .I4(sl_pktend_n_reg_i_3_n_0),
        .I5(\cnt[15]_i_17_n_0 ),
        .O(\cnt[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000004000040040)) 
    \cnt[15]_i_8 
       (.I0(SL_RD_N_i_2_n_0),
        .I1(state[2]),
        .I2(ctl_cmd[2]),
        .I3(ctl_cmd[3]),
        .I4(ctl_cmd[1]),
        .I5(ctl_cmd[0]),
        .O(\cnt[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h80808080FF808080)) 
    \cnt[15]_i_9 
       (.I0(sl_pktend_n_reg_i_11_n_0),
        .I1(state[1]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[4]),
        .I5(SL_FULL_N),
        .O(\cnt[15]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hF2FFFF22F2F22222)) 
    \cnt[1]_i_1 
       (.I0(\cnt[1]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(cnt[0]),
        .I4(cnt[1]),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF888822F28888)) 
    \cnt[1]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(cnt[0]),
        .I2(\cnt[15]_i_8_n_0 ),
        .I3(\fifo_sel[1]_i_7_n_0 ),
        .I4(cnt[1]),
        .I5(\cnt[15]_i_7_n_0 ),
        .O(\cnt[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFF222FFF2F22222)) 
    \cnt[2]_i_1 
       (.I0(\cnt[2]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(\cnt[2]_i_3_n_0 ),
        .I4(cnt[2]),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF222288F82222)) 
    \cnt[2]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[2]_i_3_n_0 ),
        .I2(\cnt[15]_i_8_n_0 ),
        .I3(\fifo_sel[1]_i_7_n_0 ),
        .I4(cnt[2]),
        .I5(\cnt[15]_i_7_n_0 ),
        .O(\cnt[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \cnt[2]_i_3 
       (.I0(cnt[1]),
        .I1(cnt[0]),
        .O(\cnt[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \cnt[3]_i_1 
       (.I0(\cnt[3]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(cnt[3]),
        .I4(\cnt[3]_i_3_n_0 ),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF888888F88888)) 
    \cnt[3]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[3]_i_3_n_0 ),
        .I2(\cnt[15]_i_8_n_0 ),
        .I3(\fifo_sel[1]_i_7_n_0 ),
        .I4(cnt[3]),
        .I5(\cnt[15]_i_7_n_0 ),
        .O(\cnt[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \cnt[3]_i_3 
       (.I0(cnt[2]),
        .I1(cnt[1]),
        .I2(cnt[0]),
        .I3(cnt[3]),
        .O(\cnt[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \cnt[4]_i_1 
       (.I0(\cnt[4]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(cnt[4]),
        .I4(\cnt[4]_i_3_n_0 ),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF888888F88888)) 
    \cnt[4]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[4]_i_3_n_0 ),
        .I2(\cnt[15]_i_8_n_0 ),
        .I3(\fifo_sel[1]_i_7_n_0 ),
        .I4(cnt[4]),
        .I5(\cnt[15]_i_7_n_0 ),
        .O(\cnt[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \cnt[4]_i_3 
       (.I0(cnt[3]),
        .I1(cnt[0]),
        .I2(cnt[1]),
        .I3(cnt[2]),
        .I4(cnt[4]),
        .O(\cnt[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \cnt[5]_i_1 
       (.I0(\cnt[5]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(cnt[5]),
        .I4(\cnt[5]_i_3_n_0 ),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF888888F88888)) 
    \cnt[5]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[5]_i_3_n_0 ),
        .I2(\cnt[15]_i_8_n_0 ),
        .I3(\fifo_sel[1]_i_7_n_0 ),
        .I4(cnt[5]),
        .I5(\cnt[15]_i_7_n_0 ),
        .O(\cnt[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \cnt[5]_i_3 
       (.I0(cnt[2]),
        .I1(cnt[1]),
        .I2(cnt[0]),
        .I3(cnt[3]),
        .I4(cnt[4]),
        .I5(cnt[5]),
        .O(\cnt[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFF222FFF2F22222)) 
    \cnt[6]_i_1 
       (.I0(\cnt[6]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(\cnt[6]_i_3_n_0 ),
        .I4(cnt[6]),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF222288F82222)) 
    \cnt[6]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[6]_i_3_n_0 ),
        .I2(\cnt[15]_i_8_n_0 ),
        .I3(\fifo_sel[1]_i_7_n_0 ),
        .I4(cnt[6]),
        .I5(\cnt[15]_i_7_n_0 ),
        .O(\cnt[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \cnt[6]_i_3 
       (.I0(cnt[2]),
        .I1(cnt[1]),
        .I2(cnt[0]),
        .I3(cnt[3]),
        .I4(cnt[4]),
        .I5(cnt[5]),
        .O(\cnt[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFF222FFF2F22222)) 
    \cnt[7]_i_1 
       (.I0(\cnt[7]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(\cnt[7]_i_3_n_0 ),
        .I4(cnt[7]),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF222288F82222)) 
    \cnt[7]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[7]_i_3_n_0 ),
        .I2(\cnt[15]_i_8_n_0 ),
        .I3(\fifo_sel[1]_i_7_n_0 ),
        .I4(cnt[7]),
        .I5(\cnt[15]_i_7_n_0 ),
        .O(\cnt[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF7FFFFFFFFFFFFF)) 
    \cnt[7]_i_3 
       (.I0(cnt[5]),
        .I1(cnt[4]),
        .I2(cnt[3]),
        .I3(\cnt[2]_i_3_n_0 ),
        .I4(cnt[2]),
        .I5(cnt[6]),
        .O(\cnt[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \cnt[8]_i_1 
       (.I0(\cnt[8]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(cnt[8]),
        .I4(\cnt[8]_i_3_n_0 ),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888FF88F888F888)) 
    \cnt[8]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[8]_i_3_n_0 ),
        .I2(\cnt[15]_i_7_n_0 ),
        .I3(cnt[8]),
        .I4(\fifo_sel[1]_i_7_n_0 ),
        .I5(\cnt[15]_i_8_n_0 ),
        .O(\cnt[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hDF20)) 
    \cnt[8]_i_3 
       (.I0(cnt[7]),
        .I1(\cnt[6]_i_3_n_0 ),
        .I2(cnt[6]),
        .I3(cnt[8]),
        .O(\cnt[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \cnt[9]_i_1 
       (.I0(\cnt[9]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\cnt[15]_i_3_n_0 ),
        .I3(cnt[9]),
        .I4(\cnt[9]_i_3_n_0 ),
        .I5(\cnt[15]_i_5_n_0 ),
        .O(\cnt[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888FF88F888F888)) 
    \cnt[9]_i_2 
       (.I0(\cnt[15]_i_6_n_0 ),
        .I1(\cnt[9]_i_3_n_0 ),
        .I2(\cnt[15]_i_7_n_0 ),
        .I3(cnt[9]),
        .I4(\fifo_sel[1]_i_7_n_0 ),
        .I5(\cnt[15]_i_8_n_0 ),
        .O(\cnt[9]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \cnt[9]_i_3 
       (.I0(cnt[6]),
        .I1(\cnt[6]_i_3_n_0 ),
        .I2(cnt[7]),
        .I3(cnt[8]),
        .I4(cnt[9]),
        .O(\cnt[9]_i_3_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[0] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[0]_i_1_n_0 ),
        .Q(cnt[0]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[10] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[10]_i_1_n_0 ),
        .Q(cnt[10]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[11] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[11]_i_1_n_0 ),
        .Q(cnt[11]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[12] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[12]_i_1_n_0 ),
        .Q(cnt[12]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[13] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[13]_i_1_n_0 ),
        .Q(cnt[13]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[14] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[14]_i_1_n_0 ),
        .Q(cnt[14]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[15] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[15]_i_1_n_0 ),
        .Q(cnt[15]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[1] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[1]_i_1_n_0 ),
        .Q(cnt[1]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[2] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[2]_i_1_n_0 ),
        .Q(cnt[2]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[3] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[3]_i_1_n_0 ),
        .Q(cnt[3]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[4] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[4]_i_1_n_0 ),
        .Q(cnt[4]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[5] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[5]_i_1_n_0 ),
        .Q(cnt[5]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[6] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[6]_i_1_n_0 ),
        .Q(cnt[6]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[7] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[7]_i_1_n_0 ),
        .Q(cnt[7]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[8] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[8]_i_1_n_0 ),
        .Q(cnt[8]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[9] 
       (.C(f2u_rd_clk),
        .CE(g0_b0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\cnt[9]_i_1_n_0 ),
        .Q(cnt[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \control_flit[0]_i_1 
       (.I0(SL_DT_I[0]),
        .I1(state[1]),
        .I2(req_cmd[0]),
        .O(\control_flit[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \control_flit[10]_i_1 
       (.I0(SL_DT_I[10]),
        .I1(state[1]),
        .I2(control_flit[10]),
        .O(\control_flit[10]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \control_flit[11]_i_1 
       (.I0(SL_DT_I[11]),
        .I1(state[1]),
        .I2(control_flit[11]),
        .O(\control_flit[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF2AFF00002AFF)) 
    \control_flit[12]_i_1 
       (.I0(ctl_cmd[0]),
        .I1(\control_flit[12]_i_2_n_0 ),
        .I2(\control_flit[12]_i_3_n_0 ),
        .I3(\control_flit[12]_i_4_n_0 ),
        .I4(state[1]),
        .I5(SL_DT_I[12]),
        .O(\control_flit[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \control_flit[12]_i_2 
       (.I0(sl_mode_reg[0]),
        .I1(mask[0]),
        .O(\control_flit[12]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \control_flit[12]_i_3 
       (.I0(sl_mode_reg[0]),
        .I1(sl_mode_reg[1]),
        .O(\control_flit[12]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8FFF)) 
    \control_flit[12]_i_4 
       (.I0(mask[0]),
        .I1(sl_mode_reg[0]),
        .I2(mask[1]),
        .I3(sl_mode_reg[1]),
        .O(\control_flit[12]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \control_flit[13]_i_1 
       (.I0(state[1]),
        .I1(SL_DT_I[13]),
        .I2(ctl_cmd[1]),
        .I3(\control_flit[15]_i_2_n_0 ),
        .O(\control_flit[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[14]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(ctl_cmd[2]),
        .I2(state[1]),
        .I3(SL_DT_I[14]),
        .O(\control_flit[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \control_flit[15]_i_1 
       (.I0(state[1]),
        .I1(SL_DT_I[15]),
        .I2(ctl_cmd[3]),
        .I3(\control_flit[15]_i_2_n_0 ),
        .O(\control_flit[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000135F)) 
    \control_flit[15]_i_2 
       (.I0(sl_mode_reg[0]),
        .I1(sl_mode_reg[1]),
        .I2(mask[0]),
        .I3(mask[1]),
        .I4(state[1]),
        .O(\control_flit[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[16]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[0]),
        .I2(state[1]),
        .I3(SL_DT_I[16]),
        .O(\control_flit[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[17]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[1]),
        .I2(state[1]),
        .I3(SL_DT_I[17]),
        .O(\control_flit[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[18]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[2]),
        .I2(state[1]),
        .I3(SL_DT_I[18]),
        .O(\control_flit[18]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[19]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[3]),
        .I2(state[1]),
        .I3(SL_DT_I[19]),
        .O(\control_flit[19]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \control_flit[1]_i_1 
       (.I0(SL_DT_I[1]),
        .I1(state[1]),
        .I2(req_cmd[1]),
        .O(\control_flit[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[20]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[4]),
        .I2(state[1]),
        .I3(SL_DT_I[20]),
        .O(\control_flit[20]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[21]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[5]),
        .I2(state[1]),
        .I3(SL_DT_I[21]),
        .O(\control_flit[21]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[22]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[6]),
        .I2(state[1]),
        .I3(SL_DT_I[22]),
        .O(\control_flit[22]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[23]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[7]),
        .I2(state[1]),
        .I3(SL_DT_I[23]),
        .O(\control_flit[23]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[24]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[8]),
        .I2(state[1]),
        .I3(SL_DT_I[24]),
        .O(\control_flit[24]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[25]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[9]),
        .I2(state[1]),
        .I3(SL_DT_I[25]),
        .O(\control_flit[25]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[26]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[10]),
        .I2(state[1]),
        .I3(SL_DT_I[26]),
        .O(\control_flit[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[27]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[11]),
        .I2(state[1]),
        .I3(SL_DT_I[27]),
        .O(\control_flit[27]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[28]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[12]),
        .I2(state[1]),
        .I3(SL_DT_I[28]),
        .O(\control_flit[28]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[29]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[13]),
        .I2(state[1]),
        .I3(SL_DT_I[29]),
        .O(\control_flit[29]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \control_flit[2]_i_1 
       (.I0(SL_DT_I[2]),
        .I1(state[1]),
        .I2(req_cmd[2]),
        .O(\control_flit[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[30]_i_1 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[14]),
        .I2(state[1]),
        .I3(SL_DT_I[30]),
        .O(\control_flit[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h01000001)) 
    \control_flit[31]_i_1 
       (.I0(state[2]),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[0]),
        .I4(state[1]),
        .O(\control_flit[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \control_flit[31]_i_2 
       (.I0(\control_flit[31]_i_3_n_0 ),
        .I1(dat_leng[15]),
        .I2(state[1]),
        .I3(SL_DT_I[31]),
        .O(\control_flit[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ECA0)) 
    \control_flit[31]_i_3 
       (.I0(sl_mode_reg[0]),
        .I1(sl_mode_reg[1]),
        .I2(mask[0]),
        .I3(mask[1]),
        .I4(state[1]),
        .O(\control_flit[31]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \control_flit[3]_i_1 
       (.I0(SL_DT_I[3]),
        .I1(state[1]),
        .I2(req_cmd[3]),
        .O(\control_flit[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \control_flit[4]_i_1 
       (.I0(state[1]),
        .I1(SL_DT_I[4]),
        .I2(transactor_sel[0]),
        .I3(\control_flit[15]_i_2_n_0 ),
        .O(\control_flit[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \control_flit[5]_i_1 
       (.I0(state[1]),
        .I1(SL_DT_I[5]),
        .I2(transactor_sel[1]),
        .I3(\control_flit[15]_i_2_n_0 ),
        .O(\control_flit[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \control_flit[6]_i_1 
       (.I0(state[1]),
        .I1(SL_DT_I[6]),
        .I2(transactor_sel[2]),
        .I3(\control_flit[15]_i_2_n_0 ),
        .O(\control_flit[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \control_flit[7]_i_1 
       (.I0(state[1]),
        .I1(SL_DT_I[7]),
        .I2(transactor_sel[3]),
        .I3(\control_flit[15]_i_2_n_0 ),
        .O(\control_flit[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \control_flit[8]_i_1 
       (.I0(SL_DT_I[8]),
        .I1(state[1]),
        .I2(control_flit[8]),
        .O(\control_flit[8]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \control_flit[9]_i_1 
       (.I0(SL_DT_I[9]),
        .I1(state[1]),
        .I2(control_flit[9]),
        .O(\control_flit[9]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[0] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[0]_i_1_n_0 ),
        .Q(control_flit[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[10] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[10]_i_1_n_0 ),
        .Q(control_flit[10]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[11] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[11]_i_1_n_0 ),
        .Q(control_flit[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[12] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[12]_i_1_n_0 ),
        .Q(control_flit[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[13] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[13]_i_1_n_0 ),
        .Q(control_flit[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[14] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[14]_i_1_n_0 ),
        .Q(control_flit[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[15] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[15]_i_1_n_0 ),
        .Q(control_flit[15]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[16] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[16]_i_1_n_0 ),
        .Q(control_flit[16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[17] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[17]_i_1_n_0 ),
        .Q(control_flit[17]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[18] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[18]_i_1_n_0 ),
        .Q(control_flit[18]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[19] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[19]_i_1_n_0 ),
        .Q(control_flit[19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[1] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[1]_i_1_n_0 ),
        .Q(control_flit[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[20] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[20]_i_1_n_0 ),
        .Q(control_flit[20]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[21] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[21]_i_1_n_0 ),
        .Q(control_flit[21]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[22] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[22]_i_1_n_0 ),
        .Q(control_flit[22]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[23] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[23]_i_1_n_0 ),
        .Q(control_flit[23]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[24] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[24]_i_1_n_0 ),
        .Q(control_flit[24]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[25] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[25]_i_1_n_0 ),
        .Q(control_flit[25]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[26] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[26]_i_1_n_0 ),
        .Q(control_flit[26]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[27] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[27]_i_1_n_0 ),
        .Q(control_flit[27]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[28] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[28]_i_1_n_0 ),
        .Q(control_flit[28]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[29] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[29]_i_1_n_0 ),
        .Q(control_flit[29]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[2] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[2]_i_1_n_0 ),
        .Q(control_flit[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[30] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[30]_i_1_n_0 ),
        .Q(control_flit[30]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[31] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[31]_i_2_n_0 ),
        .Q(control_flit[31]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[3] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[3]_i_1_n_0 ),
        .Q(control_flit[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[4] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[4]_i_1_n_0 ),
        .Q(control_flit[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[5] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[5]_i_1_n_0 ),
        .Q(control_flit[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[6] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[6]_i_1_n_0 ),
        .Q(control_flit[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[7] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[7]_i_1_n_0 ),
        .Q(control_flit[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[8] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[8]_i_1_n_0 ),
        .Q(control_flit[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \control_flit_reg[9] 
       (.C(f2u_rd_clk),
        .CE(\control_flit[31]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\control_flit[9]_i_1_n_0 ),
        .Q(control_flit[9]));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAA2AA)) 
    f2u_rd_ready_inferred_i_1
       (.I0(f2u_rd_ready_inferred_i_2_n_0),
        .I1(state[2]),
        .I2(state[1]),
        .I3(state[0]),
        .I4(\timeout[2]_i_4_n_0 ),
        .I5(SL_WR_N1),
        .O(f2u_rd_ready));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000800)) 
    f2u_rd_ready_inferred_i_2
       (.I0(SL_PRE_FULL_N),
        .I1(state[1]),
        .I2(\timeout[2]_i_4_n_0 ),
        .I3(SL_WR_N1),
        .I4(\timeout[2]_i_2_n_0 ),
        .I5(f2u_rd_ready_inferred_i_4_n_0),
        .O(f2u_rd_ready_inferred_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    f2u_rd_ready_inferred_i_3
       (.I0(SL_FULL_N),
        .I1(f2u_rd_empty),
        .O(SL_WR_N1));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    f2u_rd_ready_inferred_i_4
       (.I0(state[3]),
        .I1(state[2]),
        .I2(state[1]),
        .I3(f2u_rd_empty),
        .I4(state[4]),
        .I5(state[0]),
        .O(f2u_rd_ready_inferred_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFFF80)) 
    \fifo_sel[0]_i_1 
       (.I0(state[2]),
        .I1(\fifo_sel[0]_i_2_n_0 ),
        .I2(\fifo_sel[0]_i_3_n_0 ),
        .I3(\fifo_sel[0]_i_4_n_0 ),
        .I4(\fifo_sel[0]_i_5_n_0 ),
        .O(\fifo_sel[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEED)) 
    \fifo_sel[0]_i_2 
       (.I0(ctl_cmd[3]),
        .I1(ctl_cmd[0]),
        .I2(ctl_cmd[2]),
        .I3(ctl_cmd[1]),
        .O(\fifo_sel[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFD00FF00)) 
    \fifo_sel[0]_i_3 
       (.I0(ctl_cmd[2]),
        .I1(ctl_cmd[1]),
        .I2(ctl_cmd[3]),
        .I3(fifo_sel[0]),
        .I4(\fifo_sel[1]_i_7_n_0 ),
        .O(\fifo_sel[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0F0F040C040C040C)) 
    \fifo_sel[0]_i_4 
       (.I0(mask[1]),
        .I1(fifo_sel[0]),
        .I2(state[2]),
        .I3(sl_mode_reg[1]),
        .I4(mask[0]),
        .I5(sl_mode_reg[0]),
        .O(\fifo_sel[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000ACA80000)) 
    \fifo_sel[0]_i_5 
       (.I0(ctl_cmd[2]),
        .I1(fifo_sel[0]),
        .I2(\fifo_sel[1]_i_7_n_0 ),
        .I3(ctl_cmd[1]),
        .I4(state[2]),
        .I5(\fifo_sel[0]_i_2_n_0 ),
        .O(\fifo_sel[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \fifo_sel[1]_i_1 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[3]),
        .I3(state[4]),
        .O(\fifo_sel[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFAEFFAEFFFFFFAE)) 
    \fifo_sel[1]_i_10 
       (.I0(dat_leng[5]),
        .I1(dat_leng[3]),
        .I2(dat_leng[4]),
        .I3(dat_leng[8]),
        .I4(dat_leng[6]),
        .I5(dat_leng[7]),
        .O(\fifo_sel[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFAEFFAEFFFFFFAE)) 
    \fifo_sel[1]_i_11 
       (.I0(dat_leng[11]),
        .I1(dat_leng[9]),
        .I2(dat_leng[10]),
        .I3(dat_leng[14]),
        .I4(dat_leng[12]),
        .I5(dat_leng[13]),
        .O(\fifo_sel[1]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \fifo_sel[1]_i_12 
       (.I0(dat_leng[15]),
        .I1(dat_leng[13]),
        .I2(dat_leng[2]),
        .I3(\fifo_sel[1]_i_13_n_0 ),
        .I4(\fifo_sel[1]_i_14_n_0 ),
        .O(\fifo_sel[1]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \fifo_sel[1]_i_13 
       (.I0(dat_leng[11]),
        .I1(dat_leng[7]),
        .I2(dat_leng[14]),
        .I3(dat_leng[10]),
        .O(\fifo_sel[1]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \fifo_sel[1]_i_14 
       (.I0(dat_leng[5]),
        .I1(dat_leng[1]),
        .I2(dat_leng[8]),
        .I3(dat_leng[4]),
        .O(\fifo_sel[1]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAFBBB)) 
    \fifo_sel[1]_i_2 
       (.I0(\fifo_sel[1]_i_3_n_0 ),
        .I1(\control_flit[12]_i_4_n_0 ),
        .I2(\fifo_sel[1]_i_4_n_0 ),
        .I3(fifo_sel[1]),
        .I4(state[2]),
        .I5(\fifo_sel[1]_i_5_n_0 ),
        .O(\fifo_sel[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4040400000400000)) 
    \fifo_sel[1]_i_3 
       (.I0(\fifo_sel[1]_i_6_n_0 ),
        .I1(ctl_cmd[2]),
        .I2(state[2]),
        .I3(\fifo_sel[1]_i_7_n_0 ),
        .I4(fifo_sel[1]),
        .I5(ctl_cmd[0]),
        .O(\fifo_sel[1]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \fifo_sel[1]_i_4 
       (.I0(mask[0]),
        .I1(sl_mode_reg[0]),
        .O(\fifo_sel[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEE00EE000C000000)) 
    \fifo_sel[1]_i_5 
       (.I0(\fifo_sel[1]_i_8_n_0 ),
        .I1(fifo_sel[1]),
        .I2(\fifo_sel[1]_i_7_n_0 ),
        .I3(state[2]),
        .I4(\fifo_sel[1]_i_9_n_0 ),
        .I5(\fifo_sel[1]_i_6_n_0 ),
        .O(\fifo_sel[1]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFAF0FE)) 
    \fifo_sel[1]_i_6 
       (.I0(ctl_cmd[0]),
        .I1(fifo_sel[1]),
        .I2(ctl_cmd[3]),
        .I3(ctl_cmd[2]),
        .I4(ctl_cmd[1]),
        .O(\fifo_sel[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFFFE)) 
    \fifo_sel[1]_i_7 
       (.I0(\fifo_sel[1]_i_10_n_0 ),
        .I1(\fifo_sel[1]_i_11_n_0 ),
        .I2(dat_leng[2]),
        .I3(dat_leng[0]),
        .I4(dat_leng[1]),
        .I5(\fifo_sel[1]_i_12_n_0 ),
        .O(\fifo_sel[1]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \fifo_sel[1]_i_8 
       (.I0(ctl_cmd[1]),
        .I1(ctl_cmd[2]),
        .I2(ctl_cmd[0]),
        .O(\fifo_sel[1]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_sel[1]_i_9 
       (.I0(ctl_cmd[1]),
        .I1(ctl_cmd[2]),
        .O(\fifo_sel[1]_i_9_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \fifo_sel_reg[0] 
       (.C(f2u_rd_clk),
        .CE(\fifo_sel[1]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\fifo_sel[0]_i_1_n_0 ),
        .Q(fifo_sel[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \fifo_sel_reg[1] 
       (.C(f2u_rd_clk),
        .CE(\fifo_sel[1]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\fifo_sel[1]_i_2_n_0 ),
        .Q(fifo_sel[1]));
  LUT5 #(
    .INIT(32'h002A6051)) 
    g0_b0
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(state[4]),
        .O(g0_b0_n_0));
  LUT5 #(
    .INIT(32'h0004C181)) 
    g0_b0__0
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(state[4]),
        .O(g0_b0__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(SL_PCLK_STABLE));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(control_flit[31]),
        .O(dat_leng[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(control_flit[22]),
        .O(dat_leng[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(control_flit[21]),
        .O(dat_leng[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(control_flit[20]),
        .O(dat_leng[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(control_flit[19]),
        .O(dat_leng[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(control_flit[18]),
        .O(dat_leng[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(control_flit[17]),
        .O(dat_leng[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(control_flit[16]),
        .O(dat_leng[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(control_flit[15]),
        .O(ctl_cmd[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(control_flit[14]),
        .O(ctl_cmd[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(control_flit[13]),
        .O(ctl_cmd[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(control_flit[30]),
        .O(dat_leng[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(control_flit[12]),
        .O(ctl_cmd[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(control_flit[7]),
        .O(transactor_sel[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(control_flit[6]),
        .O(transactor_sel[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(control_flit[5]),
        .O(transactor_sel[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(control_flit[4]),
        .O(transactor_sel[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(control_flit[3]),
        .O(req_cmd[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(control_flit[2]),
        .O(req_cmd[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(control_flit[1]),
        .O(req_cmd[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(control_flit[0]),
        .O(req_cmd[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(SL_FLAGA),
        .O(SL_EMPTY_N));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(control_flit[29]),
        .O(dat_leng[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(SL_FLAGC),
        .O(SL_FULL_N));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(SL_FLAGD),
        .O(SL_PRE_FULL_N));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(SL_FLAGB),
        .O(SL_PRE_EMPTY_N));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(f2u_rd_clk),
        .O(cmd_wr_clk));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(f2u_rd_clk),
        .O(u2f_wr_clk));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(control_flit[28]),
        .O(dat_leng[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(control_flit[27]),
        .O(dat_leng[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(control_flit[26]),
        .O(dat_leng[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(control_flit[25]),
        .O(dat_leng[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(control_flit[24]),
        .O(dat_leng[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(control_flit[23]),
        .O(dat_leng[7]));
  LUT4 #(
    .INIT(16'h5F8A)) 
    \mask[0]_i_1 
       (.I0(mask[0]),
        .I1(mask[1]),
        .I2(sl_mode_reg[1]),
        .I3(sl_mode_reg[0]),
        .O(\mask[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hACFC)) 
    \mask[1]_i_1 
       (.I0(mask[0]),
        .I1(sl_mode_reg[1]),
        .I2(mask[1]),
        .I3(sl_mode_reg[0]),
        .O(\mask[1]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \mask_reg[0] 
       (.C(f2u_rd_clk),
        .CE(\sl_mode_reg[1]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\mask[0]_i_1_n_0 ),
        .Q(mask[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \mask_reg[1] 
       (.C(f2u_rd_clk),
        .CE(\sl_mode_reg[1]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(\mask[1]_i_1_n_0 ),
        .Q(mask[1]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[0]_i_1 
       (.I0(\pushed_reg[7]_i_2_n_15 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[10]_i_1 
       (.I0(\pushed_reg[15]_i_2_n_13 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[11]_i_1 
       (.I0(\pushed_reg[15]_i_2_n_12 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[12]_i_1 
       (.I0(\pushed_reg[15]_i_2_n_11 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[13]_i_1 
       (.I0(\pushed_reg[15]_i_2_n_10 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[14]_i_1 
       (.I0(\pushed_reg[15]_i_2_n_9 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[15]_i_1 
       (.I0(\pushed_reg[15]_i_2_n_8 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[1]_i_1 
       (.I0(\pushed_reg[7]_i_2_n_14 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[2]_i_1 
       (.I0(\pushed_reg[7]_i_2_n_13 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[3]_i_1 
       (.I0(\pushed_reg[7]_i_2_n_12 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[4]_i_1 
       (.I0(\pushed_reg[7]_i_2_n_11 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[5]_i_1 
       (.I0(\pushed_reg[7]_i_2_n_10 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[6]_i_1 
       (.I0(\pushed_reg[7]_i_2_n_9 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[7]_i_1 
       (.I0(\pushed_reg[7]_i_2_n_8 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h6A)) 
    \pushed[7]_i_3 
       (.I0(pushed[0]),
        .I1(u2f_wr_valid),
        .I2(u2f_wr_ready),
        .O(\pushed[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[8]_i_1 
       (.I0(\pushed_reg[15]_i_2_n_15 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \pushed[9]_i_1 
       (.I0(\pushed_reg[15]_i_2_n_14 ),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\pushed[9]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[0] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[0]_i_1_n_0 ),
        .Q(pushed[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[10] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[10]_i_1_n_0 ),
        .Q(pushed[10]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[11] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[11]_i_1_n_0 ),
        .Q(pushed[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[12] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[12]_i_1_n_0 ),
        .Q(pushed[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[13] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[13]_i_1_n_0 ),
        .Q(pushed[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[14] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[14]_i_1_n_0 ),
        .Q(pushed[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[15] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[15]_i_1_n_0 ),
        .Q(pushed[15]));
  CARRY8 \pushed_reg[15]_i_2 
       (.CI(\pushed_reg[7]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_pushed_reg[15]_i_2_CO_UNCONNECTED [7],\pushed_reg[15]_i_2_n_1 ,\pushed_reg[15]_i_2_n_2 ,\pushed_reg[15]_i_2_n_3 ,\pushed_reg[15]_i_2_n_4 ,\pushed_reg[15]_i_2_n_5 ,\pushed_reg[15]_i_2_n_6 ,\pushed_reg[15]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\pushed_reg[15]_i_2_n_8 ,\pushed_reg[15]_i_2_n_9 ,\pushed_reg[15]_i_2_n_10 ,\pushed_reg[15]_i_2_n_11 ,\pushed_reg[15]_i_2_n_12 ,\pushed_reg[15]_i_2_n_13 ,\pushed_reg[15]_i_2_n_14 ,\pushed_reg[15]_i_2_n_15 }),
        .S(pushed[15:8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[1] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[1]_i_1_n_0 ),
        .Q(pushed[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[2] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[2]_i_1_n_0 ),
        .Q(pushed[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[3] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[3]_i_1_n_0 ),
        .Q(pushed[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[4] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[4]_i_1_n_0 ),
        .Q(pushed[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[5] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[5]_i_1_n_0 ),
        .Q(pushed[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[6] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[6]_i_1_n_0 ),
        .Q(pushed[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[7] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[7]_i_1_n_0 ),
        .Q(pushed[7]));
  CARRY8 \pushed_reg[7]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\pushed_reg[7]_i_2_n_0 ,\pushed_reg[7]_i_2_n_1 ,\pushed_reg[7]_i_2_n_2 ,\pushed_reg[7]_i_2_n_3 ,\pushed_reg[7]_i_2_n_4 ,\pushed_reg[7]_i_2_n_5 ,\pushed_reg[7]_i_2_n_6 ,\pushed_reg[7]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,pushed[0]}),
        .O({\pushed_reg[7]_i_2_n_8 ,\pushed_reg[7]_i_2_n_9 ,\pushed_reg[7]_i_2_n_10 ,\pushed_reg[7]_i_2_n_11 ,\pushed_reg[7]_i_2_n_12 ,\pushed_reg[7]_i_2_n_13 ,\pushed_reg[7]_i_2_n_14 ,\pushed_reg[7]_i_2_n_15 }),
        .S({pushed[7:1],\pushed[7]_i_3_n_0 }));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[8] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[8]_i_1_n_0 ),
        .Q(pushed[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \pushed_reg[9] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\pushed[9]_i_1_n_0 ),
        .Q(pushed[9]));
  LUT1 #(
    .INIT(2'h1)) 
    reg_clk_i_1
       (.I0(reg_clk),
        .O(reg_clk_i_1_n_0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    reg_clk_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(reg_clk_i_1_n_0),
        .Q(reg_clk),
        .R(1'b0));
  CARRY8 remain_inferred_i_1
       (.CI(remain_inferred_i_2_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_remain_inferred_i_1_CO_UNCONNECTED[7],remain_inferred_i_1_n_1,remain_inferred_i_1_n_2,remain_inferred_i_1_n_3,remain_inferred_i_1_n_4,remain_inferred_i_1_n_5,remain_inferred_i_1_n_6,remain_inferred_i_1_n_7}),
        .DI({1'b0,dat_leng[14:8]}),
        .O(remain[15:8]),
        .S({remain_inferred_i_3_n_0,remain_inferred_i_4_n_0,remain_inferred_i_5_n_0,remain_inferred_i_6_n_0,remain_inferred_i_7_n_0,remain_inferred_i_8_n_0,remain_inferred_i_9_n_0,remain_inferred_i_10_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_10
       (.I0(dat_leng[8]),
        .I1(cnt[8]),
        .O(remain_inferred_i_10_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_11
       (.I0(dat_leng[7]),
        .I1(cnt[7]),
        .O(remain_inferred_i_11_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_12
       (.I0(dat_leng[6]),
        .I1(cnt[6]),
        .O(remain_inferred_i_12_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_13
       (.I0(dat_leng[5]),
        .I1(cnt[5]),
        .O(remain_inferred_i_13_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_14
       (.I0(dat_leng[4]),
        .I1(cnt[4]),
        .O(remain_inferred_i_14_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_15
       (.I0(dat_leng[3]),
        .I1(cnt[3]),
        .O(remain_inferred_i_15_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_16
       (.I0(dat_leng[2]),
        .I1(cnt[2]),
        .O(remain_inferred_i_16_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_17
       (.I0(dat_leng[1]),
        .I1(cnt[1]),
        .O(remain_inferred_i_17_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_18
       (.I0(dat_leng[0]),
        .I1(cnt[0]),
        .O(remain_inferred_i_18_n_0));
  CARRY8 remain_inferred_i_2
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({remain_inferred_i_2_n_0,remain_inferred_i_2_n_1,remain_inferred_i_2_n_2,remain_inferred_i_2_n_3,remain_inferred_i_2_n_4,remain_inferred_i_2_n_5,remain_inferred_i_2_n_6,remain_inferred_i_2_n_7}),
        .DI(dat_leng[7:0]),
        .O(remain[7:0]),
        .S({remain_inferred_i_11_n_0,remain_inferred_i_12_n_0,remain_inferred_i_13_n_0,remain_inferred_i_14_n_0,remain_inferred_i_15_n_0,remain_inferred_i_16_n_0,remain_inferred_i_17_n_0,remain_inferred_i_18_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_3
       (.I0(dat_leng[15]),
        .I1(cnt[15]),
        .O(remain_inferred_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_4
       (.I0(dat_leng[14]),
        .I1(cnt[14]),
        .O(remain_inferred_i_4_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_5
       (.I0(dat_leng[13]),
        .I1(cnt[13]),
        .O(remain_inferred_i_5_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_6
       (.I0(dat_leng[12]),
        .I1(cnt[12]),
        .O(remain_inferred_i_6_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_7
       (.I0(dat_leng[11]),
        .I1(cnt[11]),
        .O(remain_inferred_i_7_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_8
       (.I0(dat_leng[10]),
        .I1(cnt[10]),
        .O(remain_inferred_i_8_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    remain_inferred_i_9
       (.I0(dat_leng[9]),
        .I1(cnt[9]),
        .O(remain_inferred_i_9_n_0));
  LUT6 #(
    .INIT(64'h020FFE7000000000)) 
    \sl_ad_reg[0]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[4]),
        .I5(sl_ad_reg[0]),
        .O(\sl_ad_reg[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \sl_ad_reg[1]_i_1 
       (.I0(sl_ad_reg[1]),
        .I1(\SL_AD[1]_i_3_n_0 ),
        .I2(\SL_AD[1]_i_4_n_0 ),
        .O(\sl_ad_reg[1]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sl_ad_reg_reg[0] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\sl_ad_reg[0]_i_1_n_0 ),
        .Q(sl_ad_reg[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sl_ad_reg_reg[1] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(\sl_ad_reg[1]_i_1_n_0 ),
        .Q(sl_ad_reg[1]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \sl_mode_reg[1]_i_1 
       (.I0(state[4]),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(state[3]),
        .O(\sl_mode_reg[1]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sl_mode_reg_reg[0] 
       (.C(f2u_rd_clk),
        .CE(\sl_mode_reg[1]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(SL_MODE[0]),
        .Q(sl_mode_reg[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sl_mode_reg_reg[1] 
       (.C(f2u_rd_clk),
        .CE(\sl_mode_reg[1]_i_1_n_0 ),
        .CLR(u_cu2f_i_1_n_0),
        .D(SL_MODE[1]),
        .Q(sl_mode_reg[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAFFAABA)) 
    sl_oe_n_reg_i_1
       (.I0(sl_oe_n_reg_i_2_n_0),
        .I1(sl_oe_n_reg_i_3_n_0),
        .I2(sl_oe_n_reg),
        .I3(SL_RD_N_i_2_n_0),
        .I4(sl_oe_n_reg_i_4_n_0),
        .I5(sl_oe_n_reg_i_5_n_0),
        .O(sl_oe_n_reg_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFE00030000)) 
    sl_oe_n_reg_i_2
       (.I0(sl_oe_n_reg),
        .I1(state[3]),
        .I2(state[2]),
        .I3(state[1]),
        .I4(sl_oe_n_reg_i_6_n_0),
        .I5(state[4]),
        .O(sl_oe_n_reg_i_2_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    sl_oe_n_reg_i_3
       (.I0(state[1]),
        .I1(state[2]),
        .O(sl_oe_n_reg_i_3_n_0));
  LUT6 #(
    .INIT(64'h2222222022202222)) 
    sl_oe_n_reg_i_4
       (.I0(sl_oe_n_reg_i_7_n_0),
        .I1(state[0]),
        .I2(\state[2]_i_10_n_0 ),
        .I3(ctl_cmd[0]),
        .I4(ctl_cmd[2]),
        .I5(ctl_cmd[1]),
        .O(sl_oe_n_reg_i_4_n_0));
  LUT6 #(
    .INIT(64'h00000000FF4C0000)) 
    sl_oe_n_reg_i_5
       (.I0(state[1]),
        .I1(state[2]),
        .I2(state[0]),
        .I3(sl_oe_n_reg),
        .I4(state[3]),
        .I5(state[4]),
        .O(sl_oe_n_reg_i_5_n_0));
  LUT6 #(
    .INIT(64'h0000000000FDFFFD)) 
    sl_oe_n_reg_i_6
       (.I0(SL_EMPTY_N),
        .I1(cmd_wr_fullN),
        .I2(sl_mode_reg[1]),
        .I3(sl_mode_reg[0]),
        .I4(mask[0]),
        .I5(state[0]),
        .O(sl_oe_n_reg_i_6_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    sl_oe_n_reg_i_7
       (.I0(state[2]),
        .I1(state[1]),
        .O(sl_oe_n_reg_i_7_n_0));
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    sl_oe_n_reg_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(sl_oe_n_reg_i_1_n_0),
        .PRE(u_cu2f_i_1_n_0),
        .Q(sl_oe_n_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF08)) 
    sl_pktend_n_reg_i_1
       (.I0(sl_pktend_n_reg_i_2_n_0),
        .I1(sl_pktend_n_reg_i_3_n_0),
        .I2(f2u_rd_data[32]),
        .I3(sl_pktend_n_reg_i_4_n_0),
        .I4(sl_pktend_n_reg_i_5_n_0),
        .I5(sl_pktend_n_reg_i_6_n_0),
        .O(sl_pktend_n_reg_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sl_pktend_n_reg_i_10
       (.I0(remain[7]),
        .I1(remain[6]),
        .I2(remain[5]),
        .I3(remain[4]),
        .O(sl_pktend_n_reg_i_10_n_0));
  LUT3 #(
    .INIT(8'hF7)) 
    sl_pktend_n_reg_i_11
       (.I0(SL_FULL_N),
        .I1(SL_PRE_FULL_N),
        .I2(f2u_rd_empty),
        .O(sl_pktend_n_reg_i_11_n_0));
  LUT6 #(
    .INIT(64'h8BA8888888080802)) 
    sl_pktend_n_reg_i_2
       (.I0(SL_WR_N1),
        .I1(state[4]),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .I5(state[3]),
        .O(sl_pktend_n_reg_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sl_pktend_n_reg_i_3
       (.I0(sl_pktend_n_reg_i_7_n_0),
        .I1(sl_pktend_n_reg_i_8_n_0),
        .I2(sl_pktend_n_reg_i_9_n_0),
        .I3(sl_pktend_n_reg_i_10_n_0),
        .O(sl_pktend_n_reg_i_3_n_0));
  LUT6 #(
    .INIT(64'hFF20F300F300F003)) 
    sl_pktend_n_reg_i_4
       (.I0(sl_pktend_n_reg_i_11_n_0),
        .I1(state[0]),
        .I2(state[3]),
        .I3(state[4]),
        .I4(state[1]),
        .I5(state[2]),
        .O(sl_pktend_n_reg_i_4_n_0));
  LUT6 #(
    .INIT(64'h888888880FFF0000)) 
    sl_pktend_n_reg_i_5
       (.I0(SL_WR_N_i_4_n_0),
        .I1(\state[2]_i_22_n_0 ),
        .I2(SL_WR_N_i_6_n_0),
        .I3(SL_WR_N1),
        .I4(sl_pktend_n_reg),
        .I5(SL_WR_N_i_5_n_0),
        .O(sl_pktend_n_reg_i_5_n_0));
  LUT5 #(
    .INIT(32'h0808080F)) 
    sl_pktend_n_reg_i_6
       (.I0(sl_pktend_n_reg),
        .I1(f2u_rd_empty),
        .I2(SL_WR_N_i_4_n_0),
        .I3(\cnt[0]_i_8_n_0 ),
        .I4(f2u_rd_data[32]),
        .O(sl_pktend_n_reg_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sl_pktend_n_reg_i_7
       (.I0(remain[11]),
        .I1(remain[10]),
        .I2(remain[9]),
        .I3(remain[8]),
        .O(sl_pktend_n_reg_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sl_pktend_n_reg_i_8
       (.I0(remain[15]),
        .I1(remain[14]),
        .I2(remain[13]),
        .I3(remain[12]),
        .O(sl_pktend_n_reg_i_8_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sl_pktend_n_reg_i_9
       (.I0(remain[3]),
        .I1(remain[2]),
        .I2(remain[1]),
        .I3(remain[0]),
        .O(sl_pktend_n_reg_i_9_n_0));
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    sl_pktend_n_reg_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(sl_pktend_n_reg_i_1_n_0),
        .PRE(u_cu2f_i_1_n_0),
        .Q(sl_pktend_n_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF60000)) 
    sl_rd_n_reg_i_1
       (.I0(state[1]),
        .I1(state[2]),
        .I2(state[0]),
        .I3(SL_RD_N_i_2_n_0),
        .I4(sl_rd_n_reg),
        .I5(SL_RD_N_i_3_n_0),
        .O(sl_rd_n_reg_i_1_n_0));
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    sl_rd_n_reg_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(sl_rd_n_reg_i_1_n_0),
        .PRE(u_cu2f_i_1_n_0),
        .Q(sl_rd_n_reg));
  LUT3 #(
    .INIT(8'hF8)) 
    sl_wr_n_reg_i_1
       (.I0(sl_wr_n_reg),
        .I1(SL_WR_N_i_2_n_0),
        .I2(SL_WR_N_i_3_n_0),
        .O(sl_wr_n_reg_i_1_n_0));
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    sl_wr_n_reg_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .D(sl_wr_n_reg_i_1_n_0),
        .PRE(u_cu2f_i_1_n_0),
        .Q(sl_wr_n_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \state[0]_i_1 
       (.I0(\state[0]_i_2_n_0 ),
        .I1(\state[0]_i_3_n_0 ),
        .I2(\state[0]_i_4_n_0 ),
        .I3(\state[0]_i_5_n_0 ),
        .I4(\state[0]_i_6_n_0 ),
        .I5(\state[0]_i_7_n_0 ),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h0031)) 
    \state[0]_i_10 
       (.I0(\state[0]_i_16_n_0 ),
        .I1(state[2]),
        .I2(state[1]),
        .I3(state[0]),
        .O(\state[0]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h00D10000)) 
    \state[0]_i_11 
       (.I0(sl_pktend_n_reg_i_3_n_0),
        .I1(SL_RD_N0),
        .I2(sl_mode_reg[1]),
        .I3(state[0]),
        .I4(state[1]),
        .O(\state[0]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h0B)) 
    \state[0]_i_12 
       (.I0(f2u_rd_empty),
        .I1(SL_FULL_N),
        .I2(state[1]),
        .O(\state[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h4444444F44444444)) 
    \state[0]_i_13 
       (.I0(\state[4]_i_18_n_0 ),
        .I1(\state[2]_i_26_n_0 ),
        .I2(cnt[1]),
        .I3(cnt[0]),
        .I4(\SL_DT_O[29]_i_4_n_0 ),
        .I5(\state[0]_i_17_n_0 ),
        .O(\state[0]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \state[0]_i_14 
       (.I0(SL_FULL_N),
        .I1(f2u_rd_empty),
        .I2(state[0]),
        .O(\state[0]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h000004FF)) 
    \state[0]_i_15 
       (.I0(SL_PRE_FULL_N),
        .I1(SL_FULL_N),
        .I2(f2u_rd_empty),
        .I3(state[1]),
        .I4(state[0]),
        .O(\state[0]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h77747777)) 
    \state[0]_i_16 
       (.I0(mask[0]),
        .I1(sl_mode_reg[0]),
        .I2(sl_mode_reg[1]),
        .I3(cmd_wr_fullN),
        .I4(SL_EMPTY_N),
        .O(\state[0]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \state[0]_i_17 
       (.I0(sl_mode_reg[1]),
        .I1(SL_FULL_N),
        .I2(state[0]),
        .O(\state[0]_i_17_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h00040000)) 
    \state[0]_i_2 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[0]),
        .I3(state[4]),
        .I4(state[3]),
        .O(\state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8A88)) 
    \state[0]_i_3 
       (.I0(\state[2]_i_12_n_0 ),
        .I1(\state[0]_i_8_n_0 ),
        .I2(\state[2]_i_10_n_0 ),
        .I3(\state[0]_i_9_n_0 ),
        .I4(\state[0]_i_10_n_0 ),
        .I5(\state[0]_i_11_n_0 ),
        .O(\state[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h5500E400FF00E400)) 
    \state[0]_i_4 
       (.I0(state[0]),
        .I1(SL_FULL_N),
        .I2(f2u_rd_empty),
        .I3(\state[3]_i_7_n_0 ),
        .I4(state[1]),
        .I5(\SL_DT_O[29]_i_4_n_0 ),
        .O(\state[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \state[0]_i_5 
       (.I0(state[4]),
        .I1(state[3]),
        .I2(state[2]),
        .O(\state[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFAF2F2)) 
    \state[0]_i_6 
       (.I0(\state[0]_i_12_n_0 ),
        .I1(sl_mode_reg[0]),
        .I2(\state[0]_i_13_n_0 ),
        .I3(\state[0]_i_14_n_0 ),
        .I4(\state[3]_i_18_n_0 ),
        .I5(\state[0]_i_15_n_0 ),
        .O(\state[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \state[0]_i_7 
       (.I0(state[0]),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(\state[2]_i_22_n_0 ),
        .O(\state[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \state[0]_i_8 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(SL_RD_N0),
        .I3(SL_PRE_EMPTY_N),
        .O(\state[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \state[0]_i_9 
       (.I0(ctl_cmd[1]),
        .I1(ctl_cmd[2]),
        .I2(state[2]),
        .I3(ctl_cmd[0]),
        .I4(state[1]),
        .I5(state[0]),
        .O(\state[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFEEE)) 
    \state[1]_i_1 
       (.I0(\state[1]_i_2_n_0 ),
        .I1(\state[1]_i_3_n_0 ),
        .I2(\state[4]_i_3_n_0 ),
        .I3(\state[1]_i_4_n_0 ),
        .I4(\state[1]_i_5_n_0 ),
        .I5(\state[1]_i_6_n_0 ),
        .O(p_0_in__0[1]));
  LUT6 #(
    .INIT(64'h010101010000FF00)) 
    \state[1]_i_10 
       (.I0(state[0]),
        .I1(\state[4]_i_18_n_0 ),
        .I2(f2u_rd_empty),
        .I3(\state[2]_i_27_n_0 ),
        .I4(state[2]),
        .I5(state[1]),
        .O(\state[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0F00440000FFFF00)) 
    \state[1]_i_11 
       (.I0(sl_mode_reg[1]),
        .I1(\state[1]_i_13_n_0 ),
        .I2(\state[3]_i_20_n_0 ),
        .I3(state[1]),
        .I4(state[0]),
        .I5(state[2]),
        .O(\state[1]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h00D50000)) 
    \state[1]_i_12 
       (.I0(SL_FULL_N),
        .I1(f2u_rd_empty),
        .I2(sl_mode_reg[1]),
        .I3(state[0]),
        .I4(state[1]),
        .O(\state[1]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \state[1]_i_13 
       (.I0(SL_PRE_FULL_N),
        .I1(SL_FULL_N),
        .O(\state[1]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hFFAE0000)) 
    \state[1]_i_2 
       (.I0(\state[1]_i_7_n_0 ),
        .I1(\state[1]_i_8_n_0 ),
        .I2(\state[2]_i_10_n_0 ),
        .I3(\state[1]_i_9_n_0 ),
        .I4(\state[2]_i_12_n_0 ),
        .O(\state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000004C00)) 
    \state[1]_i_3 
       (.I0(\SL_DT_O[29]_i_4_n_0 ),
        .I1(state[1]),
        .I2(state[0]),
        .I3(state[4]),
        .I4(state[3]),
        .I5(state[2]),
        .O(\state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEEEAEEAAAAEAAAAA)) 
    \state[1]_i_4 
       (.I0(\state[1]_i_10_n_0 ),
        .I1(\state[4]_i_17_n_0 ),
        .I2(sl_mode_reg[1]),
        .I3(SL_WR_N1),
        .I4(\state[2]_i_15_n_0 ),
        .I5(sl_pktend_n_reg_i_3_n_0),
        .O(\state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFAEFFAEAEAEFFAE)) 
    \state[1]_i_5 
       (.I0(\state[1]_i_11_n_0 ),
        .I1(\state[3]_i_16_n_0 ),
        .I2(\cnt[0]_i_8_n_0 ),
        .I3(\state[1]_i_12_n_0 ),
        .I4(sl_mode_reg[0]),
        .I5(\state[2]_i_15_n_0 ),
        .O(\state[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \state[1]_i_6 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[4]),
        .I3(state[3]),
        .I4(state[2]),
        .I5(\cnt[0]_i_8_n_0 ),
        .O(\state[1]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h3C34)) 
    \state[1]_i_7 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[0]),
        .I3(SL_RD_N0),
        .O(\state[1]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h00000400)) 
    \state[1]_i_8 
       (.I0(ctl_cmd[0]),
        .I1(ctl_cmd[1]),
        .I2(ctl_cmd[2]),
        .I3(state[2]),
        .I4(state[1]),
        .O(\state[1]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \state[1]_i_9 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(sl_pktend_n_reg_i_3_n_0),
        .O(\state[1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFEEE)) 
    \state[2]_i_1 
       (.I0(\state[2]_i_2_n_0 ),
        .I1(\state[2]_i_3_n_0 ),
        .I2(\state[4]_i_3_n_0 ),
        .I3(\state[2]_i_4_n_0 ),
        .I4(\state[2]_i_5_n_0 ),
        .I5(\state[2]_i_6_n_0 ),
        .O(p_0_in__0[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \state[2]_i_10 
       (.I0(\fifo_sel[1]_i_12_n_0 ),
        .I1(dat_leng[0]),
        .I2(dat_leng[3]),
        .I3(dat_leng[6]),
        .I4(\state[2]_i_24_n_0 ),
        .I5(ctl_cmd[3]),
        .O(\state[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000080008080800)) 
    \state[2]_i_11 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[0]),
        .I3(sl_pktend_n_reg_i_3_n_0),
        .I4(SL_RD_N0),
        .I5(sl_mode_reg[1]),
        .O(\state[2]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \state[2]_i_12 
       (.I0(state[3]),
        .I1(state[4]),
        .O(\state[2]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAAEFAAAAAAAAAAAA)) 
    \state[2]_i_13 
       (.I0(\state[2]_i_25_n_0 ),
        .I1(SL_PRE_FULL_N),
        .I2(sl_pktend_n_reg_i_3_n_0),
        .I3(f2u_rd_empty),
        .I4(\state[4]_i_17_n_0 ),
        .I5(\state[3]_i_7_n_0 ),
        .O(\state[2]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000088800000000)) 
    \state[2]_i_14 
       (.I0(state[2]),
        .I1(\state[2]_i_26_n_0 ),
        .I2(timeout[2]),
        .I3(timeout[1]),
        .I4(SL_PRE_FULL_N),
        .I5(SL_FULL_N),
        .O(\state[2]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \state[2]_i_15 
       (.I0(cnt[1]),
        .I1(cnt[0]),
        .I2(\SL_DT_O[29]_i_4_n_0 ),
        .O(\state[2]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h000008FF00000808)) 
    \state[2]_i_16 
       (.I0(state[2]),
        .I1(SL_FULL_N),
        .I2(f2u_rd_empty),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\state[2]_i_27_n_0 ),
        .O(\state[2]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \state[2]_i_17 
       (.I0(state[2]),
        .I1(state[0]),
        .O(\state[2]_i_17_n_0 ));
  LUT5 #(
    .INIT(32'h0000AAA8)) 
    \state[2]_i_18 
       (.I0(sl_mode_reg[1]),
        .I1(cnt[1]),
        .I2(cnt[0]),
        .I3(\SL_DT_O[29]_i_4_n_0 ),
        .I4(sl_mode_reg[0]),
        .O(\state[2]_i_18_n_0 ));
  LUT3 #(
    .INIT(8'h07)) 
    \state[2]_i_19 
       (.I0(SL_FULL_N),
        .I1(SL_PRE_FULL_N),
        .I2(sl_mode_reg[1]),
        .O(\state[2]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEEFEAAAAAAAA)) 
    \state[2]_i_2 
       (.I0(\state[2]_i_7_n_0 ),
        .I1(\state[2]_i_8_n_0 ),
        .I2(\state[2]_i_9_n_0 ),
        .I3(\state[2]_i_10_n_0 ),
        .I4(\state[2]_i_11_n_0 ),
        .I5(\state[2]_i_12_n_0 ),
        .O(\state[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0D)) 
    \state[2]_i_20 
       (.I0(sl_mode_reg[1]),
        .I1(SL_FULL_N),
        .I2(f2u_rd_empty),
        .O(\state[2]_i_20_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \state[2]_i_21 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[2]),
        .O(\state[2]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \state[2]_i_22 
       (.I0(sl_pktend_n_reg_i_3_n_0),
        .I1(SL_FULL_N),
        .O(\state[2]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h135F)) 
    \state[2]_i_23 
       (.I0(mask[1]),
        .I1(mask[0]),
        .I2(sl_mode_reg[1]),
        .I3(sl_mode_reg[0]),
        .O(\state[2]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \state[2]_i_24 
       (.I0(dat_leng[9]),
        .I1(dat_leng[12]),
        .O(\state[2]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'h00800080CC8CCC80)) 
    \state[2]_i_25 
       (.I0(f2u_rd_empty),
        .I1(\state[4]_i_8_n_0 ),
        .I2(state[2]),
        .I3(state[1]),
        .I4(SL_FULL_N),
        .I5(state[0]),
        .O(\state[2]_i_25_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \state[2]_i_26 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\state[2]_i_26_n_0 ));
  LUT5 #(
    .INIT(32'hCF038B03)) 
    \state[2]_i_27 
       (.I0(timeout[1]),
        .I1(SL_EMPTY_N),
        .I2(sl_mode_reg[0]),
        .I3(timeout[2]),
        .I4(timeout[0]),
        .O(\state[2]_i_27_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFAAAAAAAAAAAA)) 
    \state[2]_i_3 
       (.I0(\state[2]_i_13_n_0 ),
        .I1(\SL_DT_O[29]_i_4_n_0 ),
        .I2(state[1]),
        .I3(state[0]),
        .I4(\state[4]_i_8_n_0 ),
        .I5(state[2]),
        .O(\state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAABABABABABA)) 
    \state[2]_i_4 
       (.I0(\state[2]_i_14_n_0 ),
        .I1(state[1]),
        .I2(state[2]),
        .I3(sl_mode_reg[0]),
        .I4(\state[2]_i_15_n_0 ),
        .I5(sl_mode_reg[1]),
        .O(\state[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEEEEEEA)) 
    \state[2]_i_5 
       (.I0(\state[2]_i_16_n_0 ),
        .I1(\state[2]_i_17_n_0 ),
        .I2(\state[2]_i_18_n_0 ),
        .I3(\state[2]_i_19_n_0 ),
        .I4(\state[2]_i_20_n_0 ),
        .I5(\state[2]_i_21_n_0 ),
        .O(\state[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004000000)) 
    \state[2]_i_6 
       (.I0(state[1]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[0]),
        .I4(state[4]),
        .I5(\state[2]_i_22_n_0 ),
        .O(\state[2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \state[2]_i_7 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[4]),
        .O(\state[2]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'h30C430C7)) 
    \state[2]_i_8 
       (.I0(\state[4]_i_19_n_0 ),
        .I1(state[2]),
        .I2(state[0]),
        .I3(state[1]),
        .I4(\state[2]_i_23_n_0 ),
        .O(\state[2]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h00004600)) 
    \state[2]_i_9 
       (.I0(ctl_cmd[1]),
        .I1(ctl_cmd[2]),
        .I2(ctl_cmd[0]),
        .I3(state[2]),
        .I4(state[1]),
        .O(\state[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEEEEEEEEE)) 
    \state[3]_i_1 
       (.I0(\state[3]_i_2_n_0 ),
        .I1(\state[3]_i_3_n_0 ),
        .I2(\state[3]_i_4_n_0 ),
        .I3(\state[3]_i_5_n_0 ),
        .I4(\state[3]_i_6_n_0 ),
        .I5(\state[4]_i_3_n_0 ),
        .O(p_0_in__0[3]));
  LUT3 #(
    .INIT(8'h4F)) 
    \state[3]_i_10 
       (.I0(\SL_DT_O[29]_i_4_n_0 ),
        .I1(state[1]),
        .I2(state[0]),
        .O(\state[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0808080808080008)) 
    \state[3]_i_11 
       (.I0(\state[3]_i_26_n_0 ),
        .I1(\state[3]_i_27_n_0 ),
        .I2(ctl_cmd[1]),
        .I3(\state[3]_i_28_n_0 ),
        .I4(\fifo_sel[1]_i_12_n_0 ),
        .I5(ctl_cmd[3]),
        .O(\state[3]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h8B)) 
    \state[3]_i_12 
       (.I0(sl_mode_reg[1]),
        .I1(SL_RD_N0),
        .I2(sl_pktend_n_reg_i_3_n_0),
        .O(\state[3]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hFF00E000)) 
    \state[3]_i_13 
       (.I0(SL_PRE_EMPTY_N),
        .I1(SL_RD_N0),
        .I2(state[3]),
        .I3(state[1]),
        .I4(state[0]),
        .O(\state[3]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \state[3]_i_14 
       (.I0(state[4]),
        .I1(state[3]),
        .I2(state[2]),
        .O(\state[3]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \state[3]_i_15 
       (.I0(state[3]),
        .I1(state[4]),
        .I2(state[1]),
        .I3(state[0]),
        .I4(state[2]),
        .I5(\control_flit[12]_i_4_n_0 ),
        .O(\state[3]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \state[3]_i_16 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(SL_FULL_N),
        .O(\state[3]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \state[3]_i_17 
       (.I0(sl_mode_reg[0]),
        .I1(f2u_rd_empty),
        .I2(state[3]),
        .O(\state[3]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \state[3]_i_18 
       (.I0(\SL_DT_O[29]_i_4_n_0 ),
        .I1(cnt[0]),
        .I2(cnt[1]),
        .I3(sl_mode_reg[1]),
        .O(\state[3]_i_18_n_0 ));
  LUT3 #(
    .INIT(8'h07)) 
    \state[3]_i_19 
       (.I0(sl_mode_reg[1]),
        .I1(f2u_rd_empty),
        .I2(SL_PRE_FULL_N),
        .O(\state[3]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA8A888A888A88)) 
    \state[3]_i_2 
       (.I0(\state[3]_i_7_n_0 ),
        .I1(\state[3]_i_8_n_0 ),
        .I2(\state[3]_i_9_n_0 ),
        .I3(\state[4]_i_17_n_0 ),
        .I4(state[3]),
        .I5(\state[3]_i_10_n_0 ),
        .O(\state[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFDDD)) 
    \state[3]_i_20 
       (.I0(SL_FULL_N),
        .I1(SL_PRE_FULL_N),
        .I2(timeout[1]),
        .I3(timeout[2]),
        .O(\state[3]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h553055305530FF30)) 
    \state[3]_i_21 
       (.I0(timeout[2]),
        .I1(sl_mode_reg[1]),
        .I2(sl_mode_reg[0]),
        .I3(SL_EMPTY_N),
        .I4(timeout[1]),
        .I5(timeout[0]),
        .O(\state[3]_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \state[3]_i_22 
       (.I0(SL_FULL_N),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[1]),
        .O(\state[3]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h8F8F8F8F8F8F808F)) 
    \state[3]_i_23 
       (.I0(sl_pktend_n_reg_i_3_n_0),
        .I1(SL_WR_N1),
        .I2(state[0]),
        .I3(ctl_cmd[3]),
        .I4(ctl_cmd[0]),
        .I5(\state[3]_i_29_n_0 ),
        .O(\state[3]_i_23_n_0 ));
  LUT5 #(
    .INIT(32'h5554FFFF)) 
    \state[3]_i_24 
       (.I0(sl_mode_reg[0]),
        .I1(cnt[1]),
        .I2(cnt[0]),
        .I3(\SL_DT_O[29]_i_4_n_0 ),
        .I4(sl_mode_reg[1]),
        .O(\state[3]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h8088)) 
    \state[3]_i_25 
       (.I0(state[3]),
        .I1(state[0]),
        .I2(f2u_rd_empty),
        .I3(SL_FULL_N),
        .O(\state[3]_i_25_n_0 ));
  LUT3 #(
    .INIT(8'h18)) 
    \state[3]_i_26 
       (.I0(ctl_cmd[2]),
        .I1(ctl_cmd[0]),
        .I2(ctl_cmd[3]),
        .O(\state[3]_i_26_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \state[3]_i_27 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\state[3]_i_27_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \state[3]_i_28 
       (.I0(dat_leng[0]),
        .I1(dat_leng[3]),
        .I2(dat_leng[6]),
        .I3(dat_leng[12]),
        .I4(dat_leng[9]),
        .O(\state[3]_i_28_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \state[3]_i_29 
       (.I0(ctl_cmd[2]),
        .I1(ctl_cmd[1]),
        .O(\state[3]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEA0000)) 
    \state[3]_i_3 
       (.I0(\state[3]_i_11_n_0 ),
        .I1(\state[3]_i_12_n_0 ),
        .I2(state[1]),
        .I3(\state[3]_i_13_n_0 ),
        .I4(\state[3]_i_14_n_0 ),
        .I5(\state[3]_i_15_n_0 ),
        .O(\state[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA08AA0808)) 
    \state[3]_i_4 
       (.I0(\state[3]_i_16_n_0 ),
        .I1(\state[3]_i_17_n_0 ),
        .I2(\state[3]_i_18_n_0 ),
        .I3(\cnt[0]_i_8_n_0 ),
        .I4(state[3]),
        .I5(\state[3]_i_19_n_0 ),
        .O(\state[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h220055FA000055AA)) 
    \state[3]_i_5 
       (.I0(state[0]),
        .I1(\state[3]_i_20_n_0 ),
        .I2(\state[3]_i_21_n_0 ),
        .I3(state[1]),
        .I4(state[2]),
        .I5(state[3]),
        .O(\state[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBABA3000BAAA3000)) 
    \state[3]_i_6 
       (.I0(\state[3]_i_22_n_0 ),
        .I1(state[1]),
        .I2(state[2]),
        .I3(\state[3]_i_23_n_0 ),
        .I4(\state[3]_i_24_n_0 ),
        .I5(\state[3]_i_25_n_0 ),
        .O(\state[3]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \state[3]_i_7 
       (.I0(state[2]),
        .I1(state[4]),
        .I2(state[3]),
        .O(\state[3]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h08FF08F8)) 
    \state[3]_i_8 
       (.I0(state[3]),
        .I1(f2u_rd_empty),
        .I2(state[1]),
        .I3(state[0]),
        .I4(SL_FULL_N),
        .O(\state[3]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \state[3]_i_9 
       (.I0(sl_pktend_n_reg_i_3_n_0),
        .I1(f2u_rd_empty),
        .I2(SL_PRE_FULL_N),
        .O(\state[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEEEEAAA)) 
    \state[4]_i_1 
       (.I0(\state[4]_i_2_n_0 ),
        .I1(\state[4]_i_3_n_0 ),
        .I2(\state[4]_i_4_n_0 ),
        .I3(\state[4]_i_5_n_0 ),
        .I4(\state[4]_i_6_n_0 ),
        .I5(\state[4]_i_7_n_0 ),
        .O(p_0_in__0[4]));
  LUT5 #(
    .INIT(32'h01FF0100)) 
    \state[4]_i_10 
       (.I0(cnt[1]),
        .I1(cnt[0]),
        .I2(\SL_DT_O[29]_i_4_n_0 ),
        .I3(sl_mode_reg[1]),
        .I4(state[4]),
        .O(\state[4]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hA888A888A888FFFF)) 
    \state[4]_i_11 
       (.I0(state[0]),
        .I1(\state[4]_i_18_n_0 ),
        .I2(timeout[1]),
        .I3(timeout[2]),
        .I4(sl_pktend_n_reg_i_3_n_0),
        .I5(sl_pktend_n_reg_i_11_n_0),
        .O(\state[4]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \state[4]_i_12 
       (.I0(state[0]),
        .I1(f2u_rd_empty),
        .I2(sl_mode_reg[1]),
        .I3(\SL_DT_O[29]_i_4_n_0 ),
        .I4(cnt[0]),
        .I5(cnt[1]),
        .O(\state[4]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h8888A888F888A888)) 
    \state[4]_i_13 
       (.I0(state[4]),
        .I1(state[0]),
        .I2(SL_PRE_FULL_N),
        .I3(SL_FULL_N),
        .I4(f2u_rd_empty),
        .I5(sl_mode_reg[1]),
        .O(\state[4]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000005C50)) 
    \state[4]_i_14 
       (.I0(\state[4]_i_19_n_0 ),
        .I1(\state[3]_i_21_n_0 ),
        .I2(state[2]),
        .I3(state[4]),
        .I4(state[1]),
        .I5(state[0]),
        .O(\state[4]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \state[4]_i_15 
       (.I0(state[4]),
        .I1(sl_mode_reg[0]),
        .O(\state[4]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \state[4]_i_16 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(state[1]),
        .O(\state[4]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \state[4]_i_17 
       (.I0(state[1]),
        .I1(state[0]),
        .O(\state[4]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \state[4]_i_18 
       (.I0(SL_PRE_FULL_N),
        .I1(SL_FULL_N),
        .O(\state[4]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \state[4]_i_19 
       (.I0(ctl_cmd[3]),
        .I1(ctl_cmd[0]),
        .I2(ctl_cmd[1]),
        .I3(ctl_cmd[2]),
        .O(\state[4]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0F00AA000000BB00)) 
    \state[4]_i_2 
       (.I0(state[2]),
        .I1(SL_FULL_N),
        .I2(\SL_DT_O[29]_i_4_n_0 ),
        .I3(\state[4]_i_8_n_0 ),
        .I4(state[1]),
        .I5(state[0]),
        .O(\state[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \state[4]_i_3 
       (.I0(state[3]),
        .I1(state[4]),
        .O(\state[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \state[4]_i_4 
       (.I0(state[2]),
        .I1(state[1]),
        .O(\state[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBA)) 
    \state[4]_i_5 
       (.I0(\state[4]_i_9_n_0 ),
        .I1(SL_FULL_N),
        .I2(\state[4]_i_10_n_0 ),
        .I3(\state[4]_i_11_n_0 ),
        .I4(\state[4]_i_12_n_0 ),
        .I5(\state[4]_i_13_n_0 ),
        .O(\state[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBFBAAAAAAAAA)) 
    \state[4]_i_6 
       (.I0(\state[4]_i_14_n_0 ),
        .I1(sl_pktend_n_reg_i_3_n_0),
        .I2(SL_WR_N1),
        .I3(\state[4]_i_15_n_0 ),
        .I4(\state[4]_i_10_n_0 ),
        .I5(\state[4]_i_16_n_0 ),
        .O(\state[4]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h20200020)) 
    \state[4]_i_7 
       (.I0(\state[4]_i_17_n_0 ),
        .I1(state[3]),
        .I2(state[4]),
        .I3(SL_PRE_FULL_N),
        .I4(\cnt[0]_i_8_n_0 ),
        .O(\state[4]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h10550000)) 
    \state[4]_i_8 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[4]),
        .O(\state[4]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h44040404)) 
    \state[4]_i_9 
       (.I0(sl_mode_reg[0]),
        .I1(state[4]),
        .I2(SL_FULL_N),
        .I3(f2u_rd_empty),
        .I4(sl_mode_reg[1]),
        .O(\state[4]_i_9_n_0 ));
  (* FSM_ENCODED_STATES = "STA_READY:00000,STA_CMD0:00001,STA_CMD1:00010,STA_CMD2:00011,STA_PAR:00100,STA_U2F_GUARD:00101,STA_U2F:00110,STA_U2F_PRE_EMPTY_N:00111,STA_U2F_WAIT_EMPTY_N:01000,STA_U2F_END0:01001,STA_U2F_END1:01010,STA_U2F_END2:01011,STA_F2U_GUARD:01100,STA_F2U0:01101,STA_F2U:01110,STA_F2U_WAIT_FULL_N:01111,STA_F2U_WAIT_FULL:10000,STA_F2U_WAIT_EMPTY:10001,STA_F2U_WAIT:10010,STA_F2U_ZLP:10011,STA_F2U_END:10100,STA_REQ:10101" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(p_0_in__0[0]),
        .Q(state[0]));
  (* FSM_ENCODED_STATES = "STA_READY:00000,STA_CMD0:00001,STA_CMD1:00010,STA_CMD2:00011,STA_PAR:00100,STA_U2F_GUARD:00101,STA_U2F:00110,STA_U2F_PRE_EMPTY_N:00111,STA_U2F_WAIT_EMPTY_N:01000,STA_U2F_END0:01001,STA_U2F_END1:01010,STA_U2F_END2:01011,STA_F2U_GUARD:01100,STA_F2U0:01101,STA_F2U:01110,STA_F2U_WAIT_FULL_N:01111,STA_F2U_WAIT_FULL:10000,STA_F2U_WAIT_EMPTY:10001,STA_F2U_WAIT:10010,STA_F2U_ZLP:10011,STA_F2U_END:10100,STA_REQ:10101" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(p_0_in__0[1]),
        .Q(state[1]));
  (* FSM_ENCODED_STATES = "STA_READY:00000,STA_CMD0:00001,STA_CMD1:00010,STA_CMD2:00011,STA_PAR:00100,STA_U2F_GUARD:00101,STA_U2F:00110,STA_U2F_PRE_EMPTY_N:00111,STA_U2F_WAIT_EMPTY_N:01000,STA_U2F_END0:01001,STA_U2F_END1:01010,STA_U2F_END2:01011,STA_F2U_GUARD:01100,STA_F2U0:01101,STA_F2U:01110,STA_F2U_WAIT_FULL_N:01111,STA_F2U_WAIT_FULL:10000,STA_F2U_WAIT_EMPTY:10001,STA_F2U_WAIT:10010,STA_F2U_ZLP:10011,STA_F2U_END:10100,STA_REQ:10101" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[2] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(p_0_in__0[2]),
        .Q(state[2]));
  (* FSM_ENCODED_STATES = "STA_READY:00000,STA_CMD0:00001,STA_CMD1:00010,STA_CMD2:00011,STA_PAR:00100,STA_U2F_GUARD:00101,STA_U2F:00110,STA_U2F_PRE_EMPTY_N:00111,STA_U2F_WAIT_EMPTY_N:01000,STA_U2F_END0:01001,STA_U2F_END1:01010,STA_U2F_END2:01011,STA_F2U_GUARD:01100,STA_F2U0:01101,STA_F2U:01110,STA_F2U_WAIT_FULL_N:01111,STA_F2U_WAIT_FULL:10000,STA_F2U_WAIT_EMPTY:10001,STA_F2U_WAIT:10010,STA_F2U_ZLP:10011,STA_F2U_END:10100,STA_REQ:10101" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[3] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(p_0_in__0[3]),
        .Q(state[3]));
  (* FSM_ENCODED_STATES = "STA_READY:00000,STA_CMD0:00001,STA_CMD1:00010,STA_CMD2:00011,STA_PAR:00100,STA_U2F_GUARD:00101,STA_U2F:00110,STA_U2F_PRE_EMPTY_N:00111,STA_U2F_WAIT_EMPTY_N:01000,STA_U2F_END0:01001,STA_U2F_END1:01010,STA_U2F_END2:01011,STA_F2U_GUARD:01100,STA_F2U0:01101,STA_F2U:01110,STA_F2U_WAIT_FULL_N:01111,STA_F2U_WAIT_FULL:10000,STA_F2U_WAIT_EMPTY:10001,STA_F2U_WAIT:10010,STA_F2U_ZLP:10011,STA_F2U_END:10100,STA_REQ:10101" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[4] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(p_0_in__0[4]),
        .Q(state[4]));
  LUT6 #(
    .INIT(64'hFDFFFFFDFCFEFCFE)) 
    \timeout[0]_i_1 
       (.I0(state[3]),
        .I1(state[4]),
        .I2(\timeout[0]_i_2_n_0 ),
        .I3(timeout[0]),
        .I4(state[0]),
        .I5(state[2]),
        .O(\timeout[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004440000)) 
    \timeout[0]_i_2 
       (.I0(SL_PRE_FULL_N),
        .I1(SL_FULL_N),
        .I2(f2u_rd_empty),
        .I3(sl_mode_reg[1]),
        .I4(state[2]),
        .I5(state[0]),
        .O(\timeout[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000F0F000E000E00)) 
    \timeout[1]_i_1 
       (.I0(\timeout[1]_i_2_n_0 ),
        .I1(SL_PRE_FULL_N),
        .I2(\timeout[2]_i_4_n_0 ),
        .I3(timeout[1]),
        .I4(timeout[0]),
        .I5(\timeout[2]_i_2_n_0 ),
        .O(\timeout[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h8F)) 
    \timeout[1]_i_2 
       (.I0(sl_mode_reg[1]),
        .I1(f2u_rd_empty),
        .I2(SL_FULL_N),
        .O(\timeout[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FF308080)) 
    \timeout[2]_i_1 
       (.I0(timeout[0]),
        .I1(timeout[1]),
        .I2(\timeout[2]_i_2_n_0 ),
        .I3(\timeout[2]_i_3_n_0 ),
        .I4(timeout[2]),
        .I5(\timeout[2]_i_4_n_0 ),
        .O(\timeout[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \timeout[2]_i_2 
       (.I0(state[0]),
        .I1(state[2]),
        .O(\timeout[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7777777777474747)) 
    \timeout[2]_i_3 
       (.I0(timeout[0]),
        .I1(\timeout[2]_i_2_n_0 ),
        .I2(SL_FULL_N),
        .I3(f2u_rd_empty),
        .I4(sl_mode_reg[1]),
        .I5(SL_PRE_FULL_N),
        .O(\timeout[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \timeout[2]_i_4 
       (.I0(state[4]),
        .I1(state[3]),
        .O(\timeout[2]_i_4_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \timeout_reg[0] 
       (.C(f2u_rd_clk),
        .CE(g0_b0__0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\timeout[0]_i_1_n_0 ),
        .Q(timeout[0]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \timeout_reg[1] 
       (.C(f2u_rd_clk),
        .CE(g0_b0__0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\timeout[1]_i_1_n_0 ),
        .Q(timeout[1]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \timeout_reg[2] 
       (.C(f2u_rd_clk),
        .CE(g0_b0__0_n_0),
        .CLR(u_cu2f_i_1_n_0),
        .D(\timeout[2]_i_1_n_0 ),
        .Q(timeout[2]));
  LUT2 #(
    .INIT(4'h4)) 
    \u2f_wr_data[31]_i_1 
       (.I0(fifo_sel[1]),
        .I1(fifo_sel[0]),
        .O(\u2f_wr_data[31]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[0] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[0]),
        .Q(u2f_wr_data[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[10] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[10]),
        .Q(u2f_wr_data[10]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[11] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[11]),
        .Q(u2f_wr_data[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[12] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[12]),
        .Q(u2f_wr_data[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[13] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[13]),
        .Q(u2f_wr_data[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[14] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[14]),
        .Q(u2f_wr_data[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[15] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[15]),
        .Q(u2f_wr_data[15]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[16] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[16]),
        .Q(u2f_wr_data[16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[17] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[17]),
        .Q(u2f_wr_data[17]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[18] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[18]),
        .Q(u2f_wr_data[18]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[19] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[19]),
        .Q(u2f_wr_data[19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[1] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[1]),
        .Q(u2f_wr_data[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[20] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[20]),
        .Q(u2f_wr_data[20]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[21] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[21]),
        .Q(u2f_wr_data[21]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[22] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[22]),
        .Q(u2f_wr_data[22]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[23] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[23]),
        .Q(u2f_wr_data[23]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[24] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[24]),
        .Q(u2f_wr_data[24]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[25] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[25]),
        .Q(u2f_wr_data[25]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[26] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[26]),
        .Q(u2f_wr_data[26]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[27] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[27]),
        .Q(u2f_wr_data[27]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[28] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[28]),
        .Q(u2f_wr_data[28]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[29] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[29]),
        .Q(u2f_wr_data[29]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[2] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[2]),
        .Q(u2f_wr_data[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[30] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[30]),
        .Q(u2f_wr_data[30]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[31] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[31]),
        .Q(u2f_wr_data[31]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[3] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[3]),
        .Q(u2f_wr_data[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[4] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[4]),
        .Q(u2f_wr_data[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[5] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[5]),
        .Q(u2f_wr_data[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[6] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[6]),
        .Q(u2f_wr_data[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[7] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[7]),
        .Q(u2f_wr_data[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[8] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[8]),
        .Q(u2f_wr_data[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \u2f_wr_data_reg[9] 
       (.C(f2u_rd_clk),
        .CE(\u2f_wr_data[31]_i_1_n_0 ),
        .CLR(\SL_AD[1]_i_2_n_0 ),
        .D(SL_DT_I[9]),
        .Q(u2f_wr_data[9]));
  LUT3 #(
    .INIT(8'h10)) 
    u2f_wr_valid_i_1
       (.I0(SL_RD_N1),
        .I1(fifo_sel[1]),
        .I2(fifo_sel[0]),
        .O(u2f_wr_valid_i_1_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    u2f_wr_valid_reg
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(u2f_wr_valid_i_1_n_0),
        .Q(u2f_wr_valid));
  (* DEPTH_FIFO = "512" *) 
  (* WIDTH_FIFO = "32" *) 
  gpif2mst_gpif2mst_async__xdcDup__1 u_cu2f
       (.empty(cmd_rd_empty),
        .emptyN(NLW_u_cu2f_emptyN_UNCONNECTED),
        .full(cmd_wr_full),
        .fullN(cmd_wr_fullN),
        .items(cmd_rd_items),
        .rd_clk(cmd_rd_clk),
        .rd_data(cmd_rd_data),
        .rd_ready(cmd_rd_ready),
        .rd_valid(cmd_rd_valid),
        .rooms(cmd_wr_rooms),
        .rst(u_cu2f_i_1_n_0),
        .wr_clk(cmd_wr_clk),
        .wr_data(cmd_wr_data),
        .wr_ready(cmd_wr_ready),
        .wr_valid(cmd_wr_valid));
  LUT1 #(
    .INIT(2'h1)) 
    u_cu2f_i_1
       (.I0(SYS_RST_N),
        .O(u_cu2f_i_1_n_0));
  (* DEPTH_FIFO = "512" *) 
  (* WIDTH_FIFO = "34" *) 
  gpif2mst_gpif2mst_async__parameterized0 u_df2u
       (.empty(f2u_rd_empty),
        .emptyN(f2u_rd_emptyN),
        .full(f2u_wr_full),
        .fullN(NLW_u_df2u_fullN_UNCONNECTED),
        .items(f2u_rd_items),
        .rd_clk(f2u_rd_clk),
        .rd_data(f2u_rd_data),
        .rd_ready(f2u_rd_ready),
        .rd_valid(f2u_rd_valid),
        .rooms(f2u_wr_rooms),
        .rst(u_cu2f_i_1_n_0),
        .wr_clk(f2u_wr_clk),
        .wr_data(f2u_wr_data),
        .wr_ready(f2u_wr_ready),
        .wr_valid(f2u_wr_valid));
  (* DEPTH_FIFO = "512" *) 
  (* WIDTH_FIFO = "32" *) 
  gpif2mst_gpif2mst_async u_du2f
       (.empty(u2f_rd_empty),
        .emptyN(NLW_u_du2f_emptyN_UNCONNECTED),
        .full(u2f_wr_full),
        .fullN(u2f_wr_fullN),
        .items(u2f_rd_items),
        .rd_clk(u2f_rd_clk),
        .rd_data(u2f_rd_data),
        .rd_ready(u2f_rd_ready),
        .rd_valid(u2f_rd_valid),
        .rooms(u2f_wr_rooms),
        .rst(u_cu2f_i_1_n_0),
        .wr_clk(u2f_wr_clk),
        .wr_data(u2f_wr_data),
        .wr_ready(u2f_wr_ready),
        .wr_valid(u2f_wr_valid));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \written[0]_i_1 
       (.I0(\written[15]_i_2_n_0 ),
        .I1(\written_reg[7]_i_2_n_15 ),
        .O(\written[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \written[10]_i_1 
       (.I0(\written_reg[15]_i_3_n_13 ),
        .I1(\written[15]_i_2_n_0 ),
        .O(\written[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \written[11]_i_1 
       (.I0(\written[15]_i_2_n_0 ),
        .I1(\written_reg[15]_i_3_n_12 ),
        .O(\written[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \written[12]_i_1 
       (.I0(\written[15]_i_2_n_0 ),
        .I1(\written_reg[15]_i_3_n_11 ),
        .O(\written[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \written[13]_i_1 
       (.I0(\written_reg[15]_i_3_n_10 ),
        .I1(\written[15]_i_2_n_0 ),
        .O(\written[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \written[14]_i_1 
       (.I0(\written_reg[15]_i_3_n_9 ),
        .I1(\written[15]_i_2_n_0 ),
        .O(\written[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \written[15]_i_1 
       (.I0(\written[15]_i_2_n_0 ),
        .I1(\written_reg[15]_i_3_n_8 ),
        .O(\written[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000001FFFFFFFF)) 
    \written[15]_i_2 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(state[1]),
        .I3(state[0]),
        .I4(state[4]),
        .I5(sl_pktend_n_reg),
        .O(\written[15]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \written[1]_i_1 
       (.I0(\written[15]_i_2_n_0 ),
        .I1(\written_reg[7]_i_2_n_14 ),
        .O(\written[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \written[2]_i_1 
       (.I0(\written[15]_i_2_n_0 ),
        .I1(\written_reg[7]_i_2_n_13 ),
        .O(\written[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \written[3]_i_1 
       (.I0(\written[15]_i_2_n_0 ),
        .I1(\written_reg[7]_i_2_n_12 ),
        .O(\written[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \written[4]_i_1 
       (.I0(\written[15]_i_2_n_0 ),
        .I1(\written_reg[7]_i_2_n_11 ),
        .O(\written[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \written[5]_i_1 
       (.I0(\written_reg[7]_i_2_n_10 ),
        .I1(\written[15]_i_2_n_0 ),
        .O(\written[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \written[6]_i_1 
       (.I0(\written_reg[7]_i_2_n_9 ),
        .I1(\written[15]_i_2_n_0 ),
        .O(\written[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \written[7]_i_1 
       (.I0(\written_reg[7]_i_2_n_8 ),
        .I1(\written[15]_i_2_n_0 ),
        .O(\written[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \written[7]_i_3 
       (.I0(written[0]),
        .I1(sl_wr_n_reg),
        .O(\written[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \written[8]_i_1 
       (.I0(\written_reg[15]_i_3_n_15 ),
        .I1(\written[15]_i_2_n_0 ),
        .O(\written[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \written[9]_i_1 
       (.I0(\written_reg[15]_i_3_n_14 ),
        .I1(\written[15]_i_2_n_0 ),
        .O(\written[9]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[0] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[0]_i_1_n_0 ),
        .Q(written[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[10] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[10]_i_1_n_0 ),
        .Q(written[10]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[11] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[11]_i_1_n_0 ),
        .Q(written[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[12] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[12]_i_1_n_0 ),
        .Q(written[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[13] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[13]_i_1_n_0 ),
        .Q(written[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[14] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[14]_i_1_n_0 ),
        .Q(written[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[15] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[15]_i_1_n_0 ),
        .Q(written[15]));
  CARRY8 \written_reg[15]_i_3 
       (.CI(\written_reg[7]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_written_reg[15]_i_3_CO_UNCONNECTED [7],\written_reg[15]_i_3_n_1 ,\written_reg[15]_i_3_n_2 ,\written_reg[15]_i_3_n_3 ,\written_reg[15]_i_3_n_4 ,\written_reg[15]_i_3_n_5 ,\written_reg[15]_i_3_n_6 ,\written_reg[15]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\written_reg[15]_i_3_n_8 ,\written_reg[15]_i_3_n_9 ,\written_reg[15]_i_3_n_10 ,\written_reg[15]_i_3_n_11 ,\written_reg[15]_i_3_n_12 ,\written_reg[15]_i_3_n_13 ,\written_reg[15]_i_3_n_14 ,\written_reg[15]_i_3_n_15 }),
        .S(written[15:8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[1] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[1]_i_1_n_0 ),
        .Q(written[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[2] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[2]_i_1_n_0 ),
        .Q(written[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[3] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[3]_i_1_n_0 ),
        .Q(written[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[4] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[4]_i_1_n_0 ),
        .Q(written[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[5] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[5]_i_1_n_0 ),
        .Q(written[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[6] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[6]_i_1_n_0 ),
        .Q(written[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[7] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[7]_i_1_n_0 ),
        .Q(written[7]));
  CARRY8 \written_reg[7]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\written_reg[7]_i_2_n_0 ,\written_reg[7]_i_2_n_1 ,\written_reg[7]_i_2_n_2 ,\written_reg[7]_i_2_n_3 ,\written_reg[7]_i_2_n_4 ,\written_reg[7]_i_2_n_5 ,\written_reg[7]_i_2_n_6 ,\written_reg[7]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,written[0]}),
        .O({\written_reg[7]_i_2_n_8 ,\written_reg[7]_i_2_n_9 ,\written_reg[7]_i_2_n_10 ,\written_reg[7]_i_2_n_11 ,\written_reg[7]_i_2_n_12 ,\written_reg[7]_i_2_n_13 ,\written_reg[7]_i_2_n_14 ,\written_reg[7]_i_2_n_15 }),
        .S({written[7:1],\written[7]_i_3_n_0 }));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[8] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[8]_i_1_n_0 ),
        .Q(written[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \written_reg[9] 
       (.C(f2u_rd_clk),
        .CE(1'b1),
        .CLR(u_cu2f_i_1_n_0),
        .D(\written[9]_i_1_n_0 ),
        .Q(written[9]));
endmodule

(* CHECK_LICENSE_TYPE = "gpif2mst_async_32x512,fifo_generator_v13_2_3,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "fifo_generator_v13_2_3,Vivado 2018.3" *) 
module gpif2mst_async_32x512
   (m_aclk,
    s_aclk,
    s_aresetn,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_prog_full,
    axis_prog_empty);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 master_aclk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME master_aclk, ASSOCIATED_BUSIF M_AXIS:M_AXI, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input m_aclk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 slave_aclk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME slave_aclk, ASSOCIATED_BUSIF S_AXIS:S_AXI, ASSOCIATED_RESET s_aresetn, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input s_aclk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 slave_aresetn RST" *) (* x_interface_parameter = "XIL_INTERFACENAME slave_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_aresetn;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 S_AXIS TVALID" *) (* x_interface_parameter = "XIL_INTERFACENAME S_AXIS, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 100000000, PHASE 0.000, LAYERED_METADATA undef, INSERT_VIP 0" *) input s_axis_tvalid;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 S_AXIS TREADY" *) output s_axis_tready;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 S_AXIS TDATA" *) input [31:0]s_axis_tdata;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 M_AXIS TVALID" *) (* x_interface_parameter = "XIL_INTERFACENAME M_AXIS, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 100000000, PHASE 0.000, LAYERED_METADATA undef, INSERT_VIP 0" *) output m_axis_tvalid;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 M_AXIS TREADY" *) input m_axis_tready;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 M_AXIS TDATA" *) output [31:0]m_axis_tdata;
  output [9:0]axis_wr_data_count;
  output [9:0]axis_rd_data_count;
  output axis_prog_full;
  output axis_prog_empty;

  wire axis_prog_empty;
  wire axis_prog_full;
  wire [9:0]axis_rd_data_count;
  wire [9:0]axis_wr_data_count;
  wire m_aclk;
  wire [31:0]m_axis_tdata;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axis_tdata;
  wire s_axis_tready;
  wire s_axis_tvalid;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_empty_UNCONNECTED;
  wire NLW_U0_full_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [9:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [9:0]NLW_U0_data_count_UNCONNECTED;
  wire [17:0]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [9:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [9:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "32" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "4" *) 
  (* C_AXIS_TSTRB_WIDTH = "4" *) 
  (* C_AXIS_TUSER_WIDTH = "1" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "10" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "18" *) 
  (* C_DIN_WIDTH_AXIS = "32" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "32" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "18" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "0" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "1" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "0" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "11" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "12" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "11" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "12" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "11" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "12" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "1" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "4kx4" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "13" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1021" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "13" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1021" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "13" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "1" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "508" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "15" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "15" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "15" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "1022" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "1" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "10" *) 
  (* C_RD_DEPTH = "1024" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "10" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "10" *) 
  (* C_WR_DEPTH = "1024" *) 
  (* C_WR_DEPTH_AXIS = "512" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "10" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "9" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  gpif2mst_async_32x512_fifo_generator_v13_2_3 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[9:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(axis_prog_empty),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(axis_prog_full),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(axis_rd_data_count),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(axis_wr_data_count),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[9:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dout(NLW_U0_dout_UNCONNECTED[17:0]),
        .empty(NLW_U0_empty_UNCONNECTED),
        .full(NLW_U0_full_UNCONNECTED),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(m_aclk),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(m_axis_tdata),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[3:0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(m_axis_tready),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[3:0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[0]),
        .m_axis_tvalid(m_axis_tvalid),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[9:0]),
        .rd_en(1'b0),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(s_aclk),
        .s_aclk_en(1'b0),
        .s_aresetn(s_aresetn),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tlast(1'b0),
        .s_axis_tready(s_axis_tready),
        .s_axis_tstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tuser(1'b0),
        .s_axis_tvalid(s_axis_tvalid),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[9:0]),
        .wr_en(1'b0),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module gpif2mst_async_32x512_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire [7:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  wire [8:0]dest_out_bin;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(binval[3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(binval[3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(binval[3]),
        .O(binval[2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [8]),
        .I4(\dest_graysync_ff[1] [6]),
        .I5(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [7]),
        .I4(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [7]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[6]_i_1 
       (.I0(\dest_graysync_ff[1] [6]),
        .I1(\dest_graysync_ff[1] [8]),
        .I2(\dest_graysync_ff[1] [7]),
        .O(binval[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[7]_i_1 
       (.I0(\dest_graysync_ff[1] [7]),
        .I1(\dest_graysync_ff[1] [8]),
        .O(binval[7]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[7]),
        .Q(dest_out_bin[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(dest_out_bin[8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module gpif2mst_async_32x512_xpm_cdc_gray__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire [7:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  wire [8:0]dest_out_bin;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(binval[3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(binval[3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(binval[3]),
        .O(binval[2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [8]),
        .I4(\dest_graysync_ff[1] [6]),
        .I5(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [7]),
        .I4(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [7]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[6]_i_1 
       (.I0(\dest_graysync_ff[1] [6]),
        .I1(\dest_graysync_ff[1] [8]),
        .I2(\dest_graysync_ff[1] [7]),
        .O(binval[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[7]_i_1 
       (.I0(\dest_graysync_ff[1] [7]),
        .I1(\dest_graysync_ff[1] [8]),
        .O(binval[7]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[7]),
        .Q(dest_out_bin[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(dest_out_bin[8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module gpif2mst_async_32x512_xpm_cdc_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module gpif2mst_async_32x512_xpm_cdc_single__2
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module gpif2mst_async_32x512_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module gpif2mst_async_32x512_xpm_cdc_sync_rst__2
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "gpif2mst_async_34x512,fifo_generator_v13_2_3,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "fifo_generator_v13_2_3,Vivado 2018.3" *) 
module gpif2mst_async_34x512
   (m_aclk,
    s_aclk,
    s_aresetn,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tuser,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_prog_full,
    axis_prog_empty);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 master_aclk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME master_aclk, ASSOCIATED_BUSIF M_AXIS:M_AXI, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input m_aclk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 slave_aclk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME slave_aclk, ASSOCIATED_BUSIF S_AXIS:S_AXI, ASSOCIATED_RESET s_aresetn, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input s_aclk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 slave_aresetn RST" *) (* x_interface_parameter = "XIL_INTERFACENAME slave_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_aresetn;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 S_AXIS TVALID" *) (* x_interface_parameter = "XIL_INTERFACENAME S_AXIS, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 2, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 100000000, PHASE 0.000, LAYERED_METADATA undef, INSERT_VIP 0" *) input s_axis_tvalid;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 S_AXIS TREADY" *) output s_axis_tready;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 S_AXIS TDATA" *) input [31:0]s_axis_tdata;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 S_AXIS TUSER" *) input [1:0]s_axis_tuser;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 M_AXIS TVALID" *) (* x_interface_parameter = "XIL_INTERFACENAME M_AXIS, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 2, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 100000000, PHASE 0.000, LAYERED_METADATA undef, INSERT_VIP 0" *) output m_axis_tvalid;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 M_AXIS TREADY" *) input m_axis_tready;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 M_AXIS TDATA" *) output [31:0]m_axis_tdata;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 M_AXIS TUSER" *) output [1:0]m_axis_tuser;
  output [9:0]axis_wr_data_count;
  output [9:0]axis_rd_data_count;
  output axis_prog_full;
  output axis_prog_empty;

  wire axis_prog_empty;
  wire axis_prog_full;
  wire [9:0]axis_rd_data_count;
  wire [9:0]axis_wr_data_count;
  wire m_aclk;
  wire [31:0]m_axis_tdata;
  wire m_axis_tready;
  wire [1:0]m_axis_tuser;
  wire m_axis_tvalid;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axis_tdata;
  wire s_axis_tready;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_empty_UNCONNECTED;
  wire NLW_U0_full_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [9:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [9:0]NLW_U0_data_count_UNCONNECTED;
  wire [17:0]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [9:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [9:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "32" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "4" *) 
  (* C_AXIS_TSTRB_WIDTH = "4" *) 
  (* C_AXIS_TUSER_WIDTH = "2" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "10" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "18" *) 
  (* C_DIN_WIDTH_AXIS = "34" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "32" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "18" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "1" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "0" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "11" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "12" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "11" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "12" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "11" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "12" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "1" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "4kx4" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "13" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1021" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "13" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1021" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "13" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "1" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "508" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "15" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "15" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "15" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "1022" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "1" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "10" *) 
  (* C_RD_DEPTH = "1024" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "10" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "10" *) 
  (* C_WR_DEPTH = "1024" *) 
  (* C_WR_DEPTH_AXIS = "512" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "10" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "9" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  gpif2mst_async_34x512_fifo_generator_v13_2_3 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[9:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(axis_prog_empty),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(axis_prog_full),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(axis_rd_data_count),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(axis_wr_data_count),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[9:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dout(NLW_U0_dout_UNCONNECTED[17:0]),
        .empty(NLW_U0_empty_UNCONNECTED),
        .full(NLW_U0_full_UNCONNECTED),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(m_aclk),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(m_axis_tdata),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[3:0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(m_axis_tready),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[3:0]),
        .m_axis_tuser(m_axis_tuser),
        .m_axis_tvalid(m_axis_tvalid),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[9:0]),
        .rd_en(1'b0),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(s_aclk),
        .s_aclk_en(1'b0),
        .s_aresetn(s_aresetn),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tlast(1'b0),
        .s_axis_tready(s_axis_tready),
        .s_axis_tstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[9:0]),
        .wr_en(1'b0),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module gpif2mst_async_34x512_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire [7:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  wire [8:0]dest_out_bin;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(binval[3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(binval[3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(binval[3]),
        .O(binval[2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [8]),
        .I4(\dest_graysync_ff[1] [6]),
        .I5(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [7]),
        .I4(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [7]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[6]_i_1 
       (.I0(\dest_graysync_ff[1] [6]),
        .I1(\dest_graysync_ff[1] [8]),
        .I2(\dest_graysync_ff[1] [7]),
        .O(binval[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[7]_i_1 
       (.I0(\dest_graysync_ff[1] [7]),
        .I1(\dest_graysync_ff[1] [8]),
        .O(binval[7]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[7]),
        .Q(dest_out_bin[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(dest_out_bin[8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module gpif2mst_async_34x512_xpm_cdc_gray__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire [7:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  wire [8:0]dest_out_bin;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(binval[3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(binval[3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(binval[3]),
        .O(binval[2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [8]),
        .I4(\dest_graysync_ff[1] [6]),
        .I5(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [7]),
        .I4(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [7]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[6]_i_1 
       (.I0(\dest_graysync_ff[1] [6]),
        .I1(\dest_graysync_ff[1] [8]),
        .I2(\dest_graysync_ff[1] [7]),
        .O(binval[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[7]_i_1 
       (.I0(\dest_graysync_ff[1] [7]),
        .I1(\dest_graysync_ff[1] [8]),
        .O(binval[7]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[7]),
        .Q(dest_out_bin[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(dest_out_bin[8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module gpif2mst_async_34x512_xpm_cdc_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module gpif2mst_async_34x512_xpm_cdc_single__2
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module gpif2mst_async_34x512_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module gpif2mst_async_34x512_xpm_cdc_sync_rst__2
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEPTH_FIFO = "512" *) (* WIDTH_FIFO = "32" *) 
module gpif2mst_gpif2mst_async
   (rst,
    wr_clk,
    wr_ready,
    wr_valid,
    wr_data,
    rd_clk,
    rd_ready,
    rd_valid,
    rd_data,
    emptyN,
    fullN,
    empty,
    full,
    items,
    rooms);
  input rst;
  input wr_clk;
  output wr_ready;
  input wr_valid;
  input [31:0]wr_data;
  input rd_clk;
  input rd_ready;
  output rd_valid;
  output [31:0]rd_data;
  output emptyN;
  output fullN;
  output empty;
  output full;
  output [15:0]items;
  output [15:0]rooms;

  wire \<const0> ;
  wire \WIDTH_32.BLK_512.u_fifo0 ;
  wire empty;
  wire emptyN;
  wire full;
  wire fullN;
  wire [9:0]\^items ;
  wire rd_clk;
  wire [31:0]rd_data;
  wire rd_ready;
  wire rd_valid;
  wire [10:0]\^rooms ;
  wire \rooms[10]_INST_0_i_1_n_0 ;
  wire rst;
  wire [9:1]witems;
  wire wr_clk;
  wire [31:0]wr_data;
  wire wr_ready;
  wire wr_valid;

  assign items[15] = \<const0> ;
  assign items[14] = \<const0> ;
  assign items[13] = \<const0> ;
  assign items[12] = \<const0> ;
  assign items[11] = \<const0> ;
  assign items[10] = \<const0> ;
  assign items[9:0] = \^items [9:0];
  assign rooms[15] = \^rooms [10];
  assign rooms[14] = \^rooms [10];
  assign rooms[13] = \^rooms [10];
  assign rooms[12] = \^rooms [10];
  assign rooms[11] = \^rooms [10];
  assign rooms[10:0] = \^rooms [10:0];
  GND GND
       (.G(\<const0> ));
  (* black_box_pad_pin = "m_aclk,s_aclk,s_aresetn,s_axis_tvalid,s_axis_tready,s_axis_tdata[31:0],m_axis_tvalid,m_axis_tready,m_axis_tdata[31:0],axis_wr_data_count[9:0],axis_rd_data_count[9:0],axis_prog_full,axis_prog_empty" *) 
  (* syn_black_box = "1" *) 
  (* x_core_info = "fifo_generator_v13_2_3,Vivado 2018.3" *) 
  gpif2mst_async_32x512 \WIDTH_32.BLK_512.u_fifo 
       (.axis_prog_empty(emptyN),
        .axis_prog_full(fullN),
        .axis_rd_data_count(\^items ),
        .axis_wr_data_count({witems,\^rooms [0]}),
        .m_aclk(rd_clk),
        .m_axis_tdata(rd_data),
        .m_axis_tready(rd_ready),
        .m_axis_tvalid(rd_valid),
        .s_aclk(wr_clk),
        .s_aresetn(\WIDTH_32.BLK_512.u_fifo0 ),
        .s_axis_tdata(wr_data),
        .s_axis_tready(wr_ready),
        .s_axis_tvalid(wr_valid));
  LUT1 #(
    .INIT(2'h1)) 
    \WIDTH_32.BLK_512.u_fifo_i_1 
       (.I0(rst),
        .O(\WIDTH_32.BLK_512.u_fifo0 ));
  LUT1 #(
    .INIT(2'h1)) 
    empty_INST_0
       (.I0(rd_valid),
        .O(empty));
  LUT1 #(
    .INIT(2'h1)) 
    full_INST_0
       (.I0(wr_ready),
        .O(full));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hFFEF0000)) 
    \rooms[10]_INST_0 
       (.I0(witems[8]),
        .I1(witems[6]),
        .I2(\rooms[10]_INST_0_i_1_n_0 ),
        .I3(witems[7]),
        .I4(witems[9]),
        .O(\^rooms [10]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \rooms[10]_INST_0_i_1 
       (.I0(witems[4]),
        .I1(witems[2]),
        .I2(witems[1]),
        .I3(\^rooms [0]),
        .I4(witems[3]),
        .I5(witems[5]),
        .O(\rooms[10]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rooms[1]_INST_0 
       (.I0(\^rooms [0]),
        .I1(witems[1]),
        .O(\^rooms [1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \rooms[2]_INST_0 
       (.I0(\^rooms [0]),
        .I1(witems[1]),
        .I2(witems[2]),
        .O(\^rooms [2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h5556)) 
    \rooms[3]_INST_0 
       (.I0(witems[3]),
        .I1(\^rooms [0]),
        .I2(witems[1]),
        .I3(witems[2]),
        .O(\^rooms [3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h0001FFFE)) 
    \rooms[4]_INST_0 
       (.I0(witems[3]),
        .I1(\^rooms [0]),
        .I2(witems[1]),
        .I3(witems[2]),
        .I4(witems[4]),
        .O(\^rooms [4]));
  LUT6 #(
    .INIT(64'h00000001FFFFFFFE)) 
    \rooms[5]_INST_0 
       (.I0(witems[4]),
        .I1(witems[2]),
        .I2(witems[1]),
        .I3(\^rooms [0]),
        .I4(witems[3]),
        .I5(witems[5]),
        .O(\^rooms [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \rooms[6]_INST_0 
       (.I0(\rooms[10]_INST_0_i_1_n_0 ),
        .I1(witems[6]),
        .O(\^rooms [6]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h59)) 
    \rooms[7]_INST_0 
       (.I0(witems[7]),
        .I1(\rooms[10]_INST_0_i_1_n_0 ),
        .I2(witems[6]),
        .O(\^rooms [7]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h04FB)) 
    \rooms[8]_INST_0 
       (.I0(witems[7]),
        .I1(\rooms[10]_INST_0_i_1_n_0 ),
        .I2(witems[6]),
        .I3(witems[8]),
        .O(\^rooms [8]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hFFEF0010)) 
    \rooms[9]_INST_0 
       (.I0(witems[8]),
        .I1(witems[6]),
        .I2(\rooms[10]_INST_0_i_1_n_0 ),
        .I3(witems[7]),
        .I4(witems[9]),
        .O(\^rooms [9]));
endmodule

(* DEPTH_FIFO = "512" *) (* ORIG_REF_NAME = "gpif2mst_gpif2mst_async" *) (* WIDTH_FIFO = "34" *) 
module gpif2mst_gpif2mst_async__parameterized0
   (rst,
    wr_clk,
    wr_ready,
    wr_valid,
    wr_data,
    rd_clk,
    rd_ready,
    rd_valid,
    rd_data,
    emptyN,
    fullN,
    empty,
    full,
    items,
    rooms);
  input rst;
  input wr_clk;
  output wr_ready;
  input wr_valid;
  input [33:0]wr_data;
  input rd_clk;
  input rd_ready;
  output rd_valid;
  output [33:0]rd_data;
  output emptyN;
  output fullN;
  output empty;
  output full;
  output [15:0]items;
  output [15:0]rooms;

  wire \<const0> ;
  wire \WIDTH_34.BLK_512.u_fifo0 ;
  wire empty;
  wire emptyN;
  wire full;
  wire fullN;
  wire [9:0]\^items ;
  wire rd_clk;
  wire [33:0]rd_data;
  wire rd_ready;
  wire rd_valid;
  wire [10:0]\^rooms ;
  wire \rooms[10]_INST_0_i_1_n_0 ;
  wire rst;
  wire [9:1]witems;
  wire wr_clk;
  wire [33:0]wr_data;
  wire wr_ready;
  wire wr_valid;

  assign items[15] = \<const0> ;
  assign items[14] = \<const0> ;
  assign items[13] = \<const0> ;
  assign items[12] = \<const0> ;
  assign items[11] = \<const0> ;
  assign items[10] = \<const0> ;
  assign items[9:0] = \^items [9:0];
  assign rooms[15] = \^rooms [10];
  assign rooms[14] = \^rooms [10];
  assign rooms[13] = \^rooms [10];
  assign rooms[12] = \^rooms [10];
  assign rooms[11] = \^rooms [10];
  assign rooms[10:0] = \^rooms [10:0];
  GND GND
       (.G(\<const0> ));
  (* black_box_pad_pin = "m_aclk,s_aclk,s_aresetn,s_axis_tvalid,s_axis_tready,s_axis_tdata[31:0],s_axis_tuser[1:0],m_axis_tvalid,m_axis_tready,m_axis_tdata[31:0],m_axis_tuser[1:0],axis_wr_data_count[9:0],axis_rd_data_count[9:0],axis_prog_full,axis_prog_empty" *) 
  (* syn_black_box = "1" *) 
  (* x_core_info = "fifo_generator_v13_2_3,Vivado 2018.3" *) 
  gpif2mst_async_34x512 \WIDTH_34.BLK_512.u_fifo 
       (.axis_prog_empty(emptyN),
        .axis_prog_full(fullN),
        .axis_rd_data_count(\^items ),
        .axis_wr_data_count({witems,\^rooms [0]}),
        .m_aclk(rd_clk),
        .m_axis_tdata(rd_data[31:0]),
        .m_axis_tready(rd_ready),
        .m_axis_tuser(rd_data[33:32]),
        .m_axis_tvalid(rd_valid),
        .s_aclk(wr_clk),
        .s_aresetn(\WIDTH_34.BLK_512.u_fifo0 ),
        .s_axis_tdata(wr_data[31:0]),
        .s_axis_tready(wr_ready),
        .s_axis_tuser(wr_data[33:32]),
        .s_axis_tvalid(wr_valid));
  LUT1 #(
    .INIT(2'h1)) 
    \WIDTH_34.BLK_512.u_fifo_i_1 
       (.I0(rst),
        .O(\WIDTH_34.BLK_512.u_fifo0 ));
  LUT1 #(
    .INIT(2'h1)) 
    empty_INST_0
       (.I0(rd_valid),
        .O(empty));
  LUT1 #(
    .INIT(2'h1)) 
    full_INST_0
       (.I0(wr_ready),
        .O(full));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'hFFEF0000)) 
    \rooms[10]_INST_0 
       (.I0(witems[8]),
        .I1(witems[6]),
        .I2(\rooms[10]_INST_0_i_1_n_0 ),
        .I3(witems[7]),
        .I4(witems[9]),
        .O(\^rooms [10]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \rooms[10]_INST_0_i_1 
       (.I0(witems[4]),
        .I1(witems[2]),
        .I2(witems[1]),
        .I3(\^rooms [0]),
        .I4(witems[3]),
        .I5(witems[5]),
        .O(\rooms[10]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rooms[1]_INST_0 
       (.I0(\^rooms [0]),
        .I1(witems[1]),
        .O(\^rooms [1]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \rooms[2]_INST_0 
       (.I0(\^rooms [0]),
        .I1(witems[1]),
        .I2(witems[2]),
        .O(\^rooms [2]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h5556)) 
    \rooms[3]_INST_0 
       (.I0(witems[3]),
        .I1(\^rooms [0]),
        .I2(witems[1]),
        .I3(witems[2]),
        .O(\^rooms [3]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h0001FFFE)) 
    \rooms[4]_INST_0 
       (.I0(witems[3]),
        .I1(\^rooms [0]),
        .I2(witems[1]),
        .I3(witems[2]),
        .I4(witems[4]),
        .O(\^rooms [4]));
  LUT6 #(
    .INIT(64'h00000001FFFFFFFE)) 
    \rooms[5]_INST_0 
       (.I0(witems[4]),
        .I1(witems[2]),
        .I2(witems[1]),
        .I3(\^rooms [0]),
        .I4(witems[3]),
        .I5(witems[5]),
        .O(\^rooms [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \rooms[6]_INST_0 
       (.I0(\rooms[10]_INST_0_i_1_n_0 ),
        .I1(witems[6]),
        .O(\^rooms [6]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h59)) 
    \rooms[7]_INST_0 
       (.I0(witems[7]),
        .I1(\rooms[10]_INST_0_i_1_n_0 ),
        .I2(witems[6]),
        .O(\^rooms [7]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h04FB)) 
    \rooms[8]_INST_0 
       (.I0(witems[7]),
        .I1(\rooms[10]_INST_0_i_1_n_0 ),
        .I2(witems[6]),
        .I3(witems[8]),
        .O(\^rooms [8]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'hFFEF0010)) 
    \rooms[9]_INST_0 
       (.I0(witems[8]),
        .I1(witems[6]),
        .I2(\rooms[10]_INST_0_i_1_n_0 ),
        .I3(witems[7]),
        .I4(witems[9]),
        .O(\^rooms [9]));
endmodule

(* DEPTH_FIFO = "512" *) (* ORIG_REF_NAME = "gpif2mst_gpif2mst_async" *) (* WIDTH_FIFO = "32" *) 
module gpif2mst_gpif2mst_async__xdcDup__1
   (rst,
    wr_clk,
    wr_ready,
    wr_valid,
    wr_data,
    rd_clk,
    rd_ready,
    rd_valid,
    rd_data,
    emptyN,
    fullN,
    empty,
    full,
    items,
    rooms);
  input rst;
  input wr_clk;
  output wr_ready;
  input wr_valid;
  input [31:0]wr_data;
  input rd_clk;
  input rd_ready;
  output rd_valid;
  output [31:0]rd_data;
  output emptyN;
  output fullN;
  output empty;
  output full;
  output [15:0]items;
  output [15:0]rooms;

  wire \<const0> ;
  wire \WIDTH_32.BLK_512.u_fifo0 ;
  wire empty;
  wire emptyN;
  wire full;
  wire fullN;
  wire [9:0]\^items ;
  wire rd_clk;
  wire [31:0]rd_data;
  wire rd_ready;
  wire rd_valid;
  wire [10:0]\^rooms ;
  wire \rooms[10]_INST_0_i_1_n_0 ;
  wire rst;
  wire [9:1]witems;
  wire wr_clk;
  wire [31:0]wr_data;
  wire wr_ready;
  wire wr_valid;

  assign items[15] = \<const0> ;
  assign items[14] = \<const0> ;
  assign items[13] = \<const0> ;
  assign items[12] = \<const0> ;
  assign items[11] = \<const0> ;
  assign items[10] = \<const0> ;
  assign items[9:0] = \^items [9:0];
  assign rooms[15] = \^rooms [10];
  assign rooms[14] = \^rooms [10];
  assign rooms[13] = \^rooms [10];
  assign rooms[12] = \^rooms [10];
  assign rooms[11] = \^rooms [10];
  assign rooms[10:0] = \^rooms [10:0];
  GND GND
       (.G(\<const0> ));
  (* black_box_pad_pin = "m_aclk,s_aclk,s_aresetn,s_axis_tvalid,s_axis_tready,s_axis_tdata[31:0],m_axis_tvalid,m_axis_tready,m_axis_tdata[31:0],axis_wr_data_count[9:0],axis_rd_data_count[9:0],axis_prog_full,axis_prog_empty" *) 
  (* syn_black_box = "1" *) 
  (* x_core_info = "fifo_generator_v13_2_3,Vivado 2018.3" *) 
  gpif2mst_async_32x512 \WIDTH_32.BLK_512.u_fifo 
       (.axis_prog_empty(emptyN),
        .axis_prog_full(fullN),
        .axis_rd_data_count(\^items ),
        .axis_wr_data_count({witems,\^rooms [0]}),
        .m_aclk(rd_clk),
        .m_axis_tdata(rd_data),
        .m_axis_tready(rd_ready),
        .m_axis_tvalid(rd_valid),
        .s_aclk(wr_clk),
        .s_aresetn(\WIDTH_32.BLK_512.u_fifo0 ),
        .s_axis_tdata(wr_data),
        .s_axis_tready(wr_ready),
        .s_axis_tvalid(wr_valid));
  LUT1 #(
    .INIT(2'h1)) 
    \WIDTH_32.BLK_512.u_fifo_i_1 
       (.I0(rst),
        .O(\WIDTH_32.BLK_512.u_fifo0 ));
  LUT1 #(
    .INIT(2'h1)) 
    empty_INST_0
       (.I0(rd_valid),
        .O(empty));
  LUT1 #(
    .INIT(2'h1)) 
    full_INST_0
       (.I0(wr_ready),
        .O(full));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hFFEF0000)) 
    \rooms[10]_INST_0 
       (.I0(witems[8]),
        .I1(witems[6]),
        .I2(\rooms[10]_INST_0_i_1_n_0 ),
        .I3(witems[7]),
        .I4(witems[9]),
        .O(\^rooms [10]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \rooms[10]_INST_0_i_1 
       (.I0(witems[4]),
        .I1(witems[2]),
        .I2(witems[1]),
        .I3(\^rooms [0]),
        .I4(witems[3]),
        .I5(witems[5]),
        .O(\rooms[10]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rooms[1]_INST_0 
       (.I0(\^rooms [0]),
        .I1(witems[1]),
        .O(\^rooms [1]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \rooms[2]_INST_0 
       (.I0(\^rooms [0]),
        .I1(witems[1]),
        .I2(witems[2]),
        .O(\^rooms [2]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h5556)) 
    \rooms[3]_INST_0 
       (.I0(witems[3]),
        .I1(\^rooms [0]),
        .I2(witems[1]),
        .I3(witems[2]),
        .O(\^rooms [3]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h0001FFFE)) 
    \rooms[4]_INST_0 
       (.I0(witems[3]),
        .I1(\^rooms [0]),
        .I2(witems[1]),
        .I3(witems[2]),
        .I4(witems[4]),
        .O(\^rooms [4]));
  LUT6 #(
    .INIT(64'h00000001FFFFFFFE)) 
    \rooms[5]_INST_0 
       (.I0(witems[4]),
        .I1(witems[2]),
        .I2(witems[1]),
        .I3(\^rooms [0]),
        .I4(witems[3]),
        .I5(witems[5]),
        .O(\^rooms [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \rooms[6]_INST_0 
       (.I0(\rooms[10]_INST_0_i_1_n_0 ),
        .I1(witems[6]),
        .O(\^rooms [6]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h59)) 
    \rooms[7]_INST_0 
       (.I0(witems[7]),
        .I1(\rooms[10]_INST_0_i_1_n_0 ),
        .I2(witems[6]),
        .O(\^rooms [7]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h04FB)) 
    \rooms[8]_INST_0 
       (.I0(witems[7]),
        .I1(\rooms[10]_INST_0_i_1_n_0 ),
        .I2(witems[6]),
        .I3(witems[8]),
        .O(\^rooms [8]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hFFEF0010)) 
    \rooms[9]_INST_0 
       (.I0(witems[8]),
        .I1(witems[6]),
        .I2(\rooms[10]_INST_0_i_1_n_0 ),
        .I3(witems[7]),
        .I4(witems[9]),
        .O(\^rooms [9]));
endmodule

(* AXI_WIDTH_AD = "32" *) (* AXI_WIDTH_CID = "4" *) (* AXI_WIDTH_DA = "32" *) 
(* AXI_WIDTH_DS = "4" *) (* AXI_WIDTH_DSB = "2" *) (* AXI_WIDTH_ID = "4" *) 
(* F2U_FIFO_FAW = "4" *) (* F2U_FIFO_FDW = "32" *) (* F2U_FIFO_FULN = "4" *) 
(* SC_BURST = "4" *) (* SC_CMD = "1" *) (* SC_IDLE = "0" *) 
(* SC_IE_WAIT = "5" *) (* SC_RD_WAIT = "3" *) (* SC_WR_WAIT = "2" *) 
(* SR_ARB = "1" *) (* SR_END = "4" *) (* SR_IDLE = "0" *) 
(* SR_INT = "3" *) (* SR_RD = "2" *) (* SW_ARB = "1" *) 
(* SW_END = "5" *) (* SW_IDLE = "0" *) (* SW_WR0 = "2" *) 
(* SW_WR1 = "3" *) (* SW_WR2 = "4" *) (* TRANSACTOR_ID = "4'b0000" *) 
(* U2F_FIFO_FAW = "4" *) (* U2F_FIFO_FDW = "41" *) (* U2F_FIFO_FULN = "4" *) 
module trx_axi
   (ARESETn,
    ACLK,
    MID,
    AWID,
    AWADDR,
    AWLEN,
    AWLOCK,
    AWSIZE,
    AWBURST,
    AWVALID,
    AWREADY,
    AWQOS,
    AWREGION,
    WID,
    WDATA,
    WSTRB,
    WLAST,
    WVALID,
    WREADY,
    BID,
    BRESP,
    BVALID,
    BREADY,
    ARID,
    ARADDR,
    ARLEN,
    ARLOCK,
    ARSIZE,
    ARBURST,
    ARVALID,
    ARREADY,
    ARQOS,
    ARREGION,
    RID,
    RDATA,
    RRESP,
    RLAST,
    RVALID,
    RREADY,
    IRQ,
    FIQ,
    GPOUT,
    GPIN,
    transactor_sel,
    cmd_ready,
    cmd_valid,
    cmd_data,
    cmd_items,
    u2f_ready,
    u2f_valid,
    u2f_data,
    u2f_items,
    f2u_ready,
    f2u_valid,
    f2u_data,
    f2u_rooms);
  input ARESETn;
  input ACLK;
  (* mark_debug = "true" *) input [3:0]MID;
  (* mark_debug = "true" *) output [3:0]AWID;
  (* mark_debug = "true" *) output [31:0]AWADDR;
  (* mark_debug = "true" *) output [7:0]AWLEN;
  (* mark_debug = "true" *) output AWLOCK;
  (* mark_debug = "true" *) output [2:0]AWSIZE;
  (* mark_debug = "true" *) output [1:0]AWBURST;
  (* mark_debug = "true" *) output AWVALID;
  (* mark_debug = "true" *) input AWREADY;
  output [3:0]AWQOS;
  output [3:0]AWREGION;
  (* mark_debug = "true" *) output [3:0]WID;
  (* mark_debug = "true" *) output [31:0]WDATA;
  (* mark_debug = "true" *) output [3:0]WSTRB;
  (* mark_debug = "true" *) output WLAST;
  (* mark_debug = "true" *) output WVALID;
  (* mark_debug = "true" *) input WREADY;
  (* mark_debug = "true" *) input [3:0]BID;
  (* mark_debug = "true" *) input [1:0]BRESP;
  (* mark_debug = "true" *) input BVALID;
  (* mark_debug = "true" *) output BREADY;
  (* mark_debug = "true" *) output [3:0]ARID;
  (* mark_debug = "true" *) output [31:0]ARADDR;
  (* mark_debug = "true" *) output [7:0]ARLEN;
  (* mark_debug = "true" *) output ARLOCK;
  (* mark_debug = "true" *) output [2:0]ARSIZE;
  (* mark_debug = "true" *) output [1:0]ARBURST;
  (* mark_debug = "true" *) output ARVALID;
  (* mark_debug = "true" *) input ARREADY;
  output [3:0]ARQOS;
  output [3:0]ARREGION;
  (* mark_debug = "true" *) input [3:0]RID;
  (* mark_debug = "true" *) input [31:0]RDATA;
  (* mark_debug = "true" *) input [1:0]RRESP;
  (* mark_debug = "true" *) input RLAST;
  (* mark_debug = "true" *) input RVALID;
  (* mark_debug = "true" *) output RREADY;
  (* mark_debug = "true" *) input IRQ;
  (* mark_debug = "true" *) input FIQ;
  (* mark_debug = "true" *) output [15:0]GPOUT;
  (* mark_debug = "true" *) input [15:0]GPIN;
  (* mark_debug = "true" *) input [3:0]transactor_sel;
  (* mark_debug = "true" *) output cmd_ready;
  (* mark_debug = "true" *) input cmd_valid;
  (* mark_debug = "true" *) input [31:0]cmd_data;
  (* mark_debug = "true" *) input [15:0]cmd_items;
  (* mark_debug = "true" *) output u2f_ready;
  (* mark_debug = "true" *) input u2f_valid;
  (* mark_debug = "true" *) input [31:0]u2f_data;
  (* mark_debug = "true" *) input [15:0]u2f_items;
  (* mark_debug = "true" *) input f2u_ready;
  (* mark_debug = "true" *) output f2u_valid;
  (* mark_debug = "true" *) output [33:0]f2u_data;
  (* mark_debug = "true" *) input [15:0]f2u_rooms;

  wire \<const0> ;
  wire ACLK;
  (* MARK_DEBUG *) wire [31:0]ARADDR;
  wire \ARADDR[0]_i_1_n_0 ;
  wire \ARADDR[10]_i_1_n_0 ;
  wire \ARADDR[11]_i_1_n_0 ;
  wire \ARADDR[12]_i_1_n_0 ;
  wire \ARADDR[13]_i_1_n_0 ;
  wire \ARADDR[14]_i_1_n_0 ;
  wire \ARADDR[15]_i_1_n_0 ;
  wire \ARADDR[16]_i_1_n_0 ;
  wire \ARADDR[17]_i_1_n_0 ;
  wire \ARADDR[18]_i_1_n_0 ;
  wire \ARADDR[19]_i_1_n_0 ;
  wire \ARADDR[1]_i_1_n_0 ;
  wire \ARADDR[20]_i_1_n_0 ;
  wire \ARADDR[21]_i_1_n_0 ;
  wire \ARADDR[22]_i_1_n_0 ;
  wire \ARADDR[23]_i_1_n_0 ;
  wire \ARADDR[24]_i_1_n_0 ;
  wire \ARADDR[25]_i_1_n_0 ;
  wire \ARADDR[26]_i_1_n_0 ;
  wire \ARADDR[27]_i_1_n_0 ;
  wire \ARADDR[28]_i_1_n_0 ;
  wire \ARADDR[29]_i_1_n_0 ;
  wire \ARADDR[2]_i_1_n_0 ;
  wire \ARADDR[30]_i_1_n_0 ;
  wire \ARADDR[31]_i_1_n_0 ;
  wire \ARADDR[3]_i_1_n_0 ;
  wire \ARADDR[4]_i_1_n_0 ;
  wire \ARADDR[5]_i_1_n_0 ;
  wire \ARADDR[6]_i_1_n_0 ;
  wire \ARADDR[7]_i_1_n_0 ;
  wire \ARADDR[8]_i_1_n_0 ;
  wire \ARADDR[9]_i_1_n_0 ;
  (* MARK_DEBUG *) wire [1:0]ARBURST;
  wire \ARBURST[0]_i_1_n_0 ;
  wire \ARBURST[1]_i_1_n_0 ;
  wire ARESETn;
  (* MARK_DEBUG *) wire [3:0]ARID;
  wire \ARID[0]_i_1_n_0 ;
  wire \ARID[1]_i_1_n_0 ;
  wire \ARID[2]_i_1_n_0 ;
  wire \ARID[3]_i_1_n_0 ;
  (* MARK_DEBUG *) wire [7:0]ARLEN;
  wire \ARLEN[0]_i_1_n_0 ;
  wire \ARLEN[1]_i_1_n_0 ;
  wire \ARLEN[2]_i_1_n_0 ;
  wire \ARLEN[3]_i_1_n_0 ;
  wire \ARLEN[4]_i_1_n_0 ;
  wire \ARLEN[5]_i_1_n_0 ;
  wire \ARLEN[6]_i_1_n_0 ;
  wire \ARLEN[7]_i_1_n_0 ;
  wire \ARLEN[7]_i_2_n_0 ;
  wire \ARLEN[7]_i_3_n_0 ;
  (* MARK_DEBUG *) wire ARLOCK;
  wire ARLOCK_i_1_n_0;
  (* MARK_DEBUG *) wire ARREADY;
  (* MARK_DEBUG *) wire [2:0]ARSIZE;
  wire \ARSIZE[0]_i_1_n_0 ;
  wire \ARSIZE[1]_i_1_n_0 ;
  wire \ARSIZE[2]_i_1_n_0 ;
  (* MARK_DEBUG *) wire ARVALID;
  wire ARVALID_i_1_n_0;
  (* MARK_DEBUG *) wire [31:0]AWADDR;
  wire \AWADDR[0]_i_1_n_0 ;
  wire \AWADDR[10]_i_1_n_0 ;
  wire \AWADDR[11]_i_1_n_0 ;
  wire \AWADDR[12]_i_1_n_0 ;
  wire \AWADDR[13]_i_1_n_0 ;
  wire \AWADDR[14]_i_1_n_0 ;
  wire \AWADDR[15]_i_1_n_0 ;
  wire \AWADDR[16]_i_1_n_0 ;
  wire \AWADDR[17]_i_1_n_0 ;
  wire \AWADDR[18]_i_1_n_0 ;
  wire \AWADDR[19]_i_1_n_0 ;
  wire \AWADDR[1]_i_1_n_0 ;
  wire \AWADDR[20]_i_1_n_0 ;
  wire \AWADDR[21]_i_1_n_0 ;
  wire \AWADDR[22]_i_1_n_0 ;
  wire \AWADDR[23]_i_1_n_0 ;
  wire \AWADDR[24]_i_1_n_0 ;
  wire \AWADDR[25]_i_1_n_0 ;
  wire \AWADDR[26]_i_1_n_0 ;
  wire \AWADDR[27]_i_1_n_0 ;
  wire \AWADDR[28]_i_1_n_0 ;
  wire \AWADDR[29]_i_1_n_0 ;
  wire \AWADDR[2]_i_1_n_0 ;
  wire \AWADDR[30]_i_1_n_0 ;
  wire \AWADDR[31]_i_1_n_0 ;
  wire \AWADDR[3]_i_1_n_0 ;
  wire \AWADDR[4]_i_1_n_0 ;
  wire \AWADDR[5]_i_1_n_0 ;
  wire \AWADDR[6]_i_1_n_0 ;
  wire \AWADDR[7]_i_1_n_0 ;
  wire \AWADDR[8]_i_1_n_0 ;
  wire \AWADDR[9]_i_1_n_0 ;
  (* MARK_DEBUG *) wire [1:0]AWBURST;
  wire \AWBURST[0]_i_1_n_0 ;
  wire \AWBURST[1]_i_1_n_0 ;
  (* MARK_DEBUG *) wire [3:0]AWID;
  wire \AWID[0]_i_1_n_0 ;
  wire \AWID[1]_i_1_n_0 ;
  wire \AWID[2]_i_1_n_0 ;
  wire \AWID[3]_i_1_n_0 ;
  (* MARK_DEBUG *) wire [7:0]AWLEN;
  wire \AWLEN[0]_i_1_n_0 ;
  wire \AWLEN[1]_i_1_n_0 ;
  wire \AWLEN[2]_i_1_n_0 ;
  wire \AWLEN[3]_i_1_n_0 ;
  wire \AWLEN[4]_i_1_n_0 ;
  wire \AWLEN[5]_i_1_n_0 ;
  wire \AWLEN[6]_i_1_n_0 ;
  wire \AWLEN[7]_i_1_n_0 ;
  (* MARK_DEBUG *) wire AWLOCK;
  wire AWLOCK_i_1_n_0;
  (* MARK_DEBUG *) wire AWREADY;
  (* MARK_DEBUG *) wire [2:0]AWSIZE;
  wire \AWSIZE[0]_i_1_n_0 ;
  wire \AWSIZE[1]_i_1_n_0 ;
  wire \AWSIZE[2]_i_1_n_0 ;
  (* MARK_DEBUG *) wire AWVALID;
  wire AWVALID_i_1_n_0;
  (* MARK_DEBUG *) wire [3:0]BID;
  (* MARK_DEBUG *) wire BREADY;
  wire BREADY_i_1_n_0;
  wire BREADY_i_2_n_0;
  (* MARK_DEBUG *) wire [1:0]BRESP;
  (* MARK_DEBUG *) wire BVALID;
  (* MARK_DEBUG *) wire [31:0]CADDR;
  wire \CADDR[0]_i_1_n_0 ;
  wire \CADDR[0]_i_2_n_0 ;
  wire \CADDR[10]_i_1_n_0 ;
  wire \CADDR[10]_i_2_n_0 ;
  wire \CADDR[11]_i_1_n_0 ;
  wire \CADDR[11]_i_2_n_0 ;
  wire \CADDR[12]_i_1_n_0 ;
  wire \CADDR[12]_i_2_n_0 ;
  wire \CADDR[13]_i_1_n_0 ;
  wire \CADDR[13]_i_2_n_0 ;
  wire \CADDR[14]_i_1_n_0 ;
  wire \CADDR[14]_i_2_n_0 ;
  wire \CADDR[15]_i_1_n_0 ;
  wire \CADDR[15]_i_2_n_0 ;
  wire \CADDR[16]_i_1_n_0 ;
  wire \CADDR[16]_i_2_n_0 ;
  wire \CADDR[17]_i_1_n_0 ;
  wire \CADDR[17]_i_2_n_0 ;
  wire \CADDR[18]_i_1_n_0 ;
  wire \CADDR[18]_i_2_n_0 ;
  wire \CADDR[19]_i_1_n_0 ;
  wire \CADDR[19]_i_2_n_0 ;
  wire \CADDR[1]_i_1_n_0 ;
  wire \CADDR[1]_i_2_n_0 ;
  wire \CADDR[20]_i_1_n_0 ;
  wire \CADDR[20]_i_2_n_0 ;
  wire \CADDR[21]_i_1_n_0 ;
  wire \CADDR[21]_i_2_n_0 ;
  wire \CADDR[22]_i_1_n_0 ;
  wire \CADDR[22]_i_2_n_0 ;
  wire \CADDR[23]_i_1_n_0 ;
  wire \CADDR[23]_i_2_n_0 ;
  wire \CADDR[24]_i_1_n_0 ;
  wire \CADDR[24]_i_2_n_0 ;
  wire \CADDR[25]_i_1_n_0 ;
  wire \CADDR[25]_i_2_n_0 ;
  wire \CADDR[26]_i_1_n_0 ;
  wire \CADDR[26]_i_2_n_0 ;
  wire \CADDR[27]_i_1_n_0 ;
  wire \CADDR[27]_i_2_n_0 ;
  wire \CADDR[28]_i_1_n_0 ;
  wire \CADDR[28]_i_2_n_0 ;
  wire \CADDR[29]_i_1_n_0 ;
  wire \CADDR[29]_i_2_n_0 ;
  wire \CADDR[2]_i_1_n_0 ;
  wire \CADDR[2]_i_2_n_0 ;
  wire \CADDR[30]_i_1_n_0 ;
  wire \CADDR[30]_i_2_n_0 ;
  wire \CADDR[31]_i_1_n_0 ;
  wire \CADDR[31]_i_2_n_0 ;
  wire \CADDR[31]_i_3_n_0 ;
  wire \CADDR[3]_i_1_n_0 ;
  wire \CADDR[3]_i_2_n_0 ;
  wire \CADDR[4]_i_1_n_0 ;
  wire \CADDR[4]_i_2_n_0 ;
  wire \CADDR[5]_i_1_n_0 ;
  wire \CADDR[5]_i_2_n_0 ;
  wire \CADDR[6]_i_1_n_0 ;
  wire \CADDR[6]_i_2_n_0 ;
  wire \CADDR[7]_i_1_n_0 ;
  wire \CADDR[7]_i_2_n_0 ;
  wire \CADDR[8]_i_1_n_0 ;
  wire \CADDR[8]_i_2_n_0 ;
  wire \CADDR[9]_i_1_n_0 ;
  wire \CADDR[9]_i_2_n_0 ;
  (* MARK_DEBUG *) wire [1:0]CBURST;
  (* MARK_DEBUG *) wire [3:0]CCACHE;
  (* MARK_DEBUG *) wire CEI;
  (* MARK_DEBUG *) wire CEXCL;
  (* MARK_DEBUG *) wire [3:0]CID;
  (* MARK_DEBUG *) wire [7:0]CLENG;
  wire \CLENG[0]_i_1_n_0 ;
  wire \CLENG[1]_i_1_n_0 ;
  wire \CLENG[2]_i_1_n_0 ;
  wire \CLENG[3]_i_1_n_0 ;
  wire \CLENG[4]_i_1_n_0 ;
  wire \CLENG[5]_i_1_n_0 ;
  wire \CLENG[6]_i_1_n_0 ;
  wire \CLENG[7]_i_1_n_0 ;
  wire \CLENG[7]_i_2_n_0 ;
  wire \CLENG[7]_i_3_n_0 ;
  wire \CLENG[7]_i_4_n_0 ;
  wire \CLENG[7]_i_5_n_0 ;
  wire \CLENG_reg[0]_i_1_n_0 ;
  wire \CLENG_reg[10]_i_1_n_0 ;
  wire \CLENG_reg[10]_i_2_n_0 ;
  wire \CLENG_reg[10]_i_3_n_0 ;
  wire \CLENG_reg[10]_i_4_n_0 ;
  wire \CLENG_reg[11]_i_1_n_0 ;
  wire \CLENG_reg[11]_i_2_n_0 ;
  wire \CLENG_reg[11]_i_3_n_0 ;
  wire \CLENG_reg[11]_i_4_n_0 ;
  wire \CLENG_reg[11]_i_5_n_0 ;
  wire \CLENG_reg[1]_i_1_n_0 ;
  wire \CLENG_reg[2]_i_1_n_0 ;
  wire \CLENG_reg[3]_i_1_n_0 ;
  wire \CLENG_reg[4]_i_1_n_0 ;
  wire \CLENG_reg[5]_i_1_n_0 ;
  wire \CLENG_reg[6]_i_1_n_0 ;
  wire \CLENG_reg[7]_i_1_n_0 ;
  wire \CLENG_reg[8]_i_1_n_0 ;
  wire \CLENG_reg[8]_i_2_n_0 ;
  wire \CLENG_reg[8]_i_3_n_0 ;
  wire \CLENG_reg[9]_i_1_n_0 ;
  wire \CLENG_reg[9]_i_2_n_0 ;
  (* MARK_DEBUG *) wire [11:0]CLENG_reg__0;
  (* MARK_DEBUG *) wire CLOCK;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [31:0]CMD;
  wire \CMD[0]_i_1_n_0 ;
  wire \CMD[10]_i_1_n_0 ;
  wire \CMD[11]_i_1_n_0 ;
  wire \CMD[12]_i_1_n_0 ;
  wire \CMD[13]_i_1_n_0 ;
  wire \CMD[14]_i_1_n_0 ;
  wire \CMD[15]_i_1_n_0 ;
  wire \CMD[16]_i_1_n_0 ;
  wire \CMD[16]_i_2_n_0 ;
  wire \CMD[17]_i_1_n_0 ;
  wire \CMD[17]_i_2_n_0 ;
  wire \CMD[17]_i_3_n_0 ;
  wire \CMD[17]_i_4_n_0 ;
  wire \CMD[18]_i_1_n_0 ;
  wire \CMD[19]_i_1_n_0 ;
  wire \CMD[1]_i_1_n_0 ;
  wire \CMD[20]_i_1_n_0 ;
  wire \CMD[21]_i_1_n_0 ;
  wire \CMD[22]_i_1_n_0 ;
  wire \CMD[23]_i_1_n_0 ;
  wire \CMD[24]_i_1_n_0 ;
  wire \CMD[25]_i_1_n_0 ;
  wire \CMD[26]_i_1_n_0 ;
  wire \CMD[27]_i_1_n_0 ;
  wire \CMD[28]_i_1_n_0 ;
  wire \CMD[29]_i_1_n_0 ;
  wire \CMD[2]_i_1_n_0 ;
  wire \CMD[30]_i_1_n_0 ;
  wire \CMD[31]_i_1_n_0 ;
  wire \CMD[31]_i_2_n_0 ;
  wire \CMD[3]_i_1_n_0 ;
  wire \CMD[4]_i_1_n_0 ;
  wire \CMD[5]_i_1_n_0 ;
  wire \CMD[6]_i_1_n_0 ;
  wire \CMD[7]_i_1_n_0 ;
  wire \CMD[8]_i_1_n_0 ;
  wire \CMD[9]_i_1_n_0 ;
  (* MARK_DEBUG *) wire [2:0]CPROT;
  (* MARK_DEBUG *) wire [2:0]CSIZE;
  (* MARK_DEBUG *) wire CWRITE;
  (* MARK_DEBUG *) wire FIQ;
  (* MARK_DEBUG *) wire [15:0]GPIN;
  (* MARK_DEBUG *) wire [15:0]GPOUT;
  wire \GPOUT[0]_i_1_n_0 ;
  wire \GPOUT[10]_i_1_n_0 ;
  wire \GPOUT[11]_i_1_n_0 ;
  wire \GPOUT[12]_i_1_n_0 ;
  wire \GPOUT[13]_i_1_n_0 ;
  wire \GPOUT[14]_i_1_n_0 ;
  wire \GPOUT[15]_i_1_n_0 ;
  wire \GPOUT[15]_i_2_n_0 ;
  wire \GPOUT[1]_i_1_n_0 ;
  wire \GPOUT[2]_i_1_n_0 ;
  wire \GPOUT[3]_i_1_n_0 ;
  wire \GPOUT[4]_i_1_n_0 ;
  wire \GPOUT[5]_i_1_n_0 ;
  wire \GPOUT[6]_i_1_n_0 ;
  wire \GPOUT[7]_i_1_n_0 ;
  wire \GPOUT[8]_i_1_n_0 ;
  wire \GPOUT[9]_i_1_n_0 ;
  (* MARK_DEBUG *) wire IRQ;
  (* MARK_DEBUG *) wire [3:0]MID;
  (* MARK_DEBUG *) wire [31:0]RDATA;
  (* MARK_DEBUG *) wire [3:0]RID;
  (* MARK_DEBUG *) wire RLAST;
  (* MARK_DEBUG *) wire RREADY;
  (* MARK_DEBUG *) wire [1:0]RRESP;
  (* MARK_DEBUG *) wire RVALID;
  (* MARK_DEBUG *) wire [31:0]WDATA;
  (* MARK_DEBUG *) wire [3:0]WID;
  (* MARK_DEBUG *) wire WLAST;
  (* MARK_DEBUG *) wire [3:0]WSTRB;
  (* MARK_DEBUG *) wire WVALID;
  (* MARK_DEBUG *) wire [31:0]addrR;
  wire \addrR[0]_i_1_n_0 ;
  wire \addrR[10]_i_1_n_0 ;
  wire \addrR[10]_i_2_n_0 ;
  wire \addrR[11]_i_1_n_0 ;
  wire \addrR[11]_i_2_n_0 ;
  wire \addrR[12]_i_1_n_0 ;
  wire \addrR[12]_i_2_n_0 ;
  wire \addrR[13]_i_1_n_0 ;
  wire \addrR[13]_i_2_n_0 ;
  wire \addrR[14]_i_1_n_0 ;
  wire \addrR[14]_i_2_n_0 ;
  wire \addrR[15]_i_1_n_0 ;
  wire \addrR[15]_i_2_n_0 ;
  wire \addrR[16]_i_1_n_0 ;
  wire \addrR[16]_i_2_n_0 ;
  wire \addrR[17]_i_1_n_0 ;
  wire \addrR[17]_i_2_n_0 ;
  wire \addrR[18]_i_1_n_0 ;
  wire \addrR[18]_i_2_n_0 ;
  wire \addrR[19]_i_1_n_0 ;
  wire \addrR[19]_i_2_n_0 ;
  wire \addrR[1]_i_1_n_0 ;
  wire \addrR[20]_i_1_n_0 ;
  wire \addrR[20]_i_2_n_0 ;
  wire \addrR[21]_i_1_n_0 ;
  wire \addrR[21]_i_2_n_0 ;
  wire \addrR[22]_i_1_n_0 ;
  wire \addrR[22]_i_2_n_0 ;
  wire \addrR[23]_i_1_n_0 ;
  wire \addrR[23]_i_2_n_0 ;
  wire \addrR[24]_i_1_n_0 ;
  wire \addrR[24]_i_2_n_0 ;
  wire \addrR[25]_i_1_n_0 ;
  wire \addrR[25]_i_2_n_0 ;
  wire \addrR[26]_i_1_n_0 ;
  wire \addrR[26]_i_2_n_0 ;
  wire \addrR[27]_i_1_n_0 ;
  wire \addrR[27]_i_2_n_0 ;
  wire \addrR[28]_i_1_n_0 ;
  wire \addrR[28]_i_2_n_0 ;
  wire \addrR[29]_i_1_n_0 ;
  wire \addrR[29]_i_2_n_0 ;
  wire \addrR[2]_i_10_n_0 ;
  wire \addrR[2]_i_11_n_0 ;
  wire \addrR[2]_i_12_n_0 ;
  wire \addrR[2]_i_13_n_0 ;
  wire \addrR[2]_i_14_n_0 ;
  wire \addrR[2]_i_1_n_0 ;
  wire \addrR[2]_i_2_n_0 ;
  wire \addrR[2]_i_4_n_0 ;
  wire \addrR[2]_i_5_n_0 ;
  wire \addrR[2]_i_6_n_0 ;
  wire \addrR[2]_i_7_n_0 ;
  wire \addrR[2]_i_8_n_0 ;
  wire \addrR[2]_i_9_n_0 ;
  wire \addrR[30]_i_1_n_0 ;
  wire \addrR[30]_i_2_n_0 ;
  wire \addrR[31]_i_1_n_0 ;
  wire \addrR[31]_i_2_n_0 ;
  wire \addrR[31]_i_3_n_0 ;
  wire \addrR[31]_i_4_n_0 ;
  wire \addrR[3]_i_1_n_0 ;
  wire \addrR[3]_i_2_n_0 ;
  wire \addrR[4]_i_1_n_0 ;
  wire \addrR[4]_i_2_n_0 ;
  wire \addrR[5]_i_1_n_0 ;
  wire \addrR[5]_i_2_n_0 ;
  wire \addrR[6]_i_1_n_0 ;
  wire \addrR[6]_i_2_n_0 ;
  wire \addrR[7]_i_1_n_0 ;
  wire \addrR[7]_i_2_n_0 ;
  wire \addrR[8]_i_1_n_0 ;
  wire \addrR[8]_i_2_n_0 ;
  wire \addrR[9]_i_1_n_0 ;
  wire \addrR[9]_i_2_n_0 ;
  wire \addrR_reg[10]_i_3_n_0 ;
  wire \addrR_reg[10]_i_3_n_1 ;
  wire \addrR_reg[10]_i_3_n_10 ;
  wire \addrR_reg[10]_i_3_n_11 ;
  wire \addrR_reg[10]_i_3_n_12 ;
  wire \addrR_reg[10]_i_3_n_13 ;
  wire \addrR_reg[10]_i_3_n_14 ;
  wire \addrR_reg[10]_i_3_n_15 ;
  wire \addrR_reg[10]_i_3_n_2 ;
  wire \addrR_reg[10]_i_3_n_3 ;
  wire \addrR_reg[10]_i_3_n_4 ;
  wire \addrR_reg[10]_i_3_n_5 ;
  wire \addrR_reg[10]_i_3_n_6 ;
  wire \addrR_reg[10]_i_3_n_7 ;
  wire \addrR_reg[10]_i_3_n_8 ;
  wire \addrR_reg[10]_i_3_n_9 ;
  wire \addrR_reg[15]_i_3_n_0 ;
  wire \addrR_reg[15]_i_3_n_1 ;
  wire \addrR_reg[15]_i_3_n_10 ;
  wire \addrR_reg[15]_i_3_n_11 ;
  wire \addrR_reg[15]_i_3_n_12 ;
  wire \addrR_reg[15]_i_3_n_13 ;
  wire \addrR_reg[15]_i_3_n_14 ;
  wire \addrR_reg[15]_i_3_n_15 ;
  wire \addrR_reg[15]_i_3_n_2 ;
  wire \addrR_reg[15]_i_3_n_3 ;
  wire \addrR_reg[15]_i_3_n_4 ;
  wire \addrR_reg[15]_i_3_n_5 ;
  wire \addrR_reg[15]_i_3_n_6 ;
  wire \addrR_reg[15]_i_3_n_7 ;
  wire \addrR_reg[15]_i_3_n_8 ;
  wire \addrR_reg[15]_i_3_n_9 ;
  wire \addrR_reg[18]_i_3_n_0 ;
  wire \addrR_reg[18]_i_3_n_1 ;
  wire \addrR_reg[18]_i_3_n_10 ;
  wire \addrR_reg[18]_i_3_n_11 ;
  wire \addrR_reg[18]_i_3_n_12 ;
  wire \addrR_reg[18]_i_3_n_13 ;
  wire \addrR_reg[18]_i_3_n_14 ;
  wire \addrR_reg[18]_i_3_n_15 ;
  wire \addrR_reg[18]_i_3_n_2 ;
  wire \addrR_reg[18]_i_3_n_3 ;
  wire \addrR_reg[18]_i_3_n_4 ;
  wire \addrR_reg[18]_i_3_n_5 ;
  wire \addrR_reg[18]_i_3_n_6 ;
  wire \addrR_reg[18]_i_3_n_7 ;
  wire \addrR_reg[18]_i_3_n_8 ;
  wire \addrR_reg[18]_i_3_n_9 ;
  wire \addrR_reg[23]_i_3_n_0 ;
  wire \addrR_reg[23]_i_3_n_1 ;
  wire \addrR_reg[23]_i_3_n_10 ;
  wire \addrR_reg[23]_i_3_n_11 ;
  wire \addrR_reg[23]_i_3_n_12 ;
  wire \addrR_reg[23]_i_3_n_13 ;
  wire \addrR_reg[23]_i_3_n_14 ;
  wire \addrR_reg[23]_i_3_n_15 ;
  wire \addrR_reg[23]_i_3_n_2 ;
  wire \addrR_reg[23]_i_3_n_3 ;
  wire \addrR_reg[23]_i_3_n_4 ;
  wire \addrR_reg[23]_i_3_n_5 ;
  wire \addrR_reg[23]_i_3_n_6 ;
  wire \addrR_reg[23]_i_3_n_7 ;
  wire \addrR_reg[23]_i_3_n_8 ;
  wire \addrR_reg[23]_i_3_n_9 ;
  wire \addrR_reg[26]_i_3_n_0 ;
  wire \addrR_reg[26]_i_3_n_1 ;
  wire \addrR_reg[26]_i_3_n_10 ;
  wire \addrR_reg[26]_i_3_n_11 ;
  wire \addrR_reg[26]_i_3_n_12 ;
  wire \addrR_reg[26]_i_3_n_13 ;
  wire \addrR_reg[26]_i_3_n_14 ;
  wire \addrR_reg[26]_i_3_n_15 ;
  wire \addrR_reg[26]_i_3_n_2 ;
  wire \addrR_reg[26]_i_3_n_3 ;
  wire \addrR_reg[26]_i_3_n_4 ;
  wire \addrR_reg[26]_i_3_n_5 ;
  wire \addrR_reg[26]_i_3_n_6 ;
  wire \addrR_reg[26]_i_3_n_7 ;
  wire \addrR_reg[26]_i_3_n_8 ;
  wire \addrR_reg[26]_i_3_n_9 ;
  wire \addrR_reg[2]_i_3_n_0 ;
  wire \addrR_reg[2]_i_3_n_1 ;
  wire \addrR_reg[2]_i_3_n_10 ;
  wire \addrR_reg[2]_i_3_n_11 ;
  wire \addrR_reg[2]_i_3_n_12 ;
  wire \addrR_reg[2]_i_3_n_13 ;
  wire \addrR_reg[2]_i_3_n_14 ;
  wire \addrR_reg[2]_i_3_n_15 ;
  wire \addrR_reg[2]_i_3_n_2 ;
  wire \addrR_reg[2]_i_3_n_3 ;
  wire \addrR_reg[2]_i_3_n_4 ;
  wire \addrR_reg[2]_i_3_n_5 ;
  wire \addrR_reg[2]_i_3_n_6 ;
  wire \addrR_reg[2]_i_3_n_7 ;
  wire \addrR_reg[2]_i_3_n_8 ;
  wire \addrR_reg[2]_i_3_n_9 ;
  wire \addrR_reg[31]_i_5_n_1 ;
  wire \addrR_reg[31]_i_5_n_10 ;
  wire \addrR_reg[31]_i_5_n_11 ;
  wire \addrR_reg[31]_i_5_n_12 ;
  wire \addrR_reg[31]_i_5_n_13 ;
  wire \addrR_reg[31]_i_5_n_14 ;
  wire \addrR_reg[31]_i_5_n_15 ;
  wire \addrR_reg[31]_i_5_n_2 ;
  wire \addrR_reg[31]_i_5_n_3 ;
  wire \addrR_reg[31]_i_5_n_4 ;
  wire \addrR_reg[31]_i_5_n_5 ;
  wire \addrR_reg[31]_i_5_n_6 ;
  wire \addrR_reg[31]_i_5_n_7 ;
  wire \addrR_reg[31]_i_5_n_8 ;
  wire \addrR_reg[31]_i_5_n_9 ;
  wire \addrR_reg[31]_i_6_n_11 ;
  wire \addrR_reg[31]_i_6_n_12 ;
  wire \addrR_reg[31]_i_6_n_13 ;
  wire \addrR_reg[31]_i_6_n_14 ;
  wire \addrR_reg[31]_i_6_n_15 ;
  wire \addrR_reg[31]_i_6_n_4 ;
  wire \addrR_reg[31]_i_6_n_5 ;
  wire \addrR_reg[31]_i_6_n_6 ;
  wire \addrR_reg[31]_i_6_n_7 ;
  (* MARK_DEBUG *) wire [31:0]addrW;
  wire \addrW[0]_i_1_n_0 ;
  wire \addrW[10]_i_1_n_0 ;
  wire \addrW[10]_i_2_n_0 ;
  wire \addrW[11]_i_1_n_0 ;
  wire \addrW[11]_i_2_n_0 ;
  wire \addrW[12]_i_1_n_0 ;
  wire \addrW[12]_i_2_n_0 ;
  wire \addrW[13]_i_1_n_0 ;
  wire \addrW[13]_i_2_n_0 ;
  wire \addrW[14]_i_1_n_0 ;
  wire \addrW[14]_i_2_n_0 ;
  wire \addrW[15]_i_1_n_0 ;
  wire \addrW[15]_i_2_n_0 ;
  wire \addrW[16]_i_1_n_0 ;
  wire \addrW[16]_i_2_n_0 ;
  wire \addrW[17]_i_1_n_0 ;
  wire \addrW[17]_i_2_n_0 ;
  wire \addrW[18]_i_1_n_0 ;
  wire \addrW[18]_i_2_n_0 ;
  wire \addrW[19]_i_1_n_0 ;
  wire \addrW[19]_i_2_n_0 ;
  wire \addrW[1]_i_1_n_0 ;
  wire \addrW[1]_i_2_n_0 ;
  wire \addrW[20]_i_1_n_0 ;
  wire \addrW[20]_i_2_n_0 ;
  wire \addrW[21]_i_1_n_0 ;
  wire \addrW[21]_i_2_n_0 ;
  wire \addrW[22]_i_1_n_0 ;
  wire \addrW[22]_i_2_n_0 ;
  wire \addrW[23]_i_1_n_0 ;
  wire \addrW[23]_i_2_n_0 ;
  wire \addrW[24]_i_1_n_0 ;
  wire \addrW[24]_i_2_n_0 ;
  wire \addrW[25]_i_1_n_0 ;
  wire \addrW[25]_i_2_n_0 ;
  wire \addrW[26]_i_1_n_0 ;
  wire \addrW[26]_i_2_n_0 ;
  wire \addrW[27]_i_1_n_0 ;
  wire \addrW[27]_i_2_n_0 ;
  wire \addrW[28]_i_1_n_0 ;
  wire \addrW[28]_i_2_n_0 ;
  wire \addrW[29]_i_1_n_0 ;
  wire \addrW[29]_i_2_n_0 ;
  wire \addrW[2]_i_10_n_0 ;
  wire \addrW[2]_i_11_n_0 ;
  wire \addrW[2]_i_12_n_0 ;
  wire \addrW[2]_i_13_n_0 ;
  wire \addrW[2]_i_14_n_0 ;
  wire \addrW[2]_i_15_n_0 ;
  wire \addrW[2]_i_1_n_0 ;
  wire \addrW[2]_i_2_n_0 ;
  wire \addrW[2]_i_3_n_0 ;
  wire \addrW[2]_i_5_n_0 ;
  wire \addrW[2]_i_6_n_0 ;
  wire \addrW[2]_i_7_n_0 ;
  wire \addrW[2]_i_8_n_0 ;
  wire \addrW[2]_i_9_n_0 ;
  wire \addrW[30]_i_1_n_0 ;
  wire \addrW[30]_i_2_n_0 ;
  wire \addrW[31]_i_1_n_0 ;
  wire \addrW[31]_i_2_n_0 ;
  wire \addrW[31]_i_3_n_0 ;
  wire \addrW[31]_i_4_n_0 ;
  wire \addrW[3]_i_1_n_0 ;
  wire \addrW[3]_i_2_n_0 ;
  wire \addrW[4]_i_1_n_0 ;
  wire \addrW[4]_i_2_n_0 ;
  wire \addrW[5]_i_1_n_0 ;
  wire \addrW[5]_i_2_n_0 ;
  wire \addrW[6]_i_1_n_0 ;
  wire \addrW[6]_i_2_n_0 ;
  wire \addrW[7]_i_1_n_0 ;
  wire \addrW[7]_i_2_n_0 ;
  wire \addrW[8]_i_1_n_0 ;
  wire \addrW[8]_i_2_n_0 ;
  wire \addrW[9]_i_1_n_0 ;
  wire \addrW[9]_i_2_n_0 ;
  (* MARK_DEBUG *) wire [31:0]addrW_dly;
  wire \addrW_reg[10]_i_3_n_0 ;
  wire \addrW_reg[10]_i_3_n_1 ;
  wire \addrW_reg[10]_i_3_n_10 ;
  wire \addrW_reg[10]_i_3_n_11 ;
  wire \addrW_reg[10]_i_3_n_12 ;
  wire \addrW_reg[10]_i_3_n_13 ;
  wire \addrW_reg[10]_i_3_n_14 ;
  wire \addrW_reg[10]_i_3_n_15 ;
  wire \addrW_reg[10]_i_3_n_2 ;
  wire \addrW_reg[10]_i_3_n_3 ;
  wire \addrW_reg[10]_i_3_n_4 ;
  wire \addrW_reg[10]_i_3_n_5 ;
  wire \addrW_reg[10]_i_3_n_6 ;
  wire \addrW_reg[10]_i_3_n_7 ;
  wire \addrW_reg[10]_i_3_n_8 ;
  wire \addrW_reg[10]_i_3_n_9 ;
  wire \addrW_reg[15]_i_3_n_0 ;
  wire \addrW_reg[15]_i_3_n_1 ;
  wire \addrW_reg[15]_i_3_n_10 ;
  wire \addrW_reg[15]_i_3_n_11 ;
  wire \addrW_reg[15]_i_3_n_12 ;
  wire \addrW_reg[15]_i_3_n_13 ;
  wire \addrW_reg[15]_i_3_n_14 ;
  wire \addrW_reg[15]_i_3_n_15 ;
  wire \addrW_reg[15]_i_3_n_2 ;
  wire \addrW_reg[15]_i_3_n_3 ;
  wire \addrW_reg[15]_i_3_n_4 ;
  wire \addrW_reg[15]_i_3_n_5 ;
  wire \addrW_reg[15]_i_3_n_6 ;
  wire \addrW_reg[15]_i_3_n_7 ;
  wire \addrW_reg[15]_i_3_n_8 ;
  wire \addrW_reg[15]_i_3_n_9 ;
  wire \addrW_reg[18]_i_3_n_0 ;
  wire \addrW_reg[18]_i_3_n_1 ;
  wire \addrW_reg[18]_i_3_n_10 ;
  wire \addrW_reg[18]_i_3_n_11 ;
  wire \addrW_reg[18]_i_3_n_12 ;
  wire \addrW_reg[18]_i_3_n_13 ;
  wire \addrW_reg[18]_i_3_n_14 ;
  wire \addrW_reg[18]_i_3_n_15 ;
  wire \addrW_reg[18]_i_3_n_2 ;
  wire \addrW_reg[18]_i_3_n_3 ;
  wire \addrW_reg[18]_i_3_n_4 ;
  wire \addrW_reg[18]_i_3_n_5 ;
  wire \addrW_reg[18]_i_3_n_6 ;
  wire \addrW_reg[18]_i_3_n_7 ;
  wire \addrW_reg[18]_i_3_n_8 ;
  wire \addrW_reg[18]_i_3_n_9 ;
  wire \addrW_reg[23]_i_3_n_0 ;
  wire \addrW_reg[23]_i_3_n_1 ;
  wire \addrW_reg[23]_i_3_n_10 ;
  wire \addrW_reg[23]_i_3_n_11 ;
  wire \addrW_reg[23]_i_3_n_12 ;
  wire \addrW_reg[23]_i_3_n_13 ;
  wire \addrW_reg[23]_i_3_n_14 ;
  wire \addrW_reg[23]_i_3_n_15 ;
  wire \addrW_reg[23]_i_3_n_2 ;
  wire \addrW_reg[23]_i_3_n_3 ;
  wire \addrW_reg[23]_i_3_n_4 ;
  wire \addrW_reg[23]_i_3_n_5 ;
  wire \addrW_reg[23]_i_3_n_6 ;
  wire \addrW_reg[23]_i_3_n_7 ;
  wire \addrW_reg[23]_i_3_n_8 ;
  wire \addrW_reg[23]_i_3_n_9 ;
  wire \addrW_reg[26]_i_3_n_0 ;
  wire \addrW_reg[26]_i_3_n_1 ;
  wire \addrW_reg[26]_i_3_n_10 ;
  wire \addrW_reg[26]_i_3_n_11 ;
  wire \addrW_reg[26]_i_3_n_12 ;
  wire \addrW_reg[26]_i_3_n_13 ;
  wire \addrW_reg[26]_i_3_n_14 ;
  wire \addrW_reg[26]_i_3_n_15 ;
  wire \addrW_reg[26]_i_3_n_2 ;
  wire \addrW_reg[26]_i_3_n_3 ;
  wire \addrW_reg[26]_i_3_n_4 ;
  wire \addrW_reg[26]_i_3_n_5 ;
  wire \addrW_reg[26]_i_3_n_6 ;
  wire \addrW_reg[26]_i_3_n_7 ;
  wire \addrW_reg[26]_i_3_n_8 ;
  wire \addrW_reg[26]_i_3_n_9 ;
  wire \addrW_reg[2]_i_4_n_0 ;
  wire \addrW_reg[2]_i_4_n_1 ;
  wire \addrW_reg[2]_i_4_n_10 ;
  wire \addrW_reg[2]_i_4_n_11 ;
  wire \addrW_reg[2]_i_4_n_12 ;
  wire \addrW_reg[2]_i_4_n_13 ;
  wire \addrW_reg[2]_i_4_n_14 ;
  wire \addrW_reg[2]_i_4_n_15 ;
  wire \addrW_reg[2]_i_4_n_2 ;
  wire \addrW_reg[2]_i_4_n_3 ;
  wire \addrW_reg[2]_i_4_n_4 ;
  wire \addrW_reg[2]_i_4_n_5 ;
  wire \addrW_reg[2]_i_4_n_6 ;
  wire \addrW_reg[2]_i_4_n_7 ;
  wire \addrW_reg[2]_i_4_n_8 ;
  wire \addrW_reg[2]_i_4_n_9 ;
  wire \addrW_reg[31]_i_5_n_1 ;
  wire \addrW_reg[31]_i_5_n_10 ;
  wire \addrW_reg[31]_i_5_n_11 ;
  wire \addrW_reg[31]_i_5_n_12 ;
  wire \addrW_reg[31]_i_5_n_13 ;
  wire \addrW_reg[31]_i_5_n_14 ;
  wire \addrW_reg[31]_i_5_n_15 ;
  wire \addrW_reg[31]_i_5_n_2 ;
  wire \addrW_reg[31]_i_5_n_3 ;
  wire \addrW_reg[31]_i_5_n_4 ;
  wire \addrW_reg[31]_i_5_n_5 ;
  wire \addrW_reg[31]_i_5_n_6 ;
  wire \addrW_reg[31]_i_5_n_7 ;
  wire \addrW_reg[31]_i_5_n_8 ;
  wire \addrW_reg[31]_i_5_n_9 ;
  wire \addrW_reg[31]_i_6_n_11 ;
  wire \addrW_reg[31]_i_6_n_12 ;
  wire \addrW_reg[31]_i_6_n_13 ;
  wire \addrW_reg[31]_i_6_n_14 ;
  wire \addrW_reg[31]_i_6_n_15 ;
  wire \addrW_reg[31]_i_6_n_4 ;
  wire \addrW_reg[31]_i_6_n_5 ;
  wire \addrW_reg[31]_i_6_n_6 ;
  wire \addrW_reg[31]_i_6_n_7 ;
  (* MARK_DEBUG *) wire [31:0]cmd_data;
  (* MARK_DEBUG *) wire [15:0]cmd_items;
  (* MARK_DEBUG *) wire cmd_ready;
  wire cmd_ready_i_1_n_0;
  wire cmd_ready_i_2_n_0;
  wire cmd_ready_i_3_n_0;
  (* MARK_DEBUG *) wire cmd_valid;
  (* MARK_DEBUG *) wire [8:0]countR;
  wire \countR[0]_i_1_n_0 ;
  wire \countR[0]_i_2_n_0 ;
  wire \countR[1]_i_1_n_0 ;
  wire \countR[2]_i_1_n_0 ;
  wire \countR[3]_i_1_n_0 ;
  wire \countR[4]_i_1_n_0 ;
  wire \countR[5]_i_1_n_0 ;
  wire \countR[6]_i_1_n_0 ;
  wire \countR[7]_i_1_n_0 ;
  wire \countR[7]_i_2_n_0 ;
  wire \countR[7]_i_3_n_0 ;
  wire \countR[8]_i_1_n_0 ;
  wire \countR[8]_i_2_n_0 ;
  wire \countR[8]_i_3_n_0 ;
  wire \countR[8]_i_4_n_0 ;
  wire \countR[8]_i_5_n_0 ;
  (* MARK_DEBUG *) wire [8:0]countW;
  wire \countW[0]_i_1_n_0 ;
  wire \countW[0]_i_2_n_0 ;
  wire \countW[1]_i_1_n_0 ;
  wire \countW[2]_i_1_n_0 ;
  wire \countW[3]_i_1_n_0 ;
  wire \countW[4]_i_1_n_0 ;
  wire \countW[5]_i_1_n_0 ;
  wire \countW[6]_i_1_n_0 ;
  wire \countW[7]_i_1_n_0 ;
  wire \countW[7]_i_2_n_0 ;
  wire \countW[7]_i_3_n_0 ;
  wire \countW[8]_i_1_n_0 ;
  wire \countW[8]_i_2_n_0 ;
  wire \countW[8]_i_3_n_0 ;
  wire \countW[8]_i_4_n_0 ;
  (* MARK_DEBUG *) wire [33:0]f2u_data;
  wire [31:0]f2u_fifo_wr_dat;
  wire f2u_fifo_wr_rdy;
  (* MARK_DEBUG *) wire [31:0]f2u_int_data;
  wire \f2u_int_data[0]_i_1_n_0 ;
  wire \f2u_int_data[10]_i_1_n_0 ;
  wire \f2u_int_data[11]_i_1_n_0 ;
  wire \f2u_int_data[12]_i_1_n_0 ;
  wire \f2u_int_data[13]_i_1_n_0 ;
  wire \f2u_int_data[14]_i_1_n_0 ;
  wire \f2u_int_data[15]_i_1_n_0 ;
  wire \f2u_int_data[16]_i_1_n_0 ;
  wire \f2u_int_data[17]_i_1_n_0 ;
  wire \f2u_int_data[18]_i_1_n_0 ;
  wire \f2u_int_data[19]_i_1_n_0 ;
  wire \f2u_int_data[1]_i_1_n_0 ;
  wire \f2u_int_data[20]_i_1_n_0 ;
  wire \f2u_int_data[21]_i_1_n_0 ;
  wire \f2u_int_data[22]_i_1_n_0 ;
  wire \f2u_int_data[23]_i_1_n_0 ;
  wire \f2u_int_data[24]_i_1_n_0 ;
  wire \f2u_int_data[25]_i_1_n_0 ;
  wire \f2u_int_data[26]_i_1_n_0 ;
  wire \f2u_int_data[27]_i_1_n_0 ;
  wire \f2u_int_data[28]_i_1_n_0 ;
  wire \f2u_int_data[29]_i_1_n_0 ;
  wire \f2u_int_data[2]_i_1_n_0 ;
  wire \f2u_int_data[30]_i_1_n_0 ;
  wire \f2u_int_data[31]_i_1_n_0 ;
  wire \f2u_int_data[31]_i_2_n_0 ;
  wire \f2u_int_data[3]_i_1_n_0 ;
  wire \f2u_int_data[4]_i_1_n_0 ;
  wire \f2u_int_data[5]_i_1_n_0 ;
  wire \f2u_int_data[6]_i_1_n_0 ;
  wire \f2u_int_data[7]_i_1_n_0 ;
  wire \f2u_int_data[8]_i_1_n_0 ;
  wire \f2u_int_data[9]_i_1_n_0 ;
  (* MARK_DEBUG *) wire f2u_ready;
  (* MARK_DEBUG *) wire [15:0]f2u_rooms;
  (* MARK_DEBUG *) wire f2u_valid;
  wire [1:0]last_resp;
  wire \last_resp[0]_i_1_n_0 ;
  wire \last_resp[1]_i_1_n_0 ;
  wire \last_resp[1]_i_2_n_0 ;
  wire [2:0]p_0_in__0;
  wire [2:0]p_0_in__1;
  wire [2:0]p_0_in__2;
  (* MARK_DEBUG *) wire read_done;
  wire read_done_i_10_n_0;
  wire read_done_i_11_n_0;
  wire read_done_i_12_n_0;
  wire read_done_i_13_n_0;
  wire read_done_i_14_n_0;
  wire read_done_i_1_n_0;
  wire read_done_i_2_n_0;
  wire read_done_i_4_n_0;
  wire read_done_i_5_n_0;
  wire read_done_i_6_n_0;
  wire read_done_i_7_n_0;
  wire read_done_i_8_n_0;
  wire read_done_i_9_n_0;
  wire read_done_reg_i_3_n_3;
  wire read_done_reg_i_3_n_4;
  wire read_done_reg_i_3_n_5;
  wire read_done_reg_i_3_n_6;
  wire read_done_reg_i_3_n_7;
  (* MARK_DEBUG *) wire read_go;
  wire read_go_i_1_n_0;
  wire read_go_i_2_n_0;
  wire read_go_i_3_n_0;
  wire read_go_i_4_n_0;
  wire read_go_i_5_n_0;
  wire read_go_i_6_n_0;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [2:0]state_cmd;
  wire \state_cmd[0]_i_2_n_0 ;
  wire \state_cmd[0]_i_3_n_0 ;
  wire \state_cmd[0]_i_4_n_0 ;
  wire \state_cmd[0]_i_5_n_0 ;
  wire \state_cmd[0]_i_6_n_0 ;
  wire \state_cmd[1]_i_2_n_0 ;
  wire \state_cmd[2]_i_2_n_0 ;
  wire \state_cmd[2]_i_3_n_0 ;
  wire \state_cmd[2]_i_4_n_0 ;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [2:0]state_read;
  wire \state_read[1]_i_2_n_0 ;
  wire \state_read[2]_i_2_n_0 ;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [2:0]state_write;
  wire \state_write[0]_i_2_n_0 ;
  wire \state_write[0]_i_3_n_0 ;
  wire \state_write[2]_i_2_n_0 ;
  (* MARK_DEBUG *) wire [3:0]transactor_sel;
  (* MARK_DEBUG *) wire [31:0]u2f_data;
  (* MARK_DEBUG *) wire u2f_fifo_empty;
  (* MARK_DEBUG *) wire u2f_fifo_emptyN;
  (* MARK_DEBUG *) wire u2f_fifo_full;
  (* MARK_DEBUG *) wire u2f_fifo_fullN;
  (* MARK_DEBUG *) wire [40:0]u2f_fifo_rd_dat;
  (* MARK_DEBUG *) wire u2f_fifo_rd_rdy;
  (* MARK_DEBUG *) (* RTL_KEEP = "yes" *) wire u2f_fifo_rd_vld;
  (* MARK_DEBUG *) wire [40:0]u2f_fifo_wr_dat;
  wire u2f_fifo_wr_dat_inferred_i_1_n_4;
  wire u2f_fifo_wr_dat_inferred_i_1_n_5;
  wire u2f_fifo_wr_dat_inferred_i_1_n_6;
  wire u2f_fifo_wr_dat_inferred_i_1_n_7;
  wire u2f_fifo_wr_dat_inferred_i_38_n_0;
  wire u2f_fifo_wr_dat_inferred_i_39_n_0;
  wire u2f_fifo_wr_dat_inferred_i_40_n_0;
  wire u2f_fifo_wr_dat_inferred_i_41_n_0;
  wire u2f_fifo_wr_dat_inferred_i_42_n_0;
  wire u2f_fifo_wr_dat_inferred_i_43_n_0;
  wire u2f_fifo_wr_dat_inferred_i_44_n_0;
  wire u2f_fifo_wr_dat_inferred_i_45_n_0;
  wire u2f_fifo_wr_dat_inferred_i_46_n_0;
  wire u2f_fifo_wr_dat_inferred_i_47_n_0;
  wire u2f_fifo_wr_dat_inferred_i_48_n_0;
  (* MARK_DEBUG *) wire u2f_fifo_wr_rdy;
  (* MARK_DEBUG *) wire u2f_fifo_wr_vld;
  (* MARK_DEBUG *) wire [15:0]u2f_items;
  (* MARK_DEBUG *) wire u2f_ready;
  wire u2f_ready_i_1_n_0;
  wire u2f_ready_i_2_n_0;
  wire u2f_ready_i_3_n_0;
  (* MARK_DEBUG *) wire u2f_valid;
  wire u_f2u_fifo_i_1_n_0;
  wire u_f2u_fifo_i_34_n_0;
  wire u_f2u_fifo_i_35_n_0;
  wire u_f2u_fifo_i_36_n_0;
  wire u_f2u_fifo_i_37_n_0;
  wire u_f2u_fifo_i_38_n_0;
  wire u_f2u_fifo_i_39_n_0;
  wire u_f2u_fifo_i_40_n_0;
  wire u_f2u_fifo_i_41_n_0;
  wire u_f2u_fifo_i_42_n_0;
  wire u_f2u_fifo_i_43_n_0;
  wire u_f2u_fifo_i_44_n_0;
  wire u_f2u_fifo_i_45_n_0;
  wire u_f2u_fifo_i_46_n_0;
  wire u_f2u_fifo_i_47_n_0;
  wire u_f2u_fifo_i_48_n_0;
  wire u_u2f_fifo_i_1_n_0;
  (* MARK_DEBUG *) wire write_done;
  wire write_done_i_1_n_0;
  (* MARK_DEBUG *) wire write_go;
  wire write_go_i_1_n_0;
  wire write_go_i_2_n_0;
  wire write_go_i_3_n_0;
  wire [7:7]\NLW_addrR_reg[31]_i_5_CO_UNCONNECTED ;
  wire [7:4]\NLW_addrR_reg[31]_i_6_CO_UNCONNECTED ;
  wire [7:5]\NLW_addrR_reg[31]_i_6_O_UNCONNECTED ;
  wire [7:7]\NLW_addrW_reg[31]_i_5_CO_UNCONNECTED ;
  wire [7:4]\NLW_addrW_reg[31]_i_6_CO_UNCONNECTED ;
  wire [7:5]\NLW_addrW_reg[31]_i_6_O_UNCONNECTED ;
  wire [7:5]NLW_read_done_reg_i_3_CO_UNCONNECTED;
  wire [7:0]NLW_read_done_reg_i_3_O_UNCONNECTED;
  wire [7:5]NLW_u2f_fifo_wr_dat_inferred_i_1_CO_UNCONNECTED;
  wire [7:0]NLW_u2f_fifo_wr_dat_inferred_i_1_O_UNCONNECTED;
  wire NLW_u_f2u_fifo_empty_UNCONNECTED;
  wire NLW_u_f2u_fifo_emptyN_UNCONNECTED;
  wire NLW_u_f2u_fifo_full_UNCONNECTED;
  wire NLW_u_f2u_fifo_fullN_UNCONNECTED;
  wire [4:0]NLW_u_f2u_fifo_rd_cnt_UNCONNECTED;
  wire [4:0]NLW_u_f2u_fifo_wr_cnt_UNCONNECTED;
  wire [4:0]NLW_u_u2f_fifo_rd_cnt_UNCONNECTED;
  wire [4:0]NLW_u_u2f_fifo_wr_cnt_UNCONNECTED;

  assign ARQOS[3] = \<const0> ;
  assign ARQOS[2] = \<const0> ;
  assign ARQOS[1] = \<const0> ;
  assign ARQOS[0] = \<const0> ;
  assign ARREGION[3] = \<const0> ;
  assign ARREGION[2] = \<const0> ;
  assign ARREGION[1] = \<const0> ;
  assign ARREGION[0] = \<const0> ;
  assign AWQOS[3] = \<const0> ;
  assign AWQOS[2] = \<const0> ;
  assign AWQOS[1] = \<const0> ;
  assign AWQOS[0] = \<const0> ;
  assign AWREGION[3] = \<const0> ;
  assign AWREGION[2] = \<const0> ;
  assign AWREGION[1] = \<const0> ;
  assign AWREGION[0] = \<const0> ;
  assign u2f_fifo_rd_rdy = WREADY;
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[0]_i_1 
       (.I0(ARADDR[0]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[0]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[10]_i_1 
       (.I0(ARADDR[10]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[10]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[11]_i_1 
       (.I0(ARADDR[11]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[11]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[12]_i_1 
       (.I0(ARADDR[12]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[12]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[13]_i_1 
       (.I0(ARADDR[13]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[13]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[14]_i_1 
       (.I0(ARADDR[14]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[14]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[15]_i_1 
       (.I0(ARADDR[15]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[15]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[16]_i_1 
       (.I0(ARADDR[16]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[16]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[17]_i_1 
       (.I0(ARADDR[17]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[17]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[18]_i_1 
       (.I0(ARADDR[18]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[18]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[18]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[19]_i_1 
       (.I0(ARADDR[19]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[19]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[19]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[1]_i_1 
       (.I0(ARADDR[1]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[1]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[20]_i_1 
       (.I0(ARADDR[20]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[20]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[20]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[21]_i_1 
       (.I0(ARADDR[21]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[21]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[21]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[22]_i_1 
       (.I0(ARADDR[22]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[22]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[22]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[23]_i_1 
       (.I0(ARADDR[23]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[23]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[23]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[24]_i_1 
       (.I0(ARADDR[24]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[24]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[24]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[25]_i_1 
       (.I0(ARADDR[25]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[25]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[25]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[26]_i_1 
       (.I0(ARADDR[26]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[26]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[27]_i_1 
       (.I0(ARADDR[27]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[27]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[27]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[28]_i_1 
       (.I0(ARADDR[28]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[28]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[28]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[29]_i_1 
       (.I0(ARADDR[29]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[29]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[29]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[2]_i_1 
       (.I0(ARADDR[2]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[2]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[30]_i_1 
       (.I0(ARADDR[30]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[30]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[30]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[31]_i_1 
       (.I0(ARADDR[31]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[31]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[3]_i_1 
       (.I0(ARADDR[3]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[3]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[4]_i_1 
       (.I0(ARADDR[4]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[4]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[5]_i_1 
       (.I0(ARADDR[5]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[5]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[6]_i_1 
       (.I0(ARADDR[6]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[6]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[7]_i_1 
       (.I0(ARADDR[7]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[7]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[8]_i_1 
       (.I0(ARADDR[8]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[8]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARADDR[9]_i_1 
       (.I0(ARADDR[9]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CADDR[9]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARADDR[9]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[0]_i_1_n_0 ),
        .Q(ARADDR[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[10] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[10]_i_1_n_0 ),
        .Q(ARADDR[10]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[11] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[11]_i_1_n_0 ),
        .Q(ARADDR[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[12] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[12]_i_1_n_0 ),
        .Q(ARADDR[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[13] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[13]_i_1_n_0 ),
        .Q(ARADDR[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[14] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[14]_i_1_n_0 ),
        .Q(ARADDR[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[15] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[15]_i_1_n_0 ),
        .Q(ARADDR[15]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[16] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[16]_i_1_n_0 ),
        .Q(ARADDR[16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[17] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[17]_i_1_n_0 ),
        .Q(ARADDR[17]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[18] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[18]_i_1_n_0 ),
        .Q(ARADDR[18]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[19] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[19]_i_1_n_0 ),
        .Q(ARADDR[19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[1]_i_1_n_0 ),
        .Q(ARADDR[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[20] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[20]_i_1_n_0 ),
        .Q(ARADDR[20]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[21] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[21]_i_1_n_0 ),
        .Q(ARADDR[21]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[22] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[22]_i_1_n_0 ),
        .Q(ARADDR[22]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[23] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[23]_i_1_n_0 ),
        .Q(ARADDR[23]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[24] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[24]_i_1_n_0 ),
        .Q(ARADDR[24]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[25] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[25]_i_1_n_0 ),
        .Q(ARADDR[25]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[26] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[26]_i_1_n_0 ),
        .Q(ARADDR[26]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[27] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[27]_i_1_n_0 ),
        .Q(ARADDR[27]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[28] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[28]_i_1_n_0 ),
        .Q(ARADDR[28]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[29] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[29]_i_1_n_0 ),
        .Q(ARADDR[29]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[2]_i_1_n_0 ),
        .Q(ARADDR[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[30] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[30]_i_1_n_0 ),
        .Q(ARADDR[30]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[31] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARADDR[31]_i_1_n_0 ),
        .Q(ARADDR[31]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[3]_i_1_n_0 ),
        .Q(ARADDR[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[4] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[4]_i_1_n_0 ),
        .Q(ARADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[5] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[5]_i_1_n_0 ),
        .Q(ARADDR[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[6] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[6]_i_1_n_0 ),
        .Q(ARADDR[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[7] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[7]_i_1_n_0 ),
        .Q(ARADDR[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[8] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[8]_i_1_n_0 ),
        .Q(ARADDR[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARADDR_reg[9] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARADDR[9]_i_1_n_0 ),
        .Q(ARADDR[9]));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARBURST[0]_i_1 
       (.I0(ARBURST[0]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CBURST[0]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARBURST[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARBURST[1]_i_1 
       (.I0(ARBURST[1]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CBURST[1]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARBURST[1]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARBURST_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\ARBURST[0]_i_1_n_0 ),
        .Q(ARBURST[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARBURST_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\ARBURST[1]_i_1_n_0 ),
        .Q(ARBURST[1]));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARID[0]_i_1 
       (.I0(ARID[0]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(u2f_fifo_wr_dat[36]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARID[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARID[1]_i_1 
       (.I0(ARID[1]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(u2f_fifo_wr_dat[37]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARID[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARID[2]_i_1 
       (.I0(ARID[2]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(u2f_fifo_wr_dat[38]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARID[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARID[3]_i_1 
       (.I0(ARID[3]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(u2f_fifo_wr_dat[39]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARID[3]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARID_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\ARID[0]_i_1_n_0 ),
        .Q(ARID[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARID_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\ARID[1]_i_1_n_0 ),
        .Q(ARID[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARID_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\ARID[2]_i_1_n_0 ),
        .Q(ARID[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARID_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\ARID[3]_i_1_n_0 ),
        .Q(ARID[3]));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARLEN[0]_i_1 
       (.I0(ARLEN[0]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CLENG[0]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARLEN[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARLEN[1]_i_1 
       (.I0(ARLEN[1]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CLENG[1]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARLEN[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARLEN[2]_i_1 
       (.I0(ARLEN[2]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CLENG[2]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARLEN[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARLEN[3]_i_1 
       (.I0(ARLEN[3]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CLENG[3]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARLEN[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARLEN[4]_i_1 
       (.I0(ARLEN[4]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CLENG[4]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARLEN[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARLEN[5]_i_1 
       (.I0(ARLEN[5]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CLENG[5]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARLEN[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARLEN[6]_i_1 
       (.I0(ARLEN[6]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CLENG[6]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARLEN[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARLEN[7]_i_1 
       (.I0(ARLEN[7]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CLENG[7]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARLEN[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0F0F0FFD)) 
    \ARLEN[7]_i_2 
       (.I0(read_go),
        .I1(CEI),
        .I2(state_read[2]),
        .I3(state_read[1]),
        .I4(state_read[0]),
        .O(\ARLEN[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00010000)) 
    \ARLEN[7]_i_3 
       (.I0(state_read[2]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .I3(CEI),
        .I4(read_go),
        .O(\ARLEN[7]_i_3_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARLEN_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARLEN[0]_i_1_n_0 ),
        .Q(ARLEN[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARLEN_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARLEN[1]_i_1_n_0 ),
        .Q(ARLEN[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARLEN_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARLEN[2]_i_1_n_0 ),
        .Q(ARLEN[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARLEN_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\ARLEN[3]_i_1_n_0 ),
        .Q(ARLEN[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARLEN_reg[4] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARLEN[4]_i_1_n_0 ),
        .Q(ARLEN[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARLEN_reg[5] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARLEN[5]_i_1_n_0 ),
        .Q(ARLEN[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARLEN_reg[6] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARLEN[6]_i_1_n_0 ),
        .Q(ARLEN[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARLEN_reg[7] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARLEN[7]_i_1_n_0 ),
        .Q(ARLEN[7]));
  LUT4 #(
    .INIT(16'hF888)) 
    ARLOCK_i_1
       (.I0(ARLOCK),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CEXCL),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(ARLOCK_i_1_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    ARLOCK_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(ARLOCK_i_1_n_0),
        .Q(ARLOCK));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARSIZE[0]_i_1 
       (.I0(ARSIZE[0]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CSIZE[0]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARSIZE[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARSIZE[1]_i_1 
       (.I0(ARSIZE[1]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CSIZE[1]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARSIZE[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \ARSIZE[2]_i_1 
       (.I0(ARSIZE[2]),
        .I1(\ARLEN[7]_i_2_n_0 ),
        .I2(CSIZE[2]),
        .I3(\ARLEN[7]_i_3_n_0 ),
        .O(\ARSIZE[2]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARSIZE_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARSIZE[0]_i_1_n_0 ),
        .Q(ARSIZE[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARSIZE_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARSIZE[1]_i_1_n_0 ),
        .Q(ARSIZE[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \ARSIZE_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\ARSIZE[2]_i_1_n_0 ),
        .Q(ARSIZE[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFF082A0A2A)) 
    ARVALID_i_1
       (.I0(ARVALID),
        .I1(state_read[1]),
        .I2(state_read[2]),
        .I3(state_read[0]),
        .I4(ARREADY),
        .I5(\ARLEN[7]_i_3_n_0 ),
        .O(ARVALID_i_1_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    ARVALID_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(ARVALID_i_1_n_0),
        .Q(ARVALID));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[0]_i_1 
       (.I0(AWADDR[0]),
        .I1(CADDR[0]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[10]_i_1 
       (.I0(AWADDR[10]),
        .I1(CADDR[10]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[11]_i_1 
       (.I0(AWADDR[11]),
        .I1(CADDR[11]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[12]_i_1 
       (.I0(AWADDR[12]),
        .I1(CADDR[12]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[13]_i_1 
       (.I0(AWADDR[13]),
        .I1(CADDR[13]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[14]_i_1 
       (.I0(AWADDR[14]),
        .I1(CADDR[14]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[15]_i_1 
       (.I0(AWADDR[15]),
        .I1(CADDR[15]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[16]_i_1 
       (.I0(AWADDR[16]),
        .I1(CADDR[16]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[17]_i_1 
       (.I0(AWADDR[17]),
        .I1(CADDR[17]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[18]_i_1 
       (.I0(AWADDR[18]),
        .I1(CADDR[18]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[19]_i_1 
       (.I0(AWADDR[19]),
        .I1(CADDR[19]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[1]_i_1 
       (.I0(AWADDR[1]),
        .I1(CADDR[1]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[20]_i_1 
       (.I0(AWADDR[20]),
        .I1(CADDR[20]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[21]_i_1 
       (.I0(AWADDR[21]),
        .I1(CADDR[21]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[22]_i_1 
       (.I0(AWADDR[22]),
        .I1(CADDR[22]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[23]_i_1 
       (.I0(AWADDR[23]),
        .I1(CADDR[23]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[24]_i_1 
       (.I0(AWADDR[24]),
        .I1(CADDR[24]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[25]_i_1 
       (.I0(AWADDR[25]),
        .I1(CADDR[25]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[26]_i_1 
       (.I0(AWADDR[26]),
        .I1(CADDR[26]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[27]_i_1 
       (.I0(AWADDR[27]),
        .I1(CADDR[27]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[28]_i_1 
       (.I0(AWADDR[28]),
        .I1(CADDR[28]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[29]_i_1 
       (.I0(AWADDR[29]),
        .I1(CADDR[29]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[2]_i_1 
       (.I0(AWADDR[2]),
        .I1(CADDR[2]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[30]_i_1 
       (.I0(AWADDR[30]),
        .I1(CADDR[30]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[31]_i_1 
       (.I0(AWADDR[31]),
        .I1(CADDR[31]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[3]_i_1 
       (.I0(AWADDR[3]),
        .I1(CADDR[3]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[4]_i_1 
       (.I0(AWADDR[4]),
        .I1(CADDR[4]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[5]_i_1 
       (.I0(AWADDR[5]),
        .I1(CADDR[5]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[6]_i_1 
       (.I0(AWADDR[6]),
        .I1(CADDR[6]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[7]_i_1 
       (.I0(AWADDR[7]),
        .I1(CADDR[7]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[8]_i_1 
       (.I0(AWADDR[8]),
        .I1(CADDR[8]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWADDR[9]_i_1 
       (.I0(AWADDR[9]),
        .I1(CADDR[9]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWADDR[9]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[0]_i_1_n_0 ),
        .Q(AWADDR[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[10] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[10]_i_1_n_0 ),
        .Q(AWADDR[10]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[11] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[11]_i_1_n_0 ),
        .Q(AWADDR[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[12] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[12]_i_1_n_0 ),
        .Q(AWADDR[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[13] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[13]_i_1_n_0 ),
        .Q(AWADDR[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[14] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[14]_i_1_n_0 ),
        .Q(AWADDR[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[15] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[15]_i_1_n_0 ),
        .Q(AWADDR[15]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[16] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[16]_i_1_n_0 ),
        .Q(AWADDR[16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[17] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[17]_i_1_n_0 ),
        .Q(AWADDR[17]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[18] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[18]_i_1_n_0 ),
        .Q(AWADDR[18]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[19] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[19]_i_1_n_0 ),
        .Q(AWADDR[19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[1]_i_1_n_0 ),
        .Q(AWADDR[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[20] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[20]_i_1_n_0 ),
        .Q(AWADDR[20]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[21] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[21]_i_1_n_0 ),
        .Q(AWADDR[21]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[22] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[22]_i_1_n_0 ),
        .Q(AWADDR[22]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[23] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[23]_i_1_n_0 ),
        .Q(AWADDR[23]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[24] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[24]_i_1_n_0 ),
        .Q(AWADDR[24]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[25] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[25]_i_1_n_0 ),
        .Q(AWADDR[25]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[26] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[26]_i_1_n_0 ),
        .Q(AWADDR[26]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[27] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[27]_i_1_n_0 ),
        .Q(AWADDR[27]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[28] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[28]_i_1_n_0 ),
        .Q(AWADDR[28]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[29] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[29]_i_1_n_0 ),
        .Q(AWADDR[29]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[2]_i_1_n_0 ),
        .Q(AWADDR[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[30] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[30]_i_1_n_0 ),
        .Q(AWADDR[30]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[31] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[31]_i_1_n_0 ),
        .Q(AWADDR[31]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[3]_i_1_n_0 ),
        .Q(AWADDR[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[4] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[4]_i_1_n_0 ),
        .Q(AWADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[5] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[5]_i_1_n_0 ),
        .Q(AWADDR[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[6] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[6]_i_1_n_0 ),
        .Q(AWADDR[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[7] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[7]_i_1_n_0 ),
        .Q(AWADDR[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[8] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[8]_i_1_n_0 ),
        .Q(AWADDR[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWADDR_reg[9] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWADDR[9]_i_1_n_0 ),
        .Q(AWADDR[9]));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWBURST[0]_i_1 
       (.I0(AWBURST[0]),
        .I1(CBURST[0]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWBURST[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWBURST[1]_i_1 
       (.I0(AWBURST[1]),
        .I1(CBURST[1]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWBURST[1]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWBURST_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\AWBURST[0]_i_1_n_0 ),
        .Q(AWBURST[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWBURST_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\AWBURST[1]_i_1_n_0 ),
        .Q(AWBURST[1]));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWID[0]_i_1 
       (.I0(AWID[0]),
        .I1(u2f_fifo_wr_dat[36]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWID[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWID[1]_i_1 
       (.I0(AWID[1]),
        .I1(u2f_fifo_wr_dat[37]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWID[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWID[2]_i_1 
       (.I0(AWID[2]),
        .I1(u2f_fifo_wr_dat[38]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWID[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWID[3]_i_1 
       (.I0(AWID[3]),
        .I1(u2f_fifo_wr_dat[39]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWID[3]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWID_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWID[0]_i_1_n_0 ),
        .Q(AWID[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWID_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWID[1]_i_1_n_0 ),
        .Q(AWID[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWID_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWID[2]_i_1_n_0 ),
        .Q(AWID[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWID_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWID[3]_i_1_n_0 ),
        .Q(AWID[3]));
  LUT6 #(
    .INIT(64'h0000CCCCCCCCCCAC)) 
    \AWLEN[0]_i_1 
       (.I0(CLENG[0]),
        .I1(AWLEN[0]),
        .I2(write_go),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(state_write[1]),
        .O(\AWLEN[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000CCCCCCCCCCAC)) 
    \AWLEN[1]_i_1 
       (.I0(CLENG[1]),
        .I1(AWLEN[1]),
        .I2(write_go),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(state_write[1]),
        .O(\AWLEN[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000CCCCCCCCCCAC)) 
    \AWLEN[2]_i_1 
       (.I0(CLENG[2]),
        .I1(AWLEN[2]),
        .I2(write_go),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(state_write[1]),
        .O(\AWLEN[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000CCCCCCCCCCAC)) 
    \AWLEN[3]_i_1 
       (.I0(CLENG[3]),
        .I1(AWLEN[3]),
        .I2(write_go),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(state_write[1]),
        .O(\AWLEN[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000CCCCCCCCCCAC)) 
    \AWLEN[4]_i_1 
       (.I0(CLENG[4]),
        .I1(AWLEN[4]),
        .I2(write_go),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(state_write[1]),
        .O(\AWLEN[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000CCCCCCCCCCAC)) 
    \AWLEN[5]_i_1 
       (.I0(CLENG[5]),
        .I1(AWLEN[5]),
        .I2(write_go),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(state_write[1]),
        .O(\AWLEN[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000CCCCCCCCCCAC)) 
    \AWLEN[6]_i_1 
       (.I0(CLENG[6]),
        .I1(AWLEN[6]),
        .I2(write_go),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(state_write[1]),
        .O(\AWLEN[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000CCCCCCCCCCAC)) 
    \AWLEN[7]_i_1 
       (.I0(CLENG[7]),
        .I1(AWLEN[7]),
        .I2(write_go),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(state_write[1]),
        .O(\AWLEN[7]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWLEN_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWLEN[0]_i_1_n_0 ),
        .Q(AWLEN[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWLEN_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWLEN[1]_i_1_n_0 ),
        .Q(AWLEN[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWLEN_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWLEN[2]_i_1_n_0 ),
        .Q(AWLEN[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWLEN_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWLEN[3]_i_1_n_0 ),
        .Q(AWLEN[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWLEN_reg[4] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWLEN[4]_i_1_n_0 ),
        .Q(AWLEN[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWLEN_reg[5] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWLEN[5]_i_1_n_0 ),
        .Q(AWLEN[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWLEN_reg[6] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWLEN[6]_i_1_n_0 ),
        .Q(AWLEN[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWLEN_reg[7] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\AWLEN[7]_i_1_n_0 ),
        .Q(AWLEN[7]));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    AWLOCK_i_1
       (.I0(AWLOCK),
        .I1(CEXCL),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(AWLOCK_i_1_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    AWLOCK_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(AWLOCK_i_1_n_0),
        .Q(AWLOCK));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWSIZE[0]_i_1 
       (.I0(AWSIZE[0]),
        .I1(CSIZE[0]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWSIZE[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWSIZE[1]_i_1 
       (.I0(AWSIZE[1]),
        .I1(CSIZE[1]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWSIZE[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAACAAAA)) 
    \AWSIZE[2]_i_1 
       (.I0(AWSIZE[2]),
        .I1(CSIZE[2]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\AWSIZE[2]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWSIZE_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWSIZE[0]_i_1_n_0 ),
        .Q(AWSIZE[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWSIZE_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWSIZE[1]_i_1_n_0 ),
        .Q(AWSIZE[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \AWSIZE_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\AWSIZE[2]_i_1_n_0 ),
        .Q(AWSIZE[2]));
  LUT6 #(
    .INIT(64'h0000FF00FF005F44)) 
    AWVALID_i_1
       (.I0(state_write[0]),
        .I1(write_go),
        .I2(AWREADY),
        .I3(AWVALID),
        .I4(state_write[1]),
        .I5(state_write[2]),
        .O(AWVALID_i_1_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    AWVALID_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(AWVALID_i_1_n_0),
        .Q(AWVALID));
  LUT6 #(
    .INIT(64'h00F5FFFF00000300)) 
    BREADY_i_1
       (.I0(BVALID),
        .I1(BREADY_i_2_n_0),
        .I2(state_write[0]),
        .I3(state_write[1]),
        .I4(state_write[2]),
        .I5(BREADY),
        .O(BREADY_i_1_n_0));
  LUT3 #(
    .INIT(8'h7F)) 
    BREADY_i_2
       (.I0(u2f_ready),
        .I1(u2f_valid),
        .I2(u2f_fifo_wr_dat[40]),
        .O(BREADY_i_2_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    BREADY_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(BREADY_i_1_n_0),
        .Q(BREADY));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[0]_i_1 
       (.I0(cmd_data[0]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[0]_i_2_n_0 ),
        .O(\CADDR[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[0]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[0]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[0]),
        .I4(addrW[0]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[10]_i_1 
       (.I0(cmd_data[10]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[10]_i_2_n_0 ),
        .O(\CADDR[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[10]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[10]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[10]),
        .I4(addrW[10]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[11]_i_1 
       (.I0(cmd_data[11]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[11]_i_2_n_0 ),
        .O(\CADDR[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[11]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[11]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[11]),
        .I4(addrW[11]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[12]_i_1 
       (.I0(cmd_data[12]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[12]_i_2_n_0 ),
        .O(\CADDR[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[12]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[12]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[12]),
        .I4(addrW[12]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[13]_i_1 
       (.I0(cmd_data[13]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[13]_i_2_n_0 ),
        .O(\CADDR[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[13]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[13]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[13]),
        .I4(addrW[13]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[14]_i_1 
       (.I0(cmd_data[14]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[14]_i_2_n_0 ),
        .O(\CADDR[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[14]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[14]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[14]),
        .I4(addrW[14]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[15]_i_1 
       (.I0(cmd_data[15]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[15]_i_2_n_0 ),
        .O(\CADDR[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[15]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[15]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[15]),
        .I4(addrW[15]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[16]_i_1 
       (.I0(cmd_data[16]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[16]_i_2_n_0 ),
        .O(\CADDR[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[16]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[16]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[16]),
        .I4(addrW[16]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[17]_i_1 
       (.I0(cmd_data[17]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[17]_i_2_n_0 ),
        .O(\CADDR[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[17]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[17]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[17]),
        .I4(addrW[17]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[18]_i_1 
       (.I0(cmd_data[18]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[18]_i_2_n_0 ),
        .O(\CADDR[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[18]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[18]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[18]),
        .I4(addrW[18]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[19]_i_1 
       (.I0(cmd_data[19]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[19]_i_2_n_0 ),
        .O(\CADDR[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[19]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[19]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[19]),
        .I4(addrW[19]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[19]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[1]_i_1 
       (.I0(cmd_data[1]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[1]_i_2_n_0 ),
        .O(\CADDR[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[1]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[1]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[1]),
        .I4(addrW[1]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[20]_i_1 
       (.I0(cmd_data[20]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[20]_i_2_n_0 ),
        .O(\CADDR[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[20]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[20]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[20]),
        .I4(addrW[20]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[20]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[21]_i_1 
       (.I0(cmd_data[21]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[21]_i_2_n_0 ),
        .O(\CADDR[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[21]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[21]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[21]),
        .I4(addrW[21]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[21]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[22]_i_1 
       (.I0(cmd_data[22]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[22]_i_2_n_0 ),
        .O(\CADDR[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[22]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[22]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[22]),
        .I4(addrW[22]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[22]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[23]_i_1 
       (.I0(cmd_data[23]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[23]_i_2_n_0 ),
        .O(\CADDR[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[23]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[23]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[23]),
        .I4(addrW[23]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[23]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[24]_i_1 
       (.I0(cmd_data[24]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[24]_i_2_n_0 ),
        .O(\CADDR[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[24]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[24]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[24]),
        .I4(addrW[24]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[24]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[25]_i_1 
       (.I0(cmd_data[25]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[25]_i_2_n_0 ),
        .O(\CADDR[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[25]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[25]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[25]),
        .I4(addrW[25]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[25]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[26]_i_1 
       (.I0(cmd_data[26]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[26]_i_2_n_0 ),
        .O(\CADDR[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[26]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[26]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[26]),
        .I4(addrW[26]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[26]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[27]_i_1 
       (.I0(cmd_data[27]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[27]_i_2_n_0 ),
        .O(\CADDR[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[27]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[27]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[27]),
        .I4(addrW[27]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[27]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[28]_i_1 
       (.I0(cmd_data[28]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[28]_i_2_n_0 ),
        .O(\CADDR[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[28]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[28]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[28]),
        .I4(addrW[28]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[28]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[29]_i_1 
       (.I0(cmd_data[29]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[29]_i_2_n_0 ),
        .O(\CADDR[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[29]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[29]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[29]),
        .I4(addrW[29]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[29]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[2]_i_1 
       (.I0(cmd_data[2]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[2]_i_2_n_0 ),
        .O(\CADDR[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[2]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[2]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[2]),
        .I4(addrW[2]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[30]_i_1 
       (.I0(cmd_data[30]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[30]_i_2_n_0 ),
        .O(\CADDR[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[30]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[30]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[30]),
        .I4(addrW[30]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[30]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[31]_i_1 
       (.I0(cmd_data[31]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[31]_i_2_n_0 ),
        .O(\CADDR[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[31]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[31]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[31]),
        .I4(addrW[31]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h10131013FFFFCFCF)) 
    \CADDR[31]_i_3 
       (.I0(read_done),
        .I1(state_cmd[2]),
        .I2(state_cmd[0]),
        .I3(write_done),
        .I4(\CLENG_reg[11]_i_3_n_0 ),
        .I5(state_cmd[1]),
        .O(\CADDR[31]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[3]_i_1 
       (.I0(cmd_data[3]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[3]_i_2_n_0 ),
        .O(\CADDR[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[3]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[3]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[3]),
        .I4(addrW[3]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[4]_i_1 
       (.I0(cmd_data[4]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[4]_i_2_n_0 ),
        .O(\CADDR[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[4]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[4]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[4]),
        .I4(addrW[4]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[5]_i_1 
       (.I0(cmd_data[5]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[5]_i_2_n_0 ),
        .O(\CADDR[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[5]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[5]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[5]),
        .I4(addrW[5]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[6]_i_1 
       (.I0(cmd_data[6]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[6]_i_2_n_0 ),
        .O(\CADDR[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[6]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[6]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[6]),
        .I4(addrW[6]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[7]_i_1 
       (.I0(cmd_data[7]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[7]_i_2_n_0 ),
        .O(\CADDR[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[7]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[7]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[7]),
        .I4(addrW[7]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[8]_i_1 
       (.I0(cmd_data[8]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[8]_i_2_n_0 ),
        .O(\CADDR[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[8]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[8]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[8]),
        .I4(addrW[8]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \CADDR[9]_i_1 
       (.I0(cmd_data[9]),
        .I1(write_go_i_3_n_0),
        .I2(\CADDR[9]_i_2_n_0 ),
        .O(\CADDR[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \CADDR[9]_i_2 
       (.I0(\CADDR[31]_i_3_n_0 ),
        .I1(CADDR[9]),
        .I2(\CMD[17]_i_3_n_0 ),
        .I3(addrR[9]),
        .I4(addrW[9]),
        .I5(\CMD[16]_i_2_n_0 ),
        .O(\CADDR[9]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[0]_i_1_n_0 ),
        .Q(CADDR[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[10] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[10]_i_1_n_0 ),
        .Q(CADDR[10]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[11] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[11]_i_1_n_0 ),
        .Q(CADDR[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[12] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[12]_i_1_n_0 ),
        .Q(CADDR[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[13] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[13]_i_1_n_0 ),
        .Q(CADDR[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[14] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[14]_i_1_n_0 ),
        .Q(CADDR[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[15] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[15]_i_1_n_0 ),
        .Q(CADDR[15]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[16] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[16]_i_1_n_0 ),
        .Q(CADDR[16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[17] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[17]_i_1_n_0 ),
        .Q(CADDR[17]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[18] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[18]_i_1_n_0 ),
        .Q(CADDR[18]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[19] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[19]_i_1_n_0 ),
        .Q(CADDR[19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[1]_i_1_n_0 ),
        .Q(CADDR[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[20] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[20]_i_1_n_0 ),
        .Q(CADDR[20]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[21] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[21]_i_1_n_0 ),
        .Q(CADDR[21]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[22] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[22]_i_1_n_0 ),
        .Q(CADDR[22]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[23] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[23]_i_1_n_0 ),
        .Q(CADDR[23]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[24] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[24]_i_1_n_0 ),
        .Q(CADDR[24]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[25] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[25]_i_1_n_0 ),
        .Q(CADDR[25]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[26] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[26]_i_1_n_0 ),
        .Q(CADDR[26]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[27] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[27]_i_1_n_0 ),
        .Q(CADDR[27]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[28] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[28]_i_1_n_0 ),
        .Q(CADDR[28]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[29] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[29]_i_1_n_0 ),
        .Q(CADDR[29]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[2]_i_1_n_0 ),
        .Q(CADDR[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[30] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[30]_i_1_n_0 ),
        .Q(CADDR[30]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[31] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CADDR[31]_i_1_n_0 ),
        .Q(CADDR[31]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[3]_i_1_n_0 ),
        .Q(CADDR[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[4] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[4]_i_1_n_0 ),
        .Q(CADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[5] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[5]_i_1_n_0 ),
        .Q(CADDR[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[6] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[6]_i_1_n_0 ),
        .Q(CADDR[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[7] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[7]_i_1_n_0 ),
        .Q(CADDR[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[8] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[8]_i_1_n_0 ),
        .Q(CADDR[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CADDR_reg[9] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CADDR[9]_i_1_n_0 ),
        .Q(CADDR[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFE2E2EE22)) 
    \CLENG[0]_i_1 
       (.I0(CLENG_reg__0[0]),
        .I1(state_cmd[0]),
        .I2(CLENG[0]),
        .I3(CMD[0]),
        .I4(\CLENG_reg[11]_i_3_n_0 ),
        .I5(\CLENG[7]_i_3_n_0 ),
        .O(\CLENG[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFE2E2EE22)) 
    \CLENG[1]_i_1 
       (.I0(CLENG_reg__0[1]),
        .I1(state_cmd[0]),
        .I2(CLENG[1]),
        .I3(CMD[1]),
        .I4(\CLENG_reg[11]_i_3_n_0 ),
        .I5(\CLENG[7]_i_3_n_0 ),
        .O(\CLENG[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFE2E2EE22)) 
    \CLENG[2]_i_1 
       (.I0(CLENG_reg__0[2]),
        .I1(state_cmd[0]),
        .I2(CLENG[2]),
        .I3(CMD[2]),
        .I4(\CLENG_reg[11]_i_3_n_0 ),
        .I5(\CLENG[7]_i_3_n_0 ),
        .O(\CLENG[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFE2E2EE22)) 
    \CLENG[3]_i_1 
       (.I0(CLENG_reg__0[3]),
        .I1(state_cmd[0]),
        .I2(CLENG[3]),
        .I3(CMD[3]),
        .I4(\CLENG_reg[11]_i_3_n_0 ),
        .I5(\CLENG[7]_i_3_n_0 ),
        .O(\CLENG[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFE2E2EE22)) 
    \CLENG[4]_i_1 
       (.I0(CLENG_reg__0[4]),
        .I1(state_cmd[0]),
        .I2(CLENG[4]),
        .I3(CMD[4]),
        .I4(\CLENG_reg[11]_i_3_n_0 ),
        .I5(\CLENG[7]_i_3_n_0 ),
        .O(\CLENG[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFE2E2EE22)) 
    \CLENG[5]_i_1 
       (.I0(CLENG_reg__0[5]),
        .I1(state_cmd[0]),
        .I2(CLENG[5]),
        .I3(CMD[5]),
        .I4(\CLENG_reg[11]_i_3_n_0 ),
        .I5(\CLENG[7]_i_3_n_0 ),
        .O(\CLENG[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFE2E2EE22)) 
    \CLENG[6]_i_1 
       (.I0(CLENG_reg__0[6]),
        .I1(state_cmd[0]),
        .I2(CLENG[6]),
        .I3(CMD[6]),
        .I4(\CLENG_reg[11]_i_3_n_0 ),
        .I5(\CLENG[7]_i_3_n_0 ),
        .O(\CLENG[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h06)) 
    \CLENG[7]_i_1 
       (.I0(state_cmd[2]),
        .I1(state_cmd[0]),
        .I2(state_cmd[1]),
        .O(\CLENG[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFE2E2EE22)) 
    \CLENG[7]_i_2 
       (.I0(CLENG_reg__0[7]),
        .I1(state_cmd[0]),
        .I2(CLENG[7]),
        .I3(CMD[7]),
        .I4(\CLENG_reg[11]_i_3_n_0 ),
        .I5(\CLENG[7]_i_3_n_0 ),
        .O(\CLENG[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF00FFFEFF00)) 
    \CLENG[7]_i_3 
       (.I0(CMD[10]),
        .I1(CMD[9]),
        .I2(CMD[8]),
        .I3(\CLENG[7]_i_4_n_0 ),
        .I4(\CLENG[7]_i_5_n_0 ),
        .I5(CMD[11]),
        .O(\CLENG[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h0000FFFE)) 
    \CLENG[7]_i_4 
       (.I0(CLENG_reg__0[11]),
        .I1(CLENG_reg__0[9]),
        .I2(CLENG_reg__0[8]),
        .I3(CLENG_reg__0[10]),
        .I4(state_cmd[0]),
        .O(\CLENG[7]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \CLENG[7]_i_5 
       (.I0(state_cmd[0]),
        .I1(CEI),
        .I2(cmd_valid),
        .I3(cmd_ready),
        .O(\CLENG[7]_i_5_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg[0] 
       (.C(ACLK),
        .CE(\CLENG[7]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG[0]_i_1_n_0 ),
        .Q(CLENG[0]));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAA8AAA)) 
    \CLENG_reg[0]_i_1 
       (.I0(CLENG_reg__0[0]),
        .I1(CEI),
        .I2(cmd_valid),
        .I3(cmd_ready),
        .I4(state_cmd[1]),
        .I5(CMD[0]),
        .O(\CLENG_reg[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF444)) 
    \CLENG_reg[10]_i_1 
       (.I0(\CLENG_reg[10]_i_2_n_0 ),
        .I1(CMD[10]),
        .I2(\CLENG_reg[10]_i_3_n_0 ),
        .I3(CLENG_reg__0[10]),
        .I4(\CLENG_reg[10]_i_4_n_0 ),
        .O(\CLENG_reg[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFBF)) 
    \CLENG_reg[10]_i_2 
       (.I0(CEI),
        .I1(cmd_valid),
        .I2(cmd_ready),
        .I3(state_cmd[1]),
        .O(\CLENG_reg[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h47FF4700)) 
    \CLENG_reg[10]_i_3 
       (.I0(read_done),
        .I1(state_cmd[0]),
        .I2(write_done),
        .I3(state_cmd[1]),
        .I4(\CLENG_reg[11]_i_3_n_0 ),
        .O(\CLENG_reg[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFCFCA8A803000000)) 
    \CLENG_reg[10]_i_4 
       (.I0(state_cmd[1]),
        .I1(CLENG_reg__0[9]),
        .I2(CLENG_reg__0[8]),
        .I3(CLENG_reg__0[11]),
        .I4(\CLENG_reg[8]_i_2_n_0 ),
        .I5(CLENG_reg__0[10]),
        .O(\CLENG_reg[10]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \CLENG_reg[11]_i_1 
       (.I0(state_cmd[1]),
        .I1(state_cmd[0]),
        .I2(state_cmd[2]),
        .O(\CLENG_reg[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEFE0202FE0E0202)) 
    \CLENG_reg[11]_i_2 
       (.I0(CMD[11]),
        .I1(\CLENG_reg[11]_i_3_n_0 ),
        .I2(state_cmd[1]),
        .I3(\CLENG_reg[11]_i_4_n_0 ),
        .I4(CLENG_reg__0[11]),
        .I5(\CLENG_reg[11]_i_5_n_0 ),
        .O(\CLENG_reg[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF7)) 
    \CLENG_reg[11]_i_3 
       (.I0(cmd_ready),
        .I1(cmd_valid),
        .I2(CEI),
        .O(\CLENG_reg[11]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h47)) 
    \CLENG_reg[11]_i_4 
       (.I0(read_done),
        .I1(state_cmd[0]),
        .I2(write_done),
        .O(\CLENG_reg[11]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \CLENG_reg[11]_i_5 
       (.I0(CLENG_reg__0[9]),
        .I1(CLENG_reg__0[8]),
        .I2(CLENG_reg__0[10]),
        .O(\CLENG_reg[11]_i_5_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg[1] 
       (.C(ACLK),
        .CE(\CLENG[7]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG[1]_i_1_n_0 ),
        .Q(CLENG[1]));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAA8AAA)) 
    \CLENG_reg[1]_i_1 
       (.I0(CLENG_reg__0[1]),
        .I1(CEI),
        .I2(cmd_valid),
        .I3(cmd_ready),
        .I4(state_cmd[1]),
        .I5(CMD[1]),
        .O(\CLENG_reg[1]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg[2] 
       (.C(ACLK),
        .CE(\CLENG[7]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG[2]_i_1_n_0 ),
        .Q(CLENG[2]));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAA8AAA)) 
    \CLENG_reg[2]_i_1 
       (.I0(CLENG_reg__0[2]),
        .I1(CEI),
        .I2(cmd_valid),
        .I3(cmd_ready),
        .I4(state_cmd[1]),
        .I5(CMD[2]),
        .O(\CLENG_reg[2]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg[3] 
       (.C(ACLK),
        .CE(\CLENG[7]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG[3]_i_1_n_0 ),
        .Q(CLENG[3]));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAA8AAA)) 
    \CLENG_reg[3]_i_1 
       (.I0(CLENG_reg__0[3]),
        .I1(CEI),
        .I2(cmd_valid),
        .I3(cmd_ready),
        .I4(state_cmd[1]),
        .I5(CMD[3]),
        .O(\CLENG_reg[3]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg[4] 
       (.C(ACLK),
        .CE(\CLENG[7]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG[4]_i_1_n_0 ),
        .Q(CLENG[4]));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAA8AAA)) 
    \CLENG_reg[4]_i_1 
       (.I0(CLENG_reg__0[4]),
        .I1(CEI),
        .I2(cmd_valid),
        .I3(cmd_ready),
        .I4(state_cmd[1]),
        .I5(CMD[4]),
        .O(\CLENG_reg[4]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg[5] 
       (.C(ACLK),
        .CE(\CLENG[7]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG[5]_i_1_n_0 ),
        .Q(CLENG[5]));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAA8AAA)) 
    \CLENG_reg[5]_i_1 
       (.I0(CLENG_reg__0[5]),
        .I1(CEI),
        .I2(cmd_valid),
        .I3(cmd_ready),
        .I4(state_cmd[1]),
        .I5(CMD[5]),
        .O(\CLENG_reg[5]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg[6] 
       (.C(ACLK),
        .CE(\CLENG[7]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG[6]_i_1_n_0 ),
        .Q(CLENG[6]));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAA8AAA)) 
    \CLENG_reg[6]_i_1 
       (.I0(CLENG_reg__0[6]),
        .I1(CEI),
        .I2(cmd_valid),
        .I3(cmd_ready),
        .I4(state_cmd[1]),
        .I5(CMD[6]),
        .O(\CLENG_reg[6]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg[7] 
       (.C(ACLK),
        .CE(\CLENG[7]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG[7]_i_2_n_0 ),
        .Q(CLENG[7]));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAA8AAA)) 
    \CLENG_reg[7]_i_1 
       (.I0(CLENG_reg__0[7]),
        .I1(CEI),
        .I2(cmd_valid),
        .I3(cmd_ready),
        .I4(state_cmd[1]),
        .I5(CMD[7]),
        .O(\CLENG_reg[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF88F822F288F8)) 
    \CLENG_reg[8]_i_1 
       (.I0(\CLENG_reg[8]_i_2_n_0 ),
        .I1(\CLENG_reg[8]_i_3_n_0 ),
        .I2(CMD[8]),
        .I3(\CLENG_reg[10]_i_2_n_0 ),
        .I4(CLENG_reg__0[8]),
        .I5(\CLENG_reg[10]_i_3_n_0 ),
        .O(\CLENG_reg[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \CLENG_reg[8]_i_2 
       (.I0(state_cmd[1]),
        .I1(write_done),
        .I2(state_cmd[0]),
        .I3(read_done),
        .O(\CLENG_reg[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \CLENG_reg[8]_i_3 
       (.I0(CLENG_reg__0[10]),
        .I1(CLENG_reg__0[8]),
        .I2(CLENG_reg__0[9]),
        .I3(CLENG_reg__0[11]),
        .O(\CLENG_reg[8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF444)) 
    \CLENG_reg[9]_i_1 
       (.I0(\CLENG_reg[10]_i_2_n_0 ),
        .I1(CMD[9]),
        .I2(\CLENG_reg[10]_i_3_n_0 ),
        .I3(CLENG_reg__0[9]),
        .I4(\CLENG_reg[9]_i_2_n_0 ),
        .O(\CLENG_reg[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF00AA0000FC0000)) 
    \CLENG_reg[9]_i_2 
       (.I0(state_cmd[1]),
        .I1(CLENG_reg__0[11]),
        .I2(CLENG_reg__0[10]),
        .I3(CLENG_reg__0[8]),
        .I4(\CLENG_reg[8]_i_2_n_0 ),
        .I5(CLENG_reg__0[9]),
        .O(\CLENG_reg[9]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[0] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG_reg[0]_i_1_n_0 ),
        .Q(CLENG_reg__0[0]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[10] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CLENG_reg[10]_i_1_n_0 ),
        .Q(CLENG_reg__0[10]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[11] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CLENG_reg[11]_i_2_n_0 ),
        .Q(CLENG_reg__0[11]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[1] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG_reg[1]_i_1_n_0 ),
        .Q(CLENG_reg__0[1]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[2] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG_reg[2]_i_1_n_0 ),
        .Q(CLENG_reg__0[2]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[3] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG_reg[3]_i_1_n_0 ),
        .Q(CLENG_reg__0[3]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[4] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG_reg[4]_i_1_n_0 ),
        .Q(CLENG_reg__0[4]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[5] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG_reg[5]_i_1_n_0 ),
        .Q(CLENG_reg__0[5]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[6] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG_reg[6]_i_1_n_0 ),
        .Q(CLENG_reg__0[6]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[7] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(read_go_i_2_n_0),
        .D(\CLENG_reg[7]_i_1_n_0 ),
        .Q(CLENG_reg__0[7]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[8] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CLENG_reg[8]_i_1_n_0 ),
        .Q(CLENG_reg__0[8]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CLENG_reg_reg[9] 
       (.C(ACLK),
        .CE(\CLENG_reg[11]_i_1_n_0 ),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\CLENG_reg[9]_i_1_n_0 ),
        .Q(CLENG_reg__0[9]));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[0]_i_1 
       (.I0(CMD[0]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[0]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[10]_i_1 
       (.I0(CMD[10]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[10]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[11]_i_1 
       (.I0(CMD[11]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[11]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[12]_i_1 
       (.I0(CID[0]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[12]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[13]_i_1 
       (.I0(CID[1]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[13]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[14]_i_1 
       (.I0(CID[2]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[14]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[15]_i_1 
       (.I0(CID[3]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[15]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \CMD[16]_i_1 
       (.I0(\CMD[16]_i_2_n_0 ),
        .I1(\CLENG_reg[8]_i_3_n_0 ),
        .I2(\CMD[17]_i_4_n_0 ),
        .I3(CCACHE[0]),
        .I4(cmd_data[16]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \CMD[16]_i_2 
       (.I0(write_done),
        .I1(state_cmd[1]),
        .I2(state_cmd[2]),
        .I3(state_cmd[0]),
        .O(\CMD[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \CMD[17]_i_1 
       (.I0(\CMD[17]_i_3_n_0 ),
        .I1(\CLENG_reg[8]_i_3_n_0 ),
        .I2(\CMD[17]_i_4_n_0 ),
        .I3(CCACHE[1]),
        .I4(cmd_data[17]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[17]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \CMD[17]_i_2 
       (.I0(ARESETn),
        .O(\CMD[17]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \CMD[17]_i_3 
       (.I0(read_done),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .O(\CMD[17]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h5E)) 
    \CMD[17]_i_4 
       (.I0(state_cmd[1]),
        .I1(state_cmd[0]),
        .I2(state_cmd[2]),
        .O(\CMD[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[18]_i_1 
       (.I0(CCACHE[2]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[18]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[19]_i_1 
       (.I0(CCACHE[3]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[19]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[1]_i_1 
       (.I0(CMD[1]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[1]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[20]_i_1 
       (.I0(CPROT[0]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[20]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[21]_i_1 
       (.I0(CPROT[1]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[21]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[22]_i_1 
       (.I0(CPROT[2]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[22]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[23]_i_1 
       (.I0(CBURST[0]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[23]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[24]_i_1 
       (.I0(CBURST[1]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[24]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[25]_i_1 
       (.I0(CSIZE[0]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[25]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[26]_i_1 
       (.I0(CSIZE[1]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[26]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[27]_i_1 
       (.I0(CSIZE[2]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[27]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[28]_i_1 
       (.I0(CEXCL),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[28]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[29]_i_1 
       (.I0(CLOCK),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[29]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[2]_i_1 
       (.I0(CMD[2]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[2]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[30]_i_1 
       (.I0(CWRITE),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[30]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[31]_i_1 
       (.I0(CMD[31]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[31]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \CMD[31]_i_2 
       (.I0(\state_cmd[0]_i_6_n_0 ),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .O(\CMD[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[3]_i_1 
       (.I0(CMD[3]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[3]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[4]_i_1 
       (.I0(CMD[4]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[4]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[5]_i_1 
       (.I0(CMD[5]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[5]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[6]_i_1 
       (.I0(CMD[6]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[6]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[7]_i_1 
       (.I0(CMD[7]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[7]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[8]_i_1 
       (.I0(CMD[8]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[8]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF22A822A822A8)) 
    \CMD[9]_i_1 
       (.I0(CMD[9]),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(cmd_data[9]),
        .I5(\CMD[31]_i_2_n_0 ),
        .O(\CMD[9]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[0]_i_1_n_0 ),
        .Q(CMD[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[10] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[10]_i_1_n_0 ),
        .Q(CMD[10]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[11] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[11]_i_1_n_0 ),
        .Q(CMD[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[12] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[12]_i_1_n_0 ),
        .Q(CMD[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[13] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[13]_i_1_n_0 ),
        .Q(CMD[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[14] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[14]_i_1_n_0 ),
        .Q(CMD[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[15] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[15]_i_1_n_0 ),
        .Q(CMD[15]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[16] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\CMD[16]_i_1_n_0 ),
        .Q(CMD[16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[17] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\CMD[17]_i_1_n_0 ),
        .Q(CMD[17]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[18] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[18]_i_1_n_0 ),
        .Q(CMD[18]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[19] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[19]_i_1_n_0 ),
        .Q(CMD[19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[1]_i_1_n_0 ),
        .Q(CMD[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[20] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[20]_i_1_n_0 ),
        .Q(CMD[20]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[21] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[21]_i_1_n_0 ),
        .Q(CMD[21]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[22] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[22]_i_1_n_0 ),
        .Q(CMD[22]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[23] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[23]_i_1_n_0 ),
        .Q(CMD[23]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[24] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[24]_i_1_n_0 ),
        .Q(CMD[24]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[25] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[25]_i_1_n_0 ),
        .Q(CMD[25]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[26] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[26]_i_1_n_0 ),
        .Q(CMD[26]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[27] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[27]_i_1_n_0 ),
        .Q(CMD[27]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[28] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[28]_i_1_n_0 ),
        .Q(CMD[28]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[29] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[29]_i_1_n_0 ),
        .Q(CMD[29]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[2]_i_1_n_0 ),
        .Q(CMD[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[30] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[30]_i_1_n_0 ),
        .Q(CMD[30]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[31] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[31]_i_1_n_0 ),
        .Q(CMD[31]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[3]_i_1_n_0 ),
        .Q(CMD[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[4] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[4]_i_1_n_0 ),
        .Q(CMD[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[5] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[5]_i_1_n_0 ),
        .Q(CMD[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[6] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[6]_i_1_n_0 ),
        .Q(CMD[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[7] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[7]_i_1_n_0 ),
        .Q(CMD[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[8] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[8]_i_1_n_0 ),
        .Q(CMD[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \CMD_reg[9] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\CMD[9]_i_1_n_0 ),
        .Q(CMD[9]));
  GND GND
       (.G(\<const0> ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[0]_i_1 
       (.I0(GPOUT[0]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[0]),
        .O(\GPOUT[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[10]_i_1 
       (.I0(GPOUT[10]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[10]),
        .O(\GPOUT[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[11]_i_1 
       (.I0(GPOUT[11]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[11]),
        .O(\GPOUT[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[12]_i_1 
       (.I0(GPOUT[12]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CID[0]),
        .O(\GPOUT[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[13]_i_1 
       (.I0(GPOUT[13]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CID[1]),
        .O(\GPOUT[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[14]_i_1 
       (.I0(GPOUT[14]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CID[2]),
        .O(\GPOUT[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \GPOUT[15]_i_1 
       (.I0(state_cmd[0]),
        .I1(state_cmd[2]),
        .I2(state_cmd[1]),
        .O(\GPOUT[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[15]_i_2 
       (.I0(GPOUT[15]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CID[3]),
        .O(\GPOUT[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[1]_i_1 
       (.I0(GPOUT[1]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[1]),
        .O(\GPOUT[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[2]_i_1 
       (.I0(GPOUT[2]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[2]),
        .O(\GPOUT[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[3]_i_1 
       (.I0(GPOUT[3]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[3]),
        .O(\GPOUT[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[4]_i_1 
       (.I0(GPOUT[4]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[4]),
        .O(\GPOUT[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[5]_i_1 
       (.I0(GPOUT[5]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[5]),
        .O(\GPOUT[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[6]_i_1 
       (.I0(GPOUT[6]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[6]),
        .O(\GPOUT[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[7]_i_1 
       (.I0(GPOUT[7]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[7]),
        .O(\GPOUT[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[8]_i_1 
       (.I0(GPOUT[8]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[8]),
        .O(\GPOUT[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \GPOUT[9]_i_1 
       (.I0(GPOUT[9]),
        .I1(CWRITE),
        .I2(CEI),
        .I3(CMD[9]),
        .O(\GPOUT[9]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[0] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[0]_i_1_n_0 ),
        .Q(GPOUT[0]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[10] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[10]_i_1_n_0 ),
        .Q(GPOUT[10]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[11] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[11]_i_1_n_0 ),
        .Q(GPOUT[11]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[12] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[12]_i_1_n_0 ),
        .Q(GPOUT[12]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[13] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[13]_i_1_n_0 ),
        .Q(GPOUT[13]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[14] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[14]_i_1_n_0 ),
        .Q(GPOUT[14]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[15] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[15]_i_2_n_0 ),
        .Q(GPOUT[15]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[1] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[1]_i_1_n_0 ),
        .Q(GPOUT[1]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[2] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[2]_i_1_n_0 ),
        .Q(GPOUT[2]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[3] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[3]_i_1_n_0 ),
        .Q(GPOUT[3]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[4] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[4]_i_1_n_0 ),
        .Q(GPOUT[4]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[5] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[5]_i_1_n_0 ),
        .Q(GPOUT[5]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[6] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[6]_i_1_n_0 ),
        .Q(GPOUT[6]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[7] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[7]_i_1_n_0 ),
        .Q(GPOUT[7]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[8] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[8]_i_1_n_0 ),
        .Q(GPOUT[8]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \GPOUT_reg[9] 
       (.C(ACLK),
        .CE(\GPOUT[15]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\GPOUT[9]_i_1_n_0 ),
        .Q(GPOUT[9]));
  LUT4 #(
    .INIT(16'h1000)) 
    RREADY_inferred_i_1
       (.I0(state_read[0]),
        .I1(state_read[2]),
        .I2(state_read[1]),
        .I3(f2u_fifo_wr_rdy),
        .O(RREADY));
  LUT2 #(
    .INIT(4'h8)) 
    WLAST_inferred_i_1
       (.I0(u2f_fifo_rd_dat[40]),
        .I1(WVALID),
        .O(WLAST));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[0]_i_1 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[0]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[2]_i_3_n_15 ),
        .I4(addrR[0]),
        .I5(\addrR[31]_i_2_n_0 ),
        .O(\addrR[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[10]_i_1 
       (.I0(addrR[10]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[10]_i_2_n_0 ),
        .O(\addrR[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[10]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[10]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[15]_i_3_n_13 ),
        .I4(\addrR_reg[10]_i_3_n_8 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[11]_i_1 
       (.I0(addrR[11]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[11]_i_2_n_0 ),
        .O(\addrR[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[11]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[11]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[15]_i_3_n_12 ),
        .I4(\addrR_reg[18]_i_3_n_15 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[12]_i_1 
       (.I0(addrR[12]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[12]_i_2_n_0 ),
        .O(\addrR[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[12]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[12]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[15]_i_3_n_11 ),
        .I4(\addrR_reg[18]_i_3_n_14 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[13]_i_1 
       (.I0(addrR[13]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[13]_i_2_n_0 ),
        .O(\addrR[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[13]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[13]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[15]_i_3_n_10 ),
        .I4(\addrR_reg[18]_i_3_n_13 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[14]_i_1 
       (.I0(addrR[14]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[14]_i_2_n_0 ),
        .O(\addrR[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[14]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[14]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[15]_i_3_n_9 ),
        .I4(\addrR_reg[18]_i_3_n_12 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[15]_i_1 
       (.I0(addrR[15]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[15]_i_2_n_0 ),
        .O(\addrR[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[15]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[15]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[15]_i_3_n_8 ),
        .I4(\addrR_reg[18]_i_3_n_11 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[16]_i_1 
       (.I0(addrR[16]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[16]_i_2_n_0 ),
        .O(\addrR[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[16]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[16]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[23]_i_3_n_15 ),
        .I4(\addrR_reg[18]_i_3_n_10 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[17]_i_1 
       (.I0(addrR[17]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[17]_i_2_n_0 ),
        .O(\addrR[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[17]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[17]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[23]_i_3_n_14 ),
        .I4(\addrR_reg[18]_i_3_n_9 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[18]_i_1 
       (.I0(addrR[18]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[18]_i_2_n_0 ),
        .O(\addrR[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[18]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[18]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[23]_i_3_n_13 ),
        .I4(\addrR_reg[18]_i_3_n_8 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[19]_i_1 
       (.I0(addrR[19]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[19]_i_2_n_0 ),
        .O(\addrR[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[19]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[19]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[23]_i_3_n_12 ),
        .I4(\addrR_reg[26]_i_3_n_15 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[1]_i_1 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[1]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[2]_i_3_n_14 ),
        .I4(addrR[1]),
        .I5(\addrR[31]_i_2_n_0 ),
        .O(\addrR[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[20]_i_1 
       (.I0(addrR[20]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[20]_i_2_n_0 ),
        .O(\addrR[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[20]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[20]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[23]_i_3_n_11 ),
        .I4(\addrR_reg[26]_i_3_n_14 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[20]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[21]_i_1 
       (.I0(addrR[21]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[21]_i_2_n_0 ),
        .O(\addrR[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[21]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[21]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[23]_i_3_n_10 ),
        .I4(\addrR_reg[26]_i_3_n_13 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[21]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[22]_i_1 
       (.I0(addrR[22]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[22]_i_2_n_0 ),
        .O(\addrR[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[22]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[22]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[23]_i_3_n_9 ),
        .I4(\addrR_reg[26]_i_3_n_12 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[22]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[23]_i_1 
       (.I0(addrR[23]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[23]_i_2_n_0 ),
        .O(\addrR[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[23]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[23]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[23]_i_3_n_8 ),
        .I4(\addrR_reg[26]_i_3_n_11 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[23]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[24]_i_1 
       (.I0(addrR[24]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[24]_i_2_n_0 ),
        .O(\addrR[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[24]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[24]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[31]_i_5_n_15 ),
        .I4(\addrR_reg[26]_i_3_n_10 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[24]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[25]_i_1 
       (.I0(addrR[25]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[25]_i_2_n_0 ),
        .O(\addrR[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[25]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[25]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[31]_i_5_n_14 ),
        .I4(\addrR_reg[26]_i_3_n_9 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[25]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[26]_i_1 
       (.I0(addrR[26]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[26]_i_2_n_0 ),
        .O(\addrR[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[26]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[26]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[31]_i_5_n_13 ),
        .I4(\addrR_reg[26]_i_3_n_8 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[26]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[27]_i_1 
       (.I0(addrR[27]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[27]_i_2_n_0 ),
        .O(\addrR[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[27]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[27]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[31]_i_5_n_12 ),
        .I4(\addrR_reg[31]_i_6_n_15 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[27]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[28]_i_1 
       (.I0(addrR[28]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[28]_i_2_n_0 ),
        .O(\addrR[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[28]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[28]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[31]_i_5_n_11 ),
        .I4(\addrR_reg[31]_i_6_n_14 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[28]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[29]_i_1 
       (.I0(addrR[29]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[29]_i_2_n_0 ),
        .O(\addrR[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[29]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[29]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[31]_i_5_n_10 ),
        .I4(\addrR_reg[31]_i_6_n_13 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFACACAC)) 
    \addrR[2]_i_1 
       (.I0(\addrR[31]_i_2_n_0 ),
        .I1(\addrR[2]_i_2_n_0 ),
        .I2(addrR[2]),
        .I3(\addrR_reg[2]_i_3_n_13 ),
        .I4(\addrR[2]_i_4_n_0 ),
        .I5(\addrR[2]_i_5_n_0 ),
        .O(\addrR[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hAA9A)) 
    \addrR[2]_i_10 
       (.I0(addrR[4]),
        .I1(CSIZE[0]),
        .I2(CSIZE[2]),
        .I3(CSIZE[1]),
        .O(\addrR[2]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hAA6A)) 
    \addrR[2]_i_11 
       (.I0(addrR[3]),
        .I1(CSIZE[0]),
        .I2(CSIZE[1]),
        .I3(CSIZE[2]),
        .O(\addrR[2]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hAA9A)) 
    \addrR[2]_i_12 
       (.I0(addrR[2]),
        .I1(CSIZE[0]),
        .I2(CSIZE[1]),
        .I3(CSIZE[2]),
        .O(\addrR[2]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hA9AA)) 
    \addrR[2]_i_13 
       (.I0(addrR[1]),
        .I1(CSIZE[1]),
        .I2(CSIZE[2]),
        .I3(CSIZE[0]),
        .O(\addrR[2]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hAAA9)) 
    \addrR[2]_i_14 
       (.I0(addrR[0]),
        .I1(CSIZE[0]),
        .I2(CSIZE[1]),
        .I3(CSIZE[2]),
        .O(\addrR[2]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \addrR[2]_i_2 
       (.I0(RREADY),
        .I1(RVALID),
        .I2(CBURST[0]),
        .I3(CBURST[1]),
        .I4(\addrR[2]_i_6_n_0 ),
        .I5(\addrW[2]_i_7_n_0 ),
        .O(\addrR[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000800000)) 
    \addrR[2]_i_4 
       (.I0(RREADY),
        .I1(RVALID),
        .I2(CBURST[0]),
        .I3(CBURST[1]),
        .I4(\addrR[2]_i_6_n_0 ),
        .I5(\addrW[2]_i_7_n_0 ),
        .O(\addrR[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \addrR[2]_i_5 
       (.I0(read_go),
        .I1(CEI),
        .I2(state_read[0]),
        .I3(state_read[1]),
        .I4(state_read[2]),
        .I5(CADDR[2]),
        .O(\addrR[2]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \addrR[2]_i_6 
       (.I0(state_read[1]),
        .I1(state_read[2]),
        .I2(state_read[0]),
        .O(\addrR[2]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \addrR[2]_i_7 
       (.I0(addrR[7]),
        .I1(CSIZE[0]),
        .I2(CSIZE[1]),
        .I3(CSIZE[2]),
        .O(\addrR[2]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h9AAA)) 
    \addrR[2]_i_8 
       (.I0(addrR[6]),
        .I1(CSIZE[0]),
        .I2(CSIZE[1]),
        .I3(CSIZE[2]),
        .O(\addrR[2]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hAA6A)) 
    \addrR[2]_i_9 
       (.I0(addrR[5]),
        .I1(CSIZE[0]),
        .I2(CSIZE[2]),
        .I3(CSIZE[1]),
        .O(\addrR[2]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[30]_i_1 
       (.I0(addrR[30]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[30]_i_2_n_0 ),
        .O(\addrR[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[30]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[30]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[31]_i_5_n_9 ),
        .I4(\addrR_reg[31]_i_6_n_12 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[30]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[31]_i_1 
       (.I0(addrR[31]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[31]_i_3_n_0 ),
        .O(\addrR[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0E0E0E0E3F3F3C3F)) 
    \addrR[31]_i_2 
       (.I0(\addrR[31]_i_4_n_0 ),
        .I1(state_read[0]),
        .I2(state_read[2]),
        .I3(read_go),
        .I4(CEI),
        .I5(state_read[1]),
        .O(\addrR[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[31]_i_3 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[31]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[31]_i_5_n_8 ),
        .I4(\addrR_reg[31]_i_6_n_11 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[31]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \addrR[31]_i_4 
       (.I0(RREADY),
        .I1(RVALID),
        .I2(CBURST[0]),
        .I3(CBURST[1]),
        .O(\addrR[31]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[3]_i_1 
       (.I0(addrR[3]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[3]_i_2_n_0 ),
        .O(\addrR[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[3]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[3]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[2]_i_3_n_12 ),
        .I4(\addrR_reg[10]_i_3_n_15 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[4]_i_1 
       (.I0(addrR[4]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[4]_i_2_n_0 ),
        .O(\addrR[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[4]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[4]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[2]_i_3_n_11 ),
        .I4(\addrR_reg[10]_i_3_n_14 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[5]_i_1 
       (.I0(addrR[5]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[5]_i_2_n_0 ),
        .O(\addrR[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[5]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[5]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[2]_i_3_n_10 ),
        .I4(\addrR_reg[10]_i_3_n_13 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[6]_i_1 
       (.I0(addrR[6]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[6]_i_2_n_0 ),
        .O(\addrR[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[6]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[6]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[2]_i_3_n_9 ),
        .I4(\addrR_reg[10]_i_3_n_12 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[7]_i_1 
       (.I0(addrR[7]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[7]_i_2_n_0 ),
        .O(\addrR[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[7]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[7]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[2]_i_3_n_8 ),
        .I4(\addrR_reg[10]_i_3_n_11 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[8]_i_1 
       (.I0(addrR[8]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[8]_i_2_n_0 ),
        .O(\addrR[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[8]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[8]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[15]_i_3_n_15 ),
        .I4(\addrR_reg[10]_i_3_n_10 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrR[9]_i_1 
       (.I0(addrR[9]),
        .I1(\addrR[31]_i_2_n_0 ),
        .I2(\addrR[9]_i_2_n_0 ),
        .O(\addrR[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrR[9]_i_2 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(CADDR[9]),
        .I2(\addrR[2]_i_4_n_0 ),
        .I3(\addrR_reg[15]_i_3_n_14 ),
        .I4(\addrR_reg[10]_i_3_n_9 ),
        .I5(\addrR[2]_i_2_n_0 ),
        .O(\addrR[9]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[0]_i_1_n_0 ),
        .Q(addrR[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[10] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[10]_i_1_n_0 ),
        .Q(addrR[10]));
  CARRY8 \addrR_reg[10]_i_3 
       (.CI(addrR[2]),
        .CI_TOP(1'b0),
        .CO({\addrR_reg[10]_i_3_n_0 ,\addrR_reg[10]_i_3_n_1 ,\addrR_reg[10]_i_3_n_2 ,\addrR_reg[10]_i_3_n_3 ,\addrR_reg[10]_i_3_n_4 ,\addrR_reg[10]_i_3_n_5 ,\addrR_reg[10]_i_3_n_6 ,\addrR_reg[10]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrR_reg[10]_i_3_n_8 ,\addrR_reg[10]_i_3_n_9 ,\addrR_reg[10]_i_3_n_10 ,\addrR_reg[10]_i_3_n_11 ,\addrR_reg[10]_i_3_n_12 ,\addrR_reg[10]_i_3_n_13 ,\addrR_reg[10]_i_3_n_14 ,\addrR_reg[10]_i_3_n_15 }),
        .S(addrR[10:3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[11] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[11]_i_1_n_0 ),
        .Q(addrR[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[12] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[12]_i_1_n_0 ),
        .Q(addrR[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[13] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[13]_i_1_n_0 ),
        .Q(addrR[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[14] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[14]_i_1_n_0 ),
        .Q(addrR[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[15] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[15]_i_1_n_0 ),
        .Q(addrR[15]));
  CARRY8 \addrR_reg[15]_i_3 
       (.CI(\addrR_reg[2]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\addrR_reg[15]_i_3_n_0 ,\addrR_reg[15]_i_3_n_1 ,\addrR_reg[15]_i_3_n_2 ,\addrR_reg[15]_i_3_n_3 ,\addrR_reg[15]_i_3_n_4 ,\addrR_reg[15]_i_3_n_5 ,\addrR_reg[15]_i_3_n_6 ,\addrR_reg[15]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrR_reg[15]_i_3_n_8 ,\addrR_reg[15]_i_3_n_9 ,\addrR_reg[15]_i_3_n_10 ,\addrR_reg[15]_i_3_n_11 ,\addrR_reg[15]_i_3_n_12 ,\addrR_reg[15]_i_3_n_13 ,\addrR_reg[15]_i_3_n_14 ,\addrR_reg[15]_i_3_n_15 }),
        .S(addrR[15:8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[16] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[16]_i_1_n_0 ),
        .Q(addrR[16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[17] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[17]_i_1_n_0 ),
        .Q(addrR[17]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[18] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[18]_i_1_n_0 ),
        .Q(addrR[18]));
  CARRY8 \addrR_reg[18]_i_3 
       (.CI(\addrR_reg[10]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\addrR_reg[18]_i_3_n_0 ,\addrR_reg[18]_i_3_n_1 ,\addrR_reg[18]_i_3_n_2 ,\addrR_reg[18]_i_3_n_3 ,\addrR_reg[18]_i_3_n_4 ,\addrR_reg[18]_i_3_n_5 ,\addrR_reg[18]_i_3_n_6 ,\addrR_reg[18]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrR_reg[18]_i_3_n_8 ,\addrR_reg[18]_i_3_n_9 ,\addrR_reg[18]_i_3_n_10 ,\addrR_reg[18]_i_3_n_11 ,\addrR_reg[18]_i_3_n_12 ,\addrR_reg[18]_i_3_n_13 ,\addrR_reg[18]_i_3_n_14 ,\addrR_reg[18]_i_3_n_15 }),
        .S(addrR[18:11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[19] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[19]_i_1_n_0 ),
        .Q(addrR[19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[1]_i_1_n_0 ),
        .Q(addrR[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[20] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[20]_i_1_n_0 ),
        .Q(addrR[20]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[21] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[21]_i_1_n_0 ),
        .Q(addrR[21]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[22] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[22]_i_1_n_0 ),
        .Q(addrR[22]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[23] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[23]_i_1_n_0 ),
        .Q(addrR[23]));
  CARRY8 \addrR_reg[23]_i_3 
       (.CI(\addrR_reg[15]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\addrR_reg[23]_i_3_n_0 ,\addrR_reg[23]_i_3_n_1 ,\addrR_reg[23]_i_3_n_2 ,\addrR_reg[23]_i_3_n_3 ,\addrR_reg[23]_i_3_n_4 ,\addrR_reg[23]_i_3_n_5 ,\addrR_reg[23]_i_3_n_6 ,\addrR_reg[23]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrR_reg[23]_i_3_n_8 ,\addrR_reg[23]_i_3_n_9 ,\addrR_reg[23]_i_3_n_10 ,\addrR_reg[23]_i_3_n_11 ,\addrR_reg[23]_i_3_n_12 ,\addrR_reg[23]_i_3_n_13 ,\addrR_reg[23]_i_3_n_14 ,\addrR_reg[23]_i_3_n_15 }),
        .S(addrR[23:16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[24] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[24]_i_1_n_0 ),
        .Q(addrR[24]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[25] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[25]_i_1_n_0 ),
        .Q(addrR[25]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[26] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[26]_i_1_n_0 ),
        .Q(addrR[26]));
  CARRY8 \addrR_reg[26]_i_3 
       (.CI(\addrR_reg[18]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\addrR_reg[26]_i_3_n_0 ,\addrR_reg[26]_i_3_n_1 ,\addrR_reg[26]_i_3_n_2 ,\addrR_reg[26]_i_3_n_3 ,\addrR_reg[26]_i_3_n_4 ,\addrR_reg[26]_i_3_n_5 ,\addrR_reg[26]_i_3_n_6 ,\addrR_reg[26]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrR_reg[26]_i_3_n_8 ,\addrR_reg[26]_i_3_n_9 ,\addrR_reg[26]_i_3_n_10 ,\addrR_reg[26]_i_3_n_11 ,\addrR_reg[26]_i_3_n_12 ,\addrR_reg[26]_i_3_n_13 ,\addrR_reg[26]_i_3_n_14 ,\addrR_reg[26]_i_3_n_15 }),
        .S(addrR[26:19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[27] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[27]_i_1_n_0 ),
        .Q(addrR[27]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[28] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[28]_i_1_n_0 ),
        .Q(addrR[28]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[29] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[29]_i_1_n_0 ),
        .Q(addrR[29]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[2]_i_1_n_0 ),
        .Q(addrR[2]));
  CARRY8 \addrR_reg[2]_i_3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\addrR_reg[2]_i_3_n_0 ,\addrR_reg[2]_i_3_n_1 ,\addrR_reg[2]_i_3_n_2 ,\addrR_reg[2]_i_3_n_3 ,\addrR_reg[2]_i_3_n_4 ,\addrR_reg[2]_i_3_n_5 ,\addrR_reg[2]_i_3_n_6 ,\addrR_reg[2]_i_3_n_7 }),
        .DI(addrR[7:0]),
        .O({\addrR_reg[2]_i_3_n_8 ,\addrR_reg[2]_i_3_n_9 ,\addrR_reg[2]_i_3_n_10 ,\addrR_reg[2]_i_3_n_11 ,\addrR_reg[2]_i_3_n_12 ,\addrR_reg[2]_i_3_n_13 ,\addrR_reg[2]_i_3_n_14 ,\addrR_reg[2]_i_3_n_15 }),
        .S({\addrR[2]_i_7_n_0 ,\addrR[2]_i_8_n_0 ,\addrR[2]_i_9_n_0 ,\addrR[2]_i_10_n_0 ,\addrR[2]_i_11_n_0 ,\addrR[2]_i_12_n_0 ,\addrR[2]_i_13_n_0 ,\addrR[2]_i_14_n_0 }));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[30] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[30]_i_1_n_0 ),
        .Q(addrR[30]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[31] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrR[31]_i_1_n_0 ),
        .Q(addrR[31]));
  CARRY8 \addrR_reg[31]_i_5 
       (.CI(\addrR_reg[23]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_addrR_reg[31]_i_5_CO_UNCONNECTED [7],\addrR_reg[31]_i_5_n_1 ,\addrR_reg[31]_i_5_n_2 ,\addrR_reg[31]_i_5_n_3 ,\addrR_reg[31]_i_5_n_4 ,\addrR_reg[31]_i_5_n_5 ,\addrR_reg[31]_i_5_n_6 ,\addrR_reg[31]_i_5_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrR_reg[31]_i_5_n_8 ,\addrR_reg[31]_i_5_n_9 ,\addrR_reg[31]_i_5_n_10 ,\addrR_reg[31]_i_5_n_11 ,\addrR_reg[31]_i_5_n_12 ,\addrR_reg[31]_i_5_n_13 ,\addrR_reg[31]_i_5_n_14 ,\addrR_reg[31]_i_5_n_15 }),
        .S(addrR[31:24]));
  CARRY8 \addrR_reg[31]_i_6 
       (.CI(\addrR_reg[26]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_addrR_reg[31]_i_6_CO_UNCONNECTED [7:4],\addrR_reg[31]_i_6_n_4 ,\addrR_reg[31]_i_6_n_5 ,\addrR_reg[31]_i_6_n_6 ,\addrR_reg[31]_i_6_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_addrR_reg[31]_i_6_O_UNCONNECTED [7:5],\addrR_reg[31]_i_6_n_11 ,\addrR_reg[31]_i_6_n_12 ,\addrR_reg[31]_i_6_n_13 ,\addrR_reg[31]_i_6_n_14 ,\addrR_reg[31]_i_6_n_15 }),
        .S({1'b0,1'b0,1'b0,addrR[31:27]}));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[3]_i_1_n_0 ),
        .Q(addrR[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[4] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[4]_i_1_n_0 ),
        .Q(addrR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[5] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[5]_i_1_n_0 ),
        .Q(addrR[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[6] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[6]_i_1_n_0 ),
        .Q(addrR[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[7] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[7]_i_1_n_0 ),
        .Q(addrR[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[8] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[8]_i_1_n_0 ),
        .Q(addrR[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrR_reg[9] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\addrR[9]_i_1_n_0 ),
        .Q(addrR[9]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[0]_i_1 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[2]_i_4_n_15 ),
        .I2(\addrW[1]_i_2_n_0 ),
        .I3(CADDR[0]),
        .I4(addrW[0]),
        .I5(\addrW[31]_i_2_n_0 ),
        .O(\addrW[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[10]_i_1 
       (.I0(addrW[10]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[10]_i_2_n_0 ),
        .O(\addrW[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[10]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[15]_i_3_n_13 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[10]_i_3_n_8 ),
        .I4(CADDR[10]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[11]_i_1 
       (.I0(addrW[11]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[11]_i_2_n_0 ),
        .O(\addrW[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[11]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[15]_i_3_n_12 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[18]_i_3_n_15 ),
        .I4(CADDR[11]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[12]_i_1 
       (.I0(addrW[12]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[12]_i_2_n_0 ),
        .O(\addrW[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[12]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[15]_i_3_n_11 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[18]_i_3_n_14 ),
        .I4(CADDR[12]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[13]_i_1 
       (.I0(addrW[13]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[13]_i_2_n_0 ),
        .O(\addrW[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[13]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[15]_i_3_n_10 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[18]_i_3_n_13 ),
        .I4(CADDR[13]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[14]_i_1 
       (.I0(addrW[14]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[14]_i_2_n_0 ),
        .O(\addrW[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[14]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[15]_i_3_n_9 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[18]_i_3_n_12 ),
        .I4(CADDR[14]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[15]_i_1 
       (.I0(addrW[15]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[15]_i_2_n_0 ),
        .O(\addrW[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[15]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[15]_i_3_n_8 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[18]_i_3_n_11 ),
        .I4(CADDR[15]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[16]_i_1 
       (.I0(addrW[16]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[16]_i_2_n_0 ),
        .O(\addrW[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[16]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[23]_i_3_n_15 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[18]_i_3_n_10 ),
        .I4(CADDR[16]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[17]_i_1 
       (.I0(addrW[17]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[17]_i_2_n_0 ),
        .O(\addrW[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[17]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[23]_i_3_n_14 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[18]_i_3_n_9 ),
        .I4(CADDR[17]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[18]_i_1 
       (.I0(addrW[18]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[18]_i_2_n_0 ),
        .O(\addrW[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[18]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[23]_i_3_n_13 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[18]_i_3_n_8 ),
        .I4(CADDR[18]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[19]_i_1 
       (.I0(addrW[19]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[19]_i_2_n_0 ),
        .O(\addrW[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[19]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[23]_i_3_n_12 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[26]_i_3_n_15 ),
        .I4(CADDR[19]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[1]_i_1 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[2]_i_4_n_14 ),
        .I2(\addrW[1]_i_2_n_0 ),
        .I3(CADDR[1]),
        .I4(addrW[1]),
        .I5(\addrW[31]_i_2_n_0 ),
        .O(\addrW[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0010)) 
    \addrW[1]_i_2 
       (.I0(state_write[0]),
        .I1(state_write[2]),
        .I2(write_go),
        .I3(state_write[1]),
        .O(\addrW[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[20]_i_1 
       (.I0(addrW[20]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[20]_i_2_n_0 ),
        .O(\addrW[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[20]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[23]_i_3_n_11 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[26]_i_3_n_14 ),
        .I4(CADDR[20]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[20]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[21]_i_1 
       (.I0(addrW[21]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[21]_i_2_n_0 ),
        .O(\addrW[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[21]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[23]_i_3_n_10 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[26]_i_3_n_13 ),
        .I4(CADDR[21]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[21]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[22]_i_1 
       (.I0(addrW[22]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[22]_i_2_n_0 ),
        .O(\addrW[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[22]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[23]_i_3_n_9 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[26]_i_3_n_12 ),
        .I4(CADDR[22]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[22]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[23]_i_1 
       (.I0(addrW[23]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[23]_i_2_n_0 ),
        .O(\addrW[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[23]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[23]_i_3_n_8 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[26]_i_3_n_11 ),
        .I4(CADDR[23]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[23]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[24]_i_1 
       (.I0(addrW[24]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[24]_i_2_n_0 ),
        .O(\addrW[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[24]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[31]_i_5_n_15 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[26]_i_3_n_10 ),
        .I4(CADDR[24]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[24]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[25]_i_1 
       (.I0(addrW[25]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[25]_i_2_n_0 ),
        .O(\addrW[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[25]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[31]_i_5_n_14 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[26]_i_3_n_9 ),
        .I4(CADDR[25]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[25]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[26]_i_1 
       (.I0(addrW[26]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[26]_i_2_n_0 ),
        .O(\addrW[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[26]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[31]_i_5_n_13 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[26]_i_3_n_8 ),
        .I4(CADDR[26]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[26]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[27]_i_1 
       (.I0(addrW[27]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[27]_i_2_n_0 ),
        .O(\addrW[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[27]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[31]_i_5_n_12 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[31]_i_6_n_15 ),
        .I4(CADDR[27]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[27]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[28]_i_1 
       (.I0(addrW[28]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[28]_i_2_n_0 ),
        .O(\addrW[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[28]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[31]_i_5_n_11 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[31]_i_6_n_14 ),
        .I4(CADDR[28]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[28]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[29]_i_1 
       (.I0(addrW[29]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[29]_i_2_n_0 ),
        .O(\addrW[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[29]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[31]_i_5_n_10 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[31]_i_6_n_13 ),
        .I4(CADDR[29]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEFECEFECEFEC)) 
    \addrW[2]_i_1 
       (.I0(\addrW[31]_i_2_n_0 ),
        .I1(\addrW[2]_i_2_n_0 ),
        .I2(addrW[2]),
        .I3(\addrW[2]_i_3_n_0 ),
        .I4(\addrW_reg[2]_i_4_n_13 ),
        .I5(\addrW[2]_i_5_n_0 ),
        .O(\addrW[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hAA6A)) 
    \addrW[2]_i_10 
       (.I0(addrW[5]),
        .I1(CSIZE[0]),
        .I2(CSIZE[2]),
        .I3(CSIZE[1]),
        .O(\addrW[2]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hAA9A)) 
    \addrW[2]_i_11 
       (.I0(addrW[4]),
        .I1(CSIZE[0]),
        .I2(CSIZE[2]),
        .I3(CSIZE[1]),
        .O(\addrW[2]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hAA6A)) 
    \addrW[2]_i_12 
       (.I0(addrW[3]),
        .I1(CSIZE[0]),
        .I2(CSIZE[1]),
        .I3(CSIZE[2]),
        .O(\addrW[2]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hAA9A)) 
    \addrW[2]_i_13 
       (.I0(addrW[2]),
        .I1(CSIZE[0]),
        .I2(CSIZE[1]),
        .I3(CSIZE[2]),
        .O(\addrW[2]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hA9AA)) 
    \addrW[2]_i_14 
       (.I0(addrW[1]),
        .I1(CSIZE[1]),
        .I2(CSIZE[2]),
        .I3(CSIZE[0]),
        .O(\addrW[2]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hAAA9)) 
    \addrW[2]_i_15 
       (.I0(addrW[0]),
        .I1(CSIZE[0]),
        .I2(CSIZE[1]),
        .I3(CSIZE[2]),
        .O(\addrW[2]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h00040000)) 
    \addrW[2]_i_2 
       (.I0(state_write[1]),
        .I1(write_go),
        .I2(state_write[2]),
        .I3(state_write[0]),
        .I4(CADDR[2]),
        .O(\addrW[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \addrW[2]_i_3 
       (.I0(u2f_ready),
        .I1(u2f_valid),
        .I2(CBURST[0]),
        .I3(CBURST[1]),
        .I4(\addrW[2]_i_6_n_0 ),
        .I5(\addrW[2]_i_7_n_0 ),
        .O(\addrW[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000800000)) 
    \addrW[2]_i_5 
       (.I0(u2f_ready),
        .I1(u2f_valid),
        .I2(CBURST[0]),
        .I3(CBURST[1]),
        .I4(\addrW[2]_i_6_n_0 ),
        .I5(\addrW[2]_i_7_n_0 ),
        .O(\addrW[2]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \addrW[2]_i_6 
       (.I0(state_write[2]),
        .I1(state_write[1]),
        .I2(state_write[0]),
        .O(\addrW[2]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \addrW[2]_i_7 
       (.I0(CSIZE[1]),
        .I1(CSIZE[2]),
        .O(\addrW[2]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \addrW[2]_i_8 
       (.I0(addrW[7]),
        .I1(CSIZE[0]),
        .I2(CSIZE[1]),
        .I3(CSIZE[2]),
        .O(\addrW[2]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h9AAA)) 
    \addrW[2]_i_9 
       (.I0(addrW[6]),
        .I1(CSIZE[0]),
        .I2(CSIZE[1]),
        .I3(CSIZE[2]),
        .O(\addrW[2]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[30]_i_1 
       (.I0(addrW[30]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[30]_i_2_n_0 ),
        .O(\addrW[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[30]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[31]_i_5_n_9 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[31]_i_6_n_12 ),
        .I4(CADDR[30]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[30]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[31]_i_1 
       (.I0(addrW[31]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[31]_i_3_n_0 ),
        .O(\addrW[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3232FCFF)) 
    \addrW[31]_i_2 
       (.I0(\addrW[31]_i_4_n_0 ),
        .I1(state_write[2]),
        .I2(state_write[0]),
        .I3(write_go),
        .I4(state_write[1]),
        .O(\addrW[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[31]_i_3 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[31]_i_5_n_8 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[31]_i_6_n_11 ),
        .I4(CADDR[31]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[31]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \addrW[31]_i_4 
       (.I0(u2f_ready),
        .I1(u2f_valid),
        .I2(CBURST[0]),
        .I3(CBURST[1]),
        .O(\addrW[31]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[3]_i_1 
       (.I0(addrW[3]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[3]_i_2_n_0 ),
        .O(\addrW[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[3]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[2]_i_4_n_12 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[10]_i_3_n_15 ),
        .I4(CADDR[3]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[4]_i_1 
       (.I0(addrW[4]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[4]_i_2_n_0 ),
        .O(\addrW[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[4]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[2]_i_4_n_11 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[10]_i_3_n_14 ),
        .I4(CADDR[4]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[5]_i_1 
       (.I0(addrW[5]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[5]_i_2_n_0 ),
        .O(\addrW[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[5]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[2]_i_4_n_10 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[10]_i_3_n_13 ),
        .I4(CADDR[5]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[6]_i_1 
       (.I0(addrW[6]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[6]_i_2_n_0 ),
        .O(\addrW[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[6]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[2]_i_4_n_9 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[10]_i_3_n_12 ),
        .I4(CADDR[6]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[7]_i_1 
       (.I0(addrW[7]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[7]_i_2_n_0 ),
        .O(\addrW[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[7]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[2]_i_4_n_8 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[10]_i_3_n_11 ),
        .I4(CADDR[7]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[8]_i_1 
       (.I0(addrW[8]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[8]_i_2_n_0 ),
        .O(\addrW[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[8]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[15]_i_3_n_15 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[10]_i_3_n_10 ),
        .I4(CADDR[8]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \addrW[9]_i_1 
       (.I0(addrW[9]),
        .I1(\addrW[31]_i_2_n_0 ),
        .I2(\addrW[9]_i_2_n_0 ),
        .O(\addrW[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \addrW[9]_i_2 
       (.I0(\addrW[2]_i_5_n_0 ),
        .I1(\addrW_reg[15]_i_3_n_14 ),
        .I2(\addrW[2]_i_3_n_0 ),
        .I3(\addrW_reg[10]_i_3_n_9 ),
        .I4(CADDR[9]),
        .I5(\addrW[1]_i_2_n_0 ),
        .O(\addrW[9]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[0]),
        .Q(addrW_dly[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[10] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[10]),
        .Q(addrW_dly[10]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[11] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[11]),
        .Q(addrW_dly[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[12] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[12]),
        .Q(addrW_dly[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[13] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[13]),
        .Q(addrW_dly[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[14] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[14]),
        .Q(addrW_dly[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[15] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[15]),
        .Q(addrW_dly[15]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[16] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[16]),
        .Q(addrW_dly[16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[17] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[17]),
        .Q(addrW_dly[17]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[18] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[18]),
        .Q(addrW_dly[18]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[19] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[19]),
        .Q(addrW_dly[19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[1]),
        .Q(addrW_dly[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[20] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[20]),
        .Q(addrW_dly[20]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[21] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[21]),
        .Q(addrW_dly[21]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[22] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[22]),
        .Q(addrW_dly[22]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[23] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[23]),
        .Q(addrW_dly[23]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[24] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[24]),
        .Q(addrW_dly[24]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[25] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[25]),
        .Q(addrW_dly[25]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[26] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[26]),
        .Q(addrW_dly[26]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[27] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[27]),
        .Q(addrW_dly[27]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[28] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[28]),
        .Q(addrW_dly[28]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[29] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[29]),
        .Q(addrW_dly[29]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[2]),
        .Q(addrW_dly[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[30] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[30]),
        .Q(addrW_dly[30]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[31] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[31]),
        .Q(addrW_dly[31]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[3]),
        .Q(addrW_dly[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[4] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[4]),
        .Q(addrW_dly[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[5] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[5]),
        .Q(addrW_dly[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[6] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[6]),
        .Q(addrW_dly[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[7] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[7]),
        .Q(addrW_dly[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[8] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[8]),
        .Q(addrW_dly[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_dly_reg[9] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(addrW[9]),
        .Q(addrW_dly[9]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[0]_i_1_n_0 ),
        .Q(addrW[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[10] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[10]_i_1_n_0 ),
        .Q(addrW[10]));
  CARRY8 \addrW_reg[10]_i_3 
       (.CI(addrW[2]),
        .CI_TOP(1'b0),
        .CO({\addrW_reg[10]_i_3_n_0 ,\addrW_reg[10]_i_3_n_1 ,\addrW_reg[10]_i_3_n_2 ,\addrW_reg[10]_i_3_n_3 ,\addrW_reg[10]_i_3_n_4 ,\addrW_reg[10]_i_3_n_5 ,\addrW_reg[10]_i_3_n_6 ,\addrW_reg[10]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrW_reg[10]_i_3_n_8 ,\addrW_reg[10]_i_3_n_9 ,\addrW_reg[10]_i_3_n_10 ,\addrW_reg[10]_i_3_n_11 ,\addrW_reg[10]_i_3_n_12 ,\addrW_reg[10]_i_3_n_13 ,\addrW_reg[10]_i_3_n_14 ,\addrW_reg[10]_i_3_n_15 }),
        .S(addrW[10:3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[11] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[11]_i_1_n_0 ),
        .Q(addrW[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[12] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[12]_i_1_n_0 ),
        .Q(addrW[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[13] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[13]_i_1_n_0 ),
        .Q(addrW[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[14] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[14]_i_1_n_0 ),
        .Q(addrW[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[15] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[15]_i_1_n_0 ),
        .Q(addrW[15]));
  CARRY8 \addrW_reg[15]_i_3 
       (.CI(\addrW_reg[2]_i_4_n_0 ),
        .CI_TOP(1'b0),
        .CO({\addrW_reg[15]_i_3_n_0 ,\addrW_reg[15]_i_3_n_1 ,\addrW_reg[15]_i_3_n_2 ,\addrW_reg[15]_i_3_n_3 ,\addrW_reg[15]_i_3_n_4 ,\addrW_reg[15]_i_3_n_5 ,\addrW_reg[15]_i_3_n_6 ,\addrW_reg[15]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrW_reg[15]_i_3_n_8 ,\addrW_reg[15]_i_3_n_9 ,\addrW_reg[15]_i_3_n_10 ,\addrW_reg[15]_i_3_n_11 ,\addrW_reg[15]_i_3_n_12 ,\addrW_reg[15]_i_3_n_13 ,\addrW_reg[15]_i_3_n_14 ,\addrW_reg[15]_i_3_n_15 }),
        .S(addrW[15:8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[16] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[16]_i_1_n_0 ),
        .Q(addrW[16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[17] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[17]_i_1_n_0 ),
        .Q(addrW[17]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[18] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[18]_i_1_n_0 ),
        .Q(addrW[18]));
  CARRY8 \addrW_reg[18]_i_3 
       (.CI(\addrW_reg[10]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\addrW_reg[18]_i_3_n_0 ,\addrW_reg[18]_i_3_n_1 ,\addrW_reg[18]_i_3_n_2 ,\addrW_reg[18]_i_3_n_3 ,\addrW_reg[18]_i_3_n_4 ,\addrW_reg[18]_i_3_n_5 ,\addrW_reg[18]_i_3_n_6 ,\addrW_reg[18]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrW_reg[18]_i_3_n_8 ,\addrW_reg[18]_i_3_n_9 ,\addrW_reg[18]_i_3_n_10 ,\addrW_reg[18]_i_3_n_11 ,\addrW_reg[18]_i_3_n_12 ,\addrW_reg[18]_i_3_n_13 ,\addrW_reg[18]_i_3_n_14 ,\addrW_reg[18]_i_3_n_15 }),
        .S(addrW[18:11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[19] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[19]_i_1_n_0 ),
        .Q(addrW[19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[1]_i_1_n_0 ),
        .Q(addrW[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[20] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[20]_i_1_n_0 ),
        .Q(addrW[20]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[21] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[21]_i_1_n_0 ),
        .Q(addrW[21]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[22] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[22]_i_1_n_0 ),
        .Q(addrW[22]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[23] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[23]_i_1_n_0 ),
        .Q(addrW[23]));
  CARRY8 \addrW_reg[23]_i_3 
       (.CI(\addrW_reg[15]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\addrW_reg[23]_i_3_n_0 ,\addrW_reg[23]_i_3_n_1 ,\addrW_reg[23]_i_3_n_2 ,\addrW_reg[23]_i_3_n_3 ,\addrW_reg[23]_i_3_n_4 ,\addrW_reg[23]_i_3_n_5 ,\addrW_reg[23]_i_3_n_6 ,\addrW_reg[23]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrW_reg[23]_i_3_n_8 ,\addrW_reg[23]_i_3_n_9 ,\addrW_reg[23]_i_3_n_10 ,\addrW_reg[23]_i_3_n_11 ,\addrW_reg[23]_i_3_n_12 ,\addrW_reg[23]_i_3_n_13 ,\addrW_reg[23]_i_3_n_14 ,\addrW_reg[23]_i_3_n_15 }),
        .S(addrW[23:16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[24] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[24]_i_1_n_0 ),
        .Q(addrW[24]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[25] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[25]_i_1_n_0 ),
        .Q(addrW[25]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[26] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[26]_i_1_n_0 ),
        .Q(addrW[26]));
  CARRY8 \addrW_reg[26]_i_3 
       (.CI(\addrW_reg[18]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\addrW_reg[26]_i_3_n_0 ,\addrW_reg[26]_i_3_n_1 ,\addrW_reg[26]_i_3_n_2 ,\addrW_reg[26]_i_3_n_3 ,\addrW_reg[26]_i_3_n_4 ,\addrW_reg[26]_i_3_n_5 ,\addrW_reg[26]_i_3_n_6 ,\addrW_reg[26]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrW_reg[26]_i_3_n_8 ,\addrW_reg[26]_i_3_n_9 ,\addrW_reg[26]_i_3_n_10 ,\addrW_reg[26]_i_3_n_11 ,\addrW_reg[26]_i_3_n_12 ,\addrW_reg[26]_i_3_n_13 ,\addrW_reg[26]_i_3_n_14 ,\addrW_reg[26]_i_3_n_15 }),
        .S(addrW[26:19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[27] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[27]_i_1_n_0 ),
        .Q(addrW[27]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[28] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[28]_i_1_n_0 ),
        .Q(addrW[28]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[29] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[29]_i_1_n_0 ),
        .Q(addrW[29]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[2]_i_1_n_0 ),
        .Q(addrW[2]));
  CARRY8 \addrW_reg[2]_i_4 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\addrW_reg[2]_i_4_n_0 ,\addrW_reg[2]_i_4_n_1 ,\addrW_reg[2]_i_4_n_2 ,\addrW_reg[2]_i_4_n_3 ,\addrW_reg[2]_i_4_n_4 ,\addrW_reg[2]_i_4_n_5 ,\addrW_reg[2]_i_4_n_6 ,\addrW_reg[2]_i_4_n_7 }),
        .DI(addrW[7:0]),
        .O({\addrW_reg[2]_i_4_n_8 ,\addrW_reg[2]_i_4_n_9 ,\addrW_reg[2]_i_4_n_10 ,\addrW_reg[2]_i_4_n_11 ,\addrW_reg[2]_i_4_n_12 ,\addrW_reg[2]_i_4_n_13 ,\addrW_reg[2]_i_4_n_14 ,\addrW_reg[2]_i_4_n_15 }),
        .S({\addrW[2]_i_8_n_0 ,\addrW[2]_i_9_n_0 ,\addrW[2]_i_10_n_0 ,\addrW[2]_i_11_n_0 ,\addrW[2]_i_12_n_0 ,\addrW[2]_i_13_n_0 ,\addrW[2]_i_14_n_0 ,\addrW[2]_i_15_n_0 }));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[30] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[30]_i_1_n_0 ),
        .Q(addrW[30]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[31] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\addrW[31]_i_1_n_0 ),
        .Q(addrW[31]));
  CARRY8 \addrW_reg[31]_i_5 
       (.CI(\addrW_reg[23]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_addrW_reg[31]_i_5_CO_UNCONNECTED [7],\addrW_reg[31]_i_5_n_1 ,\addrW_reg[31]_i_5_n_2 ,\addrW_reg[31]_i_5_n_3 ,\addrW_reg[31]_i_5_n_4 ,\addrW_reg[31]_i_5_n_5 ,\addrW_reg[31]_i_5_n_6 ,\addrW_reg[31]_i_5_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\addrW_reg[31]_i_5_n_8 ,\addrW_reg[31]_i_5_n_9 ,\addrW_reg[31]_i_5_n_10 ,\addrW_reg[31]_i_5_n_11 ,\addrW_reg[31]_i_5_n_12 ,\addrW_reg[31]_i_5_n_13 ,\addrW_reg[31]_i_5_n_14 ,\addrW_reg[31]_i_5_n_15 }),
        .S(addrW[31:24]));
  CARRY8 \addrW_reg[31]_i_6 
       (.CI(\addrW_reg[26]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_addrW_reg[31]_i_6_CO_UNCONNECTED [7:4],\addrW_reg[31]_i_6_n_4 ,\addrW_reg[31]_i_6_n_5 ,\addrW_reg[31]_i_6_n_6 ,\addrW_reg[31]_i_6_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_addrW_reg[31]_i_6_O_UNCONNECTED [7:5],\addrW_reg[31]_i_6_n_11 ,\addrW_reg[31]_i_6_n_12 ,\addrW_reg[31]_i_6_n_13 ,\addrW_reg[31]_i_6_n_14 ,\addrW_reg[31]_i_6_n_15 }),
        .S({1'b0,1'b0,1'b0,addrW[31:27]}));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[3]_i_1_n_0 ),
        .Q(addrW[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[4] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[4]_i_1_n_0 ),
        .Q(addrW[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[5] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[5]_i_1_n_0 ),
        .Q(addrW[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[6] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[6]_i_1_n_0 ),
        .Q(addrW[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[7] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[7]_i_1_n_0 ),
        .Q(addrW[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[8] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[8]_i_1_n_0 ),
        .Q(addrW[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \addrW_reg[9] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\addrW[9]_i_1_n_0 ),
        .Q(addrW[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFF000D0001)) 
    cmd_ready_i_1
       (.I0(state_cmd[2]),
        .I1(cmd_ready),
        .I2(state_cmd[0]),
        .I3(state_cmd[1]),
        .I4(cmd_ready_i_2_n_0),
        .I5(cmd_ready_i_3_n_0),
        .O(cmd_ready_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    cmd_ready_i_2
       (.I0(transactor_sel[2]),
        .I1(transactor_sel[3]),
        .I2(transactor_sel[0]),
        .I3(transactor_sel[1]),
        .I4(cmd_data[31]),
        .O(cmd_ready_i_2_n_0));
  LUT6 #(
    .INIT(64'h00FF0000FF8F0000)) 
    cmd_ready_i_3
       (.I0(CEI),
        .I1(state_cmd[0]),
        .I2(cmd_valid),
        .I3(state_cmd[2]),
        .I4(cmd_ready),
        .I5(state_cmd[1]),
        .O(cmd_ready_i_3_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    cmd_ready_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(cmd_ready_i_1_n_0),
        .Q(cmd_ready));
  LUT5 #(
    .INIT(32'hFFFFAABA)) 
    \countR[0]_i_1 
       (.I0(\ARLEN[7]_i_3_n_0 ),
        .I1(state_read[1]),
        .I2(countR[0]),
        .I3(state_read[0]),
        .I4(\countR[0]_i_2_n_0 ),
        .O(\countR[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3300330032003002)) 
    \countR[0]_i_2 
       (.I0(state_read[1]),
        .I1(state_read[2]),
        .I2(state_read[0]),
        .I3(countR[0]),
        .I4(read_done_reg_i_3_n_3),
        .I5(read_done_i_4_n_0),
        .O(\countR[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hBCA0)) 
    \countR[1]_i_1 
       (.I0(\countR[8]_i_2_n_0 ),
        .I1(countR[0]),
        .I2(countR[1]),
        .I3(\countR[8]_i_4_n_0 ),
        .O(\countR[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFC0AA00)) 
    \countR[2]_i_1 
       (.I0(\countR[8]_i_2_n_0 ),
        .I1(countR[1]),
        .I2(countR[0]),
        .I3(countR[2]),
        .I4(\countR[8]_i_4_n_0 ),
        .O(\countR[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFC000AAAA0000)) 
    \countR[3]_i_1 
       (.I0(\countR[8]_i_2_n_0 ),
        .I1(countR[2]),
        .I2(countR[0]),
        .I3(countR[1]),
        .I4(countR[3]),
        .I5(\countR[8]_i_4_n_0 ),
        .O(\countR[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hBCA0)) 
    \countR[4]_i_1 
       (.I0(\countR[8]_i_2_n_0 ),
        .I1(\countR[7]_i_2_n_0 ),
        .I2(countR[4]),
        .I3(\countR[8]_i_4_n_0 ),
        .O(\countR[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFC0AA00)) 
    \countR[5]_i_1 
       (.I0(\countR[8]_i_2_n_0 ),
        .I1(countR[4]),
        .I2(\countR[7]_i_2_n_0 ),
        .I3(countR[5]),
        .I4(\countR[8]_i_4_n_0 ),
        .O(\countR[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFC000AAAA0000)) 
    \countR[6]_i_1 
       (.I0(\countR[8]_i_2_n_0 ),
        .I1(\countR[7]_i_2_n_0 ),
        .I2(countR[4]),
        .I3(countR[5]),
        .I4(countR[6]),
        .I5(\countR[8]_i_4_n_0 ),
        .O(\countR[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFC000AAAA0000)) 
    \countR[7]_i_1 
       (.I0(\countR[8]_i_2_n_0 ),
        .I1(\countR[7]_i_2_n_0 ),
        .I2(\countR[7]_i_3_n_0 ),
        .I3(countR[6]),
        .I4(countR[7]),
        .I5(\countR[8]_i_4_n_0 ),
        .O(\countR[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \countR[7]_i_2 
       (.I0(countR[3]),
        .I1(countR[2]),
        .I2(countR[1]),
        .I3(countR[0]),
        .O(\countR[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countR[7]_i_3 
       (.I0(countR[4]),
        .I1(countR[5]),
        .O(\countR[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \countR[8]_i_1 
       (.I0(countR[8]),
        .I1(\countR[8]_i_2_n_0 ),
        .I2(\countR[8]_i_3_n_0 ),
        .I3(\countR[8]_i_4_n_0 ),
        .O(\countR[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF44440444)) 
    \countR[8]_i_2 
       (.I0(state_read[2]),
        .I1(state_read[1]),
        .I2(RREADY),
        .I3(RVALID),
        .I4(read_done_reg_i_3_n_3),
        .I5(\countR[8]_i_5_n_0 ),
        .O(\countR[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \countR[8]_i_3 
       (.I0(\countR[7]_i_2_n_0 ),
        .I1(countR[7]),
        .I2(countR[6]),
        .I3(countR[5]),
        .I4(countR[4]),
        .I5(countR[8]),
        .O(\countR[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \countR[8]_i_4 
       (.I0(state_read[0]),
        .I1(state_read[2]),
        .I2(state_read[1]),
        .I3(read_done_reg_i_3_n_3),
        .I4(RVALID),
        .I5(RREADY),
        .O(\countR[8]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00FF5545)) 
    \countR[8]_i_5 
       (.I0(state_read[1]),
        .I1(CEI),
        .I2(read_go),
        .I3(state_read[2]),
        .I4(state_read[0]),
        .O(\countR[8]_i_5_n_0 ));
  (* KEEP = "yes" *) 
  FDCE \countR_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\countR[0]_i_1_n_0 ),
        .Q(countR[0]));
  (* KEEP = "yes" *) 
  FDCE \countR_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\countR[1]_i_1_n_0 ),
        .Q(countR[1]));
  (* KEEP = "yes" *) 
  FDCE \countR_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\countR[2]_i_1_n_0 ),
        .Q(countR[2]));
  (* KEEP = "yes" *) 
  FDCE \countR_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\countR[3]_i_1_n_0 ),
        .Q(countR[3]));
  (* KEEP = "yes" *) 
  FDCE \countR_reg[4] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\countR[4]_i_1_n_0 ),
        .Q(countR[4]));
  (* KEEP = "yes" *) 
  FDCE \countR_reg[5] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\countR[5]_i_1_n_0 ),
        .Q(countR[5]));
  (* KEEP = "yes" *) 
  FDCE \countR_reg[6] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\countR[6]_i_1_n_0 ),
        .Q(countR[6]));
  (* KEEP = "yes" *) 
  FDCE \countR_reg[7] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\countR[7]_i_1_n_0 ),
        .Q(countR[7]));
  (* KEEP = "yes" *) 
  FDCE \countR_reg[8] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\countR[8]_i_1_n_0 ),
        .Q(countR[8]));
  LUT5 #(
    .INIT(32'hAAAAAABA)) 
    \countW[0]_i_1 
       (.I0(\countW[0]_i_2_n_0 ),
        .I1(state_write[1]),
        .I2(write_go),
        .I3(state_write[2]),
        .I4(state_write[0]),
        .O(\countW[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000F0E1F0F0F0F0)) 
    \countW[0]_i_2 
       (.I0(\state_write[2]_i_2_n_0 ),
        .I1(u2f_fifo_wr_dat[40]),
        .I2(countW[0]),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(state_write[1]),
        .O(\countW[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hBCA0)) 
    \countW[1]_i_1 
       (.I0(\countW[8]_i_2_n_0 ),
        .I1(countW[0]),
        .I2(countW[1]),
        .I3(\countW[8]_i_4_n_0 ),
        .O(\countW[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFC0AA00)) 
    \countW[2]_i_1 
       (.I0(\countW[8]_i_2_n_0 ),
        .I1(countW[1]),
        .I2(countW[0]),
        .I3(countW[2]),
        .I4(\countW[8]_i_4_n_0 ),
        .O(\countW[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFC000AAAA0000)) 
    \countW[3]_i_1 
       (.I0(\countW[8]_i_2_n_0 ),
        .I1(countW[2]),
        .I2(countW[0]),
        .I3(countW[1]),
        .I4(countW[3]),
        .I5(\countW[8]_i_4_n_0 ),
        .O(\countW[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hBCA0)) 
    \countW[4]_i_1 
       (.I0(\countW[8]_i_2_n_0 ),
        .I1(\countW[7]_i_2_n_0 ),
        .I2(countW[4]),
        .I3(\countW[8]_i_4_n_0 ),
        .O(\countW[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFC0AA00)) 
    \countW[5]_i_1 
       (.I0(\countW[8]_i_2_n_0 ),
        .I1(countW[4]),
        .I2(\countW[7]_i_2_n_0 ),
        .I3(countW[5]),
        .I4(\countW[8]_i_4_n_0 ),
        .O(\countW[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFC000AAAA0000)) 
    \countW[6]_i_1 
       (.I0(\countW[8]_i_2_n_0 ),
        .I1(\countW[7]_i_2_n_0 ),
        .I2(countW[4]),
        .I3(countW[5]),
        .I4(countW[6]),
        .I5(\countW[8]_i_4_n_0 ),
        .O(\countW[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFC000AAAA0000)) 
    \countW[7]_i_1 
       (.I0(\countW[8]_i_2_n_0 ),
        .I1(\countW[7]_i_2_n_0 ),
        .I2(\countW[7]_i_3_n_0 ),
        .I3(countW[6]),
        .I4(countW[7]),
        .I5(\countW[8]_i_4_n_0 ),
        .O(\countW[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \countW[7]_i_2 
       (.I0(countW[3]),
        .I1(countW[2]),
        .I2(countW[1]),
        .I3(countW[0]),
        .O(\countW[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countW[7]_i_3 
       (.I0(countW[4]),
        .I1(countW[5]),
        .O(\countW[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \countW[8]_i_1 
       (.I0(countW[8]),
        .I1(\countW[8]_i_2_n_0 ),
        .I2(\countW[8]_i_3_n_0 ),
        .I3(\countW[8]_i_4_n_0 ),
        .O(\countW[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F0E0F0EFFF0FFFF)) 
    \countW[8]_i_2 
       (.I0(\state_write[2]_i_2_n_0 ),
        .I1(u2f_fifo_wr_dat[40]),
        .I2(state_write[2]),
        .I3(state_write[0]),
        .I4(write_go),
        .I5(state_write[1]),
        .O(\countW[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \countW[8]_i_3 
       (.I0(\countW[7]_i_2_n_0 ),
        .I1(countW[7]),
        .I2(countW[6]),
        .I3(countW[5]),
        .I4(countW[4]),
        .I5(countW[8]),
        .O(\countW[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    \countW[8]_i_4 
       (.I0(state_write[0]),
        .I1(state_write[1]),
        .I2(state_write[2]),
        .I3(u2f_fifo_wr_dat[40]),
        .I4(u2f_valid),
        .I5(u2f_ready),
        .O(\countW[8]_i_4_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \countW_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\countW[0]_i_1_n_0 ),
        .Q(countW[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \countW_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\countW[1]_i_1_n_0 ),
        .Q(countW[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \countW_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\countW[2]_i_1_n_0 ),
        .Q(countW[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \countW_reg[3] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\countW[3]_i_1_n_0 ),
        .Q(countW[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \countW_reg[4] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\countW[4]_i_1_n_0 ),
        .Q(countW[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \countW_reg[5] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\countW[5]_i_1_n_0 ),
        .Q(countW[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \countW_reg[6] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\countW[6]_i_1_n_0 ),
        .Q(countW[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \countW_reg[7] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(\countW[7]_i_1_n_0 ),
        .Q(countW[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \countW_reg[8] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\countW[8]_i_1_n_0 ),
        .Q(countW[8]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[0]_i_1 
       (.I0(f2u_int_data[0]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[0]),
        .O(\f2u_int_data[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[10]_i_1 
       (.I0(f2u_int_data[10]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[10]),
        .O(\f2u_int_data[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[11]_i_1 
       (.I0(f2u_int_data[11]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[11]),
        .O(\f2u_int_data[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[12]_i_1 
       (.I0(f2u_int_data[12]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[12]),
        .O(\f2u_int_data[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[13]_i_1 
       (.I0(f2u_int_data[13]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[13]),
        .O(\f2u_int_data[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[14]_i_1 
       (.I0(f2u_int_data[14]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[14]),
        .O(\f2u_int_data[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[15]_i_1 
       (.I0(f2u_int_data[15]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[15]),
        .O(\f2u_int_data[15]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h70)) 
    \f2u_int_data[16]_i_1 
       (.I0(read_go),
        .I1(CEI),
        .I2(f2u_int_data[16]),
        .O(\f2u_int_data[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \f2u_int_data[17]_i_1 
       (.I0(f2u_int_data[17]),
        .I1(read_go),
        .I2(CEI),
        .O(\f2u_int_data[17]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h70)) 
    \f2u_int_data[18]_i_1 
       (.I0(read_go),
        .I1(CEI),
        .I2(f2u_int_data[18]),
        .O(\f2u_int_data[18]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \f2u_int_data[19]_i_1 
       (.I0(f2u_int_data[19]),
        .I1(read_go),
        .I2(CEI),
        .O(\f2u_int_data[19]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[1]_i_1 
       (.I0(f2u_int_data[1]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[1]),
        .O(\f2u_int_data[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h70)) 
    \f2u_int_data[20]_i_1 
       (.I0(read_go),
        .I1(CEI),
        .I2(f2u_int_data[20]),
        .O(\f2u_int_data[20]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h70)) 
    \f2u_int_data[21]_i_1 
       (.I0(read_go),
        .I1(CEI),
        .I2(f2u_int_data[21]),
        .O(\f2u_int_data[21]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h70)) 
    \f2u_int_data[22]_i_1 
       (.I0(read_go),
        .I1(CEI),
        .I2(f2u_int_data[22]),
        .O(\f2u_int_data[22]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h70)) 
    \f2u_int_data[23]_i_1 
       (.I0(read_go),
        .I1(CEI),
        .I2(f2u_int_data[23]),
        .O(\f2u_int_data[23]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[24]_i_1 
       (.I0(f2u_int_data[24]),
        .I1(CEI),
        .I2(read_go),
        .I3(MID[0]),
        .O(\f2u_int_data[24]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[25]_i_1 
       (.I0(f2u_int_data[25]),
        .I1(CEI),
        .I2(read_go),
        .I3(MID[1]),
        .O(\f2u_int_data[25]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[26]_i_1 
       (.I0(f2u_int_data[26]),
        .I1(CEI),
        .I2(read_go),
        .I3(MID[2]),
        .O(\f2u_int_data[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[27]_i_1 
       (.I0(f2u_int_data[27]),
        .I1(CEI),
        .I2(read_go),
        .I3(MID[3]),
        .O(\f2u_int_data[27]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[28]_i_1 
       (.I0(f2u_int_data[28]),
        .I1(CEI),
        .I2(read_go),
        .I3(last_resp[0]),
        .O(\f2u_int_data[28]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[29]_i_1 
       (.I0(f2u_int_data[29]),
        .I1(CEI),
        .I2(read_go),
        .I3(last_resp[1]),
        .O(\f2u_int_data[29]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[2]_i_1 
       (.I0(f2u_int_data[2]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[2]),
        .O(\f2u_int_data[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[30]_i_1 
       (.I0(f2u_int_data[30]),
        .I1(CEI),
        .I2(read_go),
        .I3(IRQ),
        .O(\f2u_int_data[30]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \f2u_int_data[31]_i_1 
       (.I0(state_read[2]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(\f2u_int_data[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[31]_i_2 
       (.I0(f2u_int_data[31]),
        .I1(CEI),
        .I2(read_go),
        .I3(FIQ),
        .O(\f2u_int_data[31]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[3]_i_1 
       (.I0(f2u_int_data[3]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[3]),
        .O(\f2u_int_data[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[4]_i_1 
       (.I0(f2u_int_data[4]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[4]),
        .O(\f2u_int_data[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[5]_i_1 
       (.I0(f2u_int_data[5]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[5]),
        .O(\f2u_int_data[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[6]_i_1 
       (.I0(f2u_int_data[6]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[6]),
        .O(\f2u_int_data[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[7]_i_1 
       (.I0(f2u_int_data[7]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[7]),
        .O(\f2u_int_data[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[8]_i_1 
       (.I0(f2u_int_data[8]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[8]),
        .O(\f2u_int_data[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \f2u_int_data[9]_i_1 
       (.I0(f2u_int_data[9]),
        .I1(CEI),
        .I2(read_go),
        .I3(GPIN[9]),
        .O(\f2u_int_data[9]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[0] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[0]_i_1_n_0 ),
        .Q(f2u_int_data[0]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[10] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[10]_i_1_n_0 ),
        .Q(f2u_int_data[10]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[11] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[11]_i_1_n_0 ),
        .Q(f2u_int_data[11]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[12] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[12]_i_1_n_0 ),
        .Q(f2u_int_data[12]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[13] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[13]_i_1_n_0 ),
        .Q(f2u_int_data[13]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[14] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[14]_i_1_n_0 ),
        .Q(f2u_int_data[14]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[15] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[15]_i_1_n_0 ),
        .Q(f2u_int_data[15]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[16] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[16]_i_1_n_0 ),
        .Q(f2u_int_data[16]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[17] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[17]_i_1_n_0 ),
        .Q(f2u_int_data[17]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[18] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[18]_i_1_n_0 ),
        .Q(f2u_int_data[18]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[19] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[19]_i_1_n_0 ),
        .Q(f2u_int_data[19]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[1] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[1]_i_1_n_0 ),
        .Q(f2u_int_data[1]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[20] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[20]_i_1_n_0 ),
        .Q(f2u_int_data[20]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[21] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[21]_i_1_n_0 ),
        .Q(f2u_int_data[21]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[22] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[22]_i_1_n_0 ),
        .Q(f2u_int_data[22]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[23] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[23]_i_1_n_0 ),
        .Q(f2u_int_data[23]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[24] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[24]_i_1_n_0 ),
        .Q(f2u_int_data[24]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[25] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[25]_i_1_n_0 ),
        .Q(f2u_int_data[25]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[26] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[26]_i_1_n_0 ),
        .Q(f2u_int_data[26]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[27] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[27]_i_1_n_0 ),
        .Q(f2u_int_data[27]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[28] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[28]_i_1_n_0 ),
        .Q(f2u_int_data[28]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[29] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[29]_i_1_n_0 ),
        .Q(f2u_int_data[29]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[2] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[2]_i_1_n_0 ),
        .Q(f2u_int_data[2]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[30] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[30]_i_1_n_0 ),
        .Q(f2u_int_data[30]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[31] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[31]_i_2_n_0 ),
        .Q(f2u_int_data[31]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[3] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[3]_i_1_n_0 ),
        .Q(f2u_int_data[3]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[4] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[4]_i_1_n_0 ),
        .Q(f2u_int_data[4]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[5] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[5]_i_1_n_0 ),
        .Q(f2u_int_data[5]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[6] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[6]_i_1_n_0 ),
        .Q(f2u_int_data[6]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[7] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[7]_i_1_n_0 ),
        .Q(f2u_int_data[7]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[8] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[8]_i_1_n_0 ),
        .Q(f2u_int_data[8]));
  (* KEEP = "yes" *) 
  (* mark_debug = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \f2u_int_data_reg[9] 
       (.C(ACLK),
        .CE(\f2u_int_data[31]_i_1_n_0 ),
        .CLR(\CMD[17]_i_2_n_0 ),
        .D(\f2u_int_data[9]_i_1_n_0 ),
        .Q(f2u_int_data[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(CMD[31]),
        .O(CEI));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(CMD[30]),
        .O(CWRITE));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(CMD[21]),
        .O(CPROT[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(CMD[20]),
        .O(CPROT[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(CMD[19]),
        .O(CCACHE[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(CMD[18]),
        .O(CCACHE[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(CMD[17]),
        .O(CCACHE[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(CMD[16]),
        .O(CCACHE[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(CMD[15]),
        .O(CID[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(CMD[14]),
        .O(CID[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(CMD[13]),
        .O(CID[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(CMD[12]),
        .O(CID[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(CMD[29]),
        .O(CLOCK));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(CID[3]),
        .O(u2f_fifo_wr_dat[39]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(CID[2]),
        .O(u2f_fifo_wr_dat[38]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(CID[1]),
        .O(u2f_fifo_wr_dat[37]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(CID[0]),
        .O(u2f_fifo_wr_dat[36]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(u2f_fifo_rd_dat[39]),
        .O(WID[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(u2f_fifo_rd_dat[38]),
        .O(WID[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(u2f_fifo_rd_dat[37]),
        .O(WID[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(u2f_fifo_rd_dat[36]),
        .O(WID[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(u2f_fifo_rd_dat[35]),
        .O(WSTRB[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(u2f_fifo_rd_dat[34]),
        .O(WSTRB[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(CMD[28]),
        .O(CEXCL));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(u2f_fifo_rd_dat[33]),
        .O(WSTRB[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(u2f_fifo_rd_dat[32]),
        .O(WSTRB[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(u2f_fifo_rd_dat[31]),
        .O(WDATA[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(u2f_fifo_rd_dat[30]),
        .O(WDATA[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(u2f_fifo_rd_dat[29]),
        .O(WDATA[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(u2f_fifo_rd_dat[28]),
        .O(WDATA[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(u2f_fifo_rd_dat[27]),
        .O(WDATA[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(u2f_fifo_rd_dat[26]),
        .O(WDATA[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(u2f_fifo_rd_dat[25]),
        .O(WDATA[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(u2f_fifo_rd_dat[24]),
        .O(WDATA[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(CMD[27]),
        .O(CSIZE[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(u2f_fifo_rd_dat[23]),
        .O(WDATA[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(u2f_fifo_rd_dat[22]),
        .O(WDATA[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(u2f_fifo_rd_dat[21]),
        .O(WDATA[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(u2f_fifo_rd_dat[20]),
        .O(WDATA[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(u2f_fifo_rd_dat[19]),
        .O(WDATA[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(u2f_fifo_rd_dat[18]),
        .O(WDATA[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(u2f_fifo_rd_dat[17]),
        .O(WDATA[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(u2f_fifo_rd_dat[16]),
        .O(WDATA[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(u2f_fifo_rd_dat[15]),
        .O(WDATA[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(u2f_fifo_rd_dat[14]),
        .O(WDATA[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(CMD[26]),
        .O(CSIZE[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(u2f_fifo_rd_dat[13]),
        .O(WDATA[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(u2f_fifo_rd_dat[12]),
        .O(WDATA[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(u2f_fifo_rd_dat[11]),
        .O(WDATA[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(u2f_fifo_rd_dat[10]),
        .O(WDATA[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(u2f_fifo_rd_dat[9]),
        .O(WDATA[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(u2f_fifo_rd_dat[8]),
        .O(WDATA[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(u2f_fifo_rd_dat[7]),
        .O(WDATA[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(u2f_fifo_rd_dat[6]),
        .O(WDATA[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(u2f_fifo_rd_dat[5]),
        .O(WDATA[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(u2f_fifo_rd_dat[4]),
        .O(WDATA[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(CMD[25]),
        .O(CSIZE[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(u2f_fifo_rd_dat[3]),
        .O(WDATA[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(u2f_fifo_rd_dat[2]),
        .O(WDATA[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(u2f_fifo_rd_dat[1]),
        .O(WDATA[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(u2f_fifo_rd_dat[0]),
        .O(WDATA[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(u2f_fifo_rd_vld),
        .O(WVALID));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(f2u_data[33]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(f2u_data[32]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(CMD[24]),
        .O(CBURST[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(CMD[23]),
        .O(CBURST[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(CMD[22]),
        .O(CPROT[2]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \last_resp[0]_i_1 
       (.I0(RRESP[0]),
        .I1(BREADY),
        .I2(BVALID),
        .I3(BRESP[0]),
        .O(\last_resp[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \last_resp[1]_i_1 
       (.I0(BVALID),
        .I1(BREADY),
        .I2(RREADY),
        .I3(RVALID),
        .O(\last_resp[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \last_resp[1]_i_2 
       (.I0(RRESP[1]),
        .I1(BREADY),
        .I2(BVALID),
        .I3(BRESP[1]),
        .O(\last_resp[1]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \last_resp_reg[0] 
       (.C(ACLK),
        .CE(\last_resp[1]_i_1_n_0 ),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\last_resp[0]_i_1_n_0 ),
        .Q(last_resp[0]));
  FDCE #(
    .INIT(1'b0)) 
    \last_resp_reg[1] 
       (.C(ACLK),
        .CE(\last_resp[1]_i_1_n_0 ),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(\last_resp[1]_i_2_n_0 ),
        .Q(last_resp[1]));
  LUT6 #(
    .INIT(64'hAAFFAAAEAAAAAAAE)) 
    read_done_i_1
       (.I0(read_done_i_2_n_0),
        .I1(read_done_reg_i_3_n_3),
        .I2(read_done_i_4_n_0),
        .I3(read_done_i_5_n_0),
        .I4(state_read[0]),
        .I5(f2u_fifo_wr_rdy),
        .O(read_done_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    read_done_i_10
       (.I0(countR[8]),
        .O(read_done_i_10_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    read_done_i_11
       (.I0(ARLEN[7]),
        .I1(countR[7]),
        .I2(ARLEN[6]),
        .I3(countR[6]),
        .O(read_done_i_11_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    read_done_i_12
       (.I0(ARLEN[5]),
        .I1(countR[5]),
        .I2(ARLEN[4]),
        .I3(countR[4]),
        .O(read_done_i_12_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    read_done_i_13
       (.I0(ARLEN[3]),
        .I1(countR[3]),
        .I2(ARLEN[2]),
        .I3(countR[2]),
        .O(read_done_i_13_n_0));
  LUT4 #(
    .INIT(16'h8421)) 
    read_done_i_14
       (.I0(countR[0]),
        .I1(countR[1]),
        .I2(ARLEN[0]),
        .I3(ARLEN[1]),
        .O(read_done_i_14_n_0));
  LUT5 #(
    .INIT(32'h55005D00)) 
    read_done_i_2
       (.I0(state_read[2]),
        .I1(read_go),
        .I2(state_read[1]),
        .I3(read_done),
        .I4(state_read[0]),
        .O(read_done_i_2_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    read_done_i_4
       (.I0(RVALID),
        .I1(RREADY),
        .O(read_done_i_4_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    read_done_i_5
       (.I0(state_read[2]),
        .I1(state_read[1]),
        .O(read_done_i_5_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    read_done_i_6
       (.I0(countR[7]),
        .I1(ARLEN[7]),
        .I2(countR[6]),
        .I3(ARLEN[6]),
        .O(read_done_i_6_n_0));
  LUT4 #(
    .INIT(16'h20BA)) 
    read_done_i_7
       (.I0(countR[5]),
        .I1(ARLEN[4]),
        .I2(countR[4]),
        .I3(ARLEN[5]),
        .O(read_done_i_7_n_0));
  LUT4 #(
    .INIT(16'h20BA)) 
    read_done_i_8
       (.I0(countR[3]),
        .I1(ARLEN[2]),
        .I2(countR[2]),
        .I3(ARLEN[3]),
        .O(read_done_i_8_n_0));
  LUT4 #(
    .INIT(16'h20BA)) 
    read_done_i_9
       (.I0(countR[1]),
        .I1(ARLEN[0]),
        .I2(countR[0]),
        .I3(ARLEN[1]),
        .O(read_done_i_9_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    read_done_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(read_done_i_1_n_0),
        .Q(read_done));
  CARRY8 read_done_reg_i_3
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({NLW_read_done_reg_i_3_CO_UNCONNECTED[7:5],read_done_reg_i_3_n_3,read_done_reg_i_3_n_4,read_done_reg_i_3_n_5,read_done_reg_i_3_n_6,read_done_reg_i_3_n_7}),
        .DI({1'b0,1'b0,1'b0,countR[8],read_done_i_6_n_0,read_done_i_7_n_0,read_done_i_8_n_0,read_done_i_9_n_0}),
        .O(NLW_read_done_reg_i_3_O_UNCONNECTED[7:0]),
        .S({1'b0,1'b0,1'b0,read_done_i_10_n_0,read_done_i_11_n_0,read_done_i_12_n_0,read_done_i_13_n_0,read_done_i_14_n_0}));
  LUT6 #(
    .INIT(64'hFFABFFFFFFAAFFAA)) 
    read_go_i_1
       (.I0(read_go_i_3_n_0),
        .I1(state_cmd[1]),
        .I2(read_done),
        .I3(read_go_i_4_n_0),
        .I4(read_go_i_5_n_0),
        .I5(read_go),
        .O(read_go_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    read_go_i_2
       (.I0(ARESETn),
        .O(read_go_i_2_n_0));
  LUT6 #(
    .INIT(64'h050555FF00000002)) 
    read_go_i_3
       (.I0(state_cmd[2]),
        .I1(CWRITE),
        .I2(read_done),
        .I3(state_cmd[0]),
        .I4(state_cmd[1]),
        .I5(read_go),
        .O(read_go_i_3_n_0));
  LUT6 #(
    .INIT(64'h0101010101000000)) 
    read_go_i_4
       (.I0(read_go_i_6_n_0),
        .I1(state_cmd[1]),
        .I2(CWRITE),
        .I3(cmd_valid),
        .I4(cmd_ready),
        .I5(CEI),
        .O(read_go_i_4_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    read_go_i_5
       (.I0(state_cmd[0]),
        .I1(state_cmd[2]),
        .O(read_go_i_5_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    read_go_i_6
       (.I0(state_cmd[2]),
        .I1(state_cmd[0]),
        .O(read_go_i_6_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    read_go_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(read_go_i_1_n_0),
        .Q(read_go));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF2A2A2A)) 
    \state_cmd[0]_i_1 
       (.I0(\state_cmd[0]_i_2_n_0 ),
        .I1(CWRITE),
        .I2(\state_cmd[0]_i_3_n_0 ),
        .I3(\state_cmd[0]_i_4_n_0 ),
        .I4(state_cmd[0]),
        .I5(\state_cmd[0]_i_5_n_0 ),
        .O(p_0_in__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \state_cmd[0]_i_2 
       (.I0(state_cmd[2]),
        .I1(state_cmd[0]),
        .I2(state_cmd[1]),
        .O(\state_cmd[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \state_cmd[0]_i_3 
       (.I0(CEI),
        .I1(cmd_ready),
        .I2(cmd_valid),
        .O(\state_cmd[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \state_cmd[0]_i_4 
       (.I0(state_cmd[1]),
        .I1(state_cmd[2]),
        .I2(read_done),
        .O(\state_cmd[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0003000011C311C0)) 
    \state_cmd[0]_i_5 
       (.I0(CWRITE),
        .I1(state_cmd[1]),
        .I2(state_cmd[0]),
        .I3(state_cmd[2]),
        .I4(\state_cmd[0]_i_6_n_0 ),
        .I5(read_done),
        .O(\state_cmd[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \state_cmd[0]_i_6 
       (.I0(transactor_sel[2]),
        .I1(transactor_sel[3]),
        .I2(transactor_sel[0]),
        .I3(transactor_sel[1]),
        .I4(cmd_ready),
        .I5(cmd_valid),
        .O(\state_cmd[0]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    \state_cmd[1]_i_1 
       (.I0(\state_cmd[1]_i_2_n_0 ),
        .I1(\CLENG_reg[11]_i_3_n_0 ),
        .I2(state_cmd[2]),
        .I3(state_cmd[0]),
        .I4(state_cmd[1]),
        .O(p_0_in__2[1]));
  LUT6 #(
    .INIT(64'h000C0100003F2300)) 
    \state_cmd[1]_i_2 
       (.I0(CWRITE),
        .I1(state_cmd[0]),
        .I2(read_done),
        .I3(state_cmd[2]),
        .I4(state_cmd[1]),
        .I5(write_done),
        .O(\state_cmd[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAABAAAAA)) 
    \state_cmd[2]_i_1 
       (.I0(\state_cmd[2]_i_2_n_0 ),
        .I1(state_cmd[2]),
        .I2(state_cmd[0]),
        .I3(state_cmd[1]),
        .I4(CEI),
        .I5(CWRITE),
        .O(p_0_in__2[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFF0BF80000)) 
    \state_cmd[2]_i_2 
       (.I0(write_done),
        .I1(CWRITE),
        .I2(state_cmd[0]),
        .I3(read_done),
        .I4(\state_cmd[2]_i_3_n_0 ),
        .I5(\state_cmd[2]_i_4_n_0 ),
        .O(\state_cmd[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \state_cmd[2]_i_3 
       (.I0(state_cmd[2]),
        .I1(state_cmd[1]),
        .O(\state_cmd[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000B80000000000)) 
    \state_cmd[2]_i_4 
       (.I0(read_done),
        .I1(state_cmd[0]),
        .I2(write_done),
        .I3(state_cmd[1]),
        .I4(state_cmd[2]),
        .I5(\CLENG_reg[8]_i_3_n_0 ),
        .O(\state_cmd[2]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "SC_IDLE:000,SC_CMD:001,SC_WR_WAIT:010,SC_RD_WAIT:011,SC_BURST:100,SC_IE_WAIT:101" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_cmd_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(p_0_in__2[0]),
        .Q(state_cmd[0]));
  (* FSM_ENCODED_STATES = "SC_IDLE:000,SC_CMD:001,SC_WR_WAIT:010,SC_RD_WAIT:011,SC_BURST:100,SC_IE_WAIT:101" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_cmd_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(p_0_in__2[1]),
        .Q(state_cmd[1]));
  (* FSM_ENCODED_STATES = "SC_IDLE:000,SC_CMD:001,SC_WR_WAIT:010,SC_RD_WAIT:011,SC_BURST:100,SC_IE_WAIT:101" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_cmd_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(p_0_in__2[2]),
        .Q(state_cmd[2]));
  LUT6 #(
    .INIT(64'h000013D3000010D0)) 
    \state_read[0]_i_1 
       (.I0(ARREADY),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .I3(f2u_fifo_wr_rdy),
        .I4(state_read[2]),
        .I5(read_go),
        .O(p_0_in__0[0]));
  LUT6 #(
    .INIT(64'h00F800FB0008000B)) 
    \state_read[1]_i_1 
       (.I0(ARREADY),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(state_read[2]),
        .I4(\state_read[1]_i_2_n_0 ),
        .I5(\state_read[2]_i_2_n_0 ),
        .O(p_0_in__0[1]));
  LUT2 #(
    .INIT(4'h7)) 
    \state_read[1]_i_2 
       (.I0(CEI),
        .I1(read_go),
        .O(\state_read[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00550C00)) 
    \state_read[2]_i_1 
       (.I0(\state_read[2]_i_2_n_0 ),
        .I1(read_go),
        .I2(state_read[0]),
        .I3(state_read[2]),
        .I4(state_read[1]),
        .O(p_0_in__0[2]));
  LUT5 #(
    .INIT(32'h47777777)) 
    \state_read[2]_i_2 
       (.I0(f2u_fifo_wr_rdy),
        .I1(state_read[0]),
        .I2(RREADY),
        .I3(RVALID),
        .I4(read_done_reg_i_3_n_3),
        .O(\state_read[2]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "SR_IDLE:000,SR_ARB:001,SR_RD:010,SR_END:100,SR_INT:011" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_read_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(p_0_in__0[0]),
        .Q(state_read[0]));
  (* FSM_ENCODED_STATES = "SR_IDLE:000,SR_ARB:001,SR_RD:010,SR_END:100,SR_INT:011" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_read_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(p_0_in__0[1]),
        .Q(state_read[1]));
  (* FSM_ENCODED_STATES = "SR_IDLE:000,SR_ARB:001,SR_RD:010,SR_END:100,SR_INT:011" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_read_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(p_0_in__0[2]),
        .Q(state_read[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0400)) 
    \state_write[0]_i_1 
       (.I0(state_write[0]),
        .I1(BVALID),
        .I2(state_write[1]),
        .I3(state_write[2]),
        .I4(\state_write[0]_i_2_n_0 ),
        .I5(\state_write[0]_i_3_n_0 ),
        .O(p_0_in__1[0]));
  LUT6 #(
    .INIT(64'h0808080800000008)) 
    \state_write[0]_i_2 
       (.I0(u2f_fifo_fullN),
        .I1(state_write[1]),
        .I2(state_write[2]),
        .I3(\state_write[2]_i_2_n_0 ),
        .I4(u2f_fifo_wr_dat[40]),
        .I5(state_write[0]),
        .O(\state_write[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00C00074)) 
    \state_write[0]_i_3 
       (.I0(AWREADY),
        .I1(state_write[0]),
        .I2(write_go),
        .I3(state_write[1]),
        .I4(state_write[2]),
        .O(\state_write[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFA2AAA2)) 
    \state_write[1]_i_1 
       (.I0(state_write[1]),
        .I1(u2f_fifo_wr_dat[40]),
        .I2(\state_write[2]_i_2_n_0 ),
        .I3(state_write[0]),
        .I4(AWREADY),
        .I5(state_write[2]),
        .O(p_0_in__1[1]));
  LUT6 #(
    .INIT(64'h00000044F0FF0000)) 
    \state_write[2]_i_1 
       (.I0(\state_write[2]_i_2_n_0 ),
        .I1(u2f_fifo_wr_dat[40]),
        .I2(write_go),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(state_write[1]),
        .O(p_0_in__1[2]));
  LUT2 #(
    .INIT(4'h7)) 
    \state_write[2]_i_2 
       (.I0(u2f_valid),
        .I1(u2f_ready),
        .O(\state_write[2]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "SW_IDLE:000,SW_ARB:001,SW_WR0:010,SW_WR1:011,SW_WR2:100,SW_END:101" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_write_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(p_0_in__1[0]),
        .Q(state_write[0]));
  (* FSM_ENCODED_STATES = "SW_IDLE:000,SW_ARB:001,SW_WR0:010,SW_WR1:011,SW_WR2:100,SW_END:101" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_write_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(p_0_in__1[1]),
        .Q(state_write[1]));
  (* FSM_ENCODED_STATES = "SW_IDLE:000,SW_ARB:001,SW_WR0:010,SW_WR1:011,SW_WR2:100,SW_END:101" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_write_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(p_0_in__1[2]),
        .Q(state_write[2]));
  CARRY8 u2f_fifo_wr_dat_inferred_i_1
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({NLW_u2f_fifo_wr_dat_inferred_i_1_CO_UNCONNECTED[7:5],u2f_fifo_wr_dat[40],u2f_fifo_wr_dat_inferred_i_1_n_4,u2f_fifo_wr_dat_inferred_i_1_n_5,u2f_fifo_wr_dat_inferred_i_1_n_6,u2f_fifo_wr_dat_inferred_i_1_n_7}),
        .DI({1'b0,1'b0,1'b0,countW[8],u2f_fifo_wr_dat_inferred_i_38_n_0,u2f_fifo_wr_dat_inferred_i_39_n_0,u2f_fifo_wr_dat_inferred_i_40_n_0,u2f_fifo_wr_dat_inferred_i_41_n_0}),
        .O(NLW_u2f_fifo_wr_dat_inferred_i_1_O_UNCONNECTED[7:0]),
        .S({1'b0,1'b0,1'b0,u2f_fifo_wr_dat_inferred_i_42_n_0,u2f_fifo_wr_dat_inferred_i_43_n_0,u2f_fifo_wr_dat_inferred_i_44_n_0,u2f_fifo_wr_dat_inferred_i_45_n_0,u2f_fifo_wr_dat_inferred_i_46_n_0}));
  LUT6 #(
    .INIT(64'hFFEAEAEAFFC0C0C0)) 
    u2f_fifo_wr_dat_inferred_i_10
       (.I0(CSIZE[1]),
        .I1(u2f_fifo_wr_dat_inferred_i_47_n_0),
        .I2(u2f_data[3]),
        .I3(u2f_fifo_wr_dat_inferred_i_48_n_0),
        .I4(u2f_data[11]),
        .I5(u2f_data[27]),
        .O(u2f_fifo_wr_dat[27]));
  LUT6 #(
    .INIT(64'hFFEAEAEAFFC0C0C0)) 
    u2f_fifo_wr_dat_inferred_i_11
       (.I0(CSIZE[1]),
        .I1(u2f_fifo_wr_dat_inferred_i_47_n_0),
        .I2(u2f_data[2]),
        .I3(u2f_fifo_wr_dat_inferred_i_48_n_0),
        .I4(u2f_data[10]),
        .I5(u2f_data[26]),
        .O(u2f_fifo_wr_dat[26]));
  LUT6 #(
    .INIT(64'hFFEAEAEAFFC0C0C0)) 
    u2f_fifo_wr_dat_inferred_i_12
       (.I0(CSIZE[1]),
        .I1(u2f_fifo_wr_dat_inferred_i_47_n_0),
        .I2(u2f_data[1]),
        .I3(u2f_fifo_wr_dat_inferred_i_48_n_0),
        .I4(u2f_data[9]),
        .I5(u2f_data[25]),
        .O(u2f_fifo_wr_dat[25]));
  LUT6 #(
    .INIT(64'hFFEAEAEAFFC0C0C0)) 
    u2f_fifo_wr_dat_inferred_i_13
       (.I0(CSIZE[1]),
        .I1(u2f_fifo_wr_dat_inferred_i_47_n_0),
        .I2(u2f_data[0]),
        .I3(u2f_fifo_wr_dat_inferred_i_48_n_0),
        .I4(u2f_data[8]),
        .I5(u2f_data[24]),
        .O(u2f_fifo_wr_dat[24]));
  LUT6 #(
    .INIT(64'hACA0ACA0A0A0ACA0)) 
    u2f_fifo_wr_dat_inferred_i_14
       (.I0(u2f_data[23]),
        .I1(u2f_data[7]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[23]));
  LUT6 #(
    .INIT(64'hACA0ACA0A0A0ACA0)) 
    u2f_fifo_wr_dat_inferred_i_15
       (.I0(u2f_data[22]),
        .I1(u2f_data[6]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[22]));
  LUT6 #(
    .INIT(64'hACA0ACA0A0A0ACA0)) 
    u2f_fifo_wr_dat_inferred_i_16
       (.I0(u2f_data[21]),
        .I1(u2f_data[5]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[21]));
  LUT6 #(
    .INIT(64'hACA0ACA0A0A0ACA0)) 
    u2f_fifo_wr_dat_inferred_i_17
       (.I0(u2f_data[20]),
        .I1(u2f_data[4]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[20]));
  LUT6 #(
    .INIT(64'hACA0ACA0A0A0ACA0)) 
    u2f_fifo_wr_dat_inferred_i_18
       (.I0(u2f_data[19]),
        .I1(u2f_data[3]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[19]));
  LUT6 #(
    .INIT(64'hACA0ACA0A0A0ACA0)) 
    u2f_fifo_wr_dat_inferred_i_19
       (.I0(u2f_data[18]),
        .I1(u2f_data[2]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[18]));
  LUT4 #(
    .INIT(16'hFEEC)) 
    u2f_fifo_wr_dat_inferred_i_2
       (.I0(addrW_dly[1]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[0]),
        .I3(CSIZE[0]),
        .O(u2f_fifo_wr_dat[35]));
  LUT6 #(
    .INIT(64'hACA0ACA0A0A0ACA0)) 
    u2f_fifo_wr_dat_inferred_i_20
       (.I0(u2f_data[17]),
        .I1(u2f_data[1]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[17]));
  LUT6 #(
    .INIT(64'hACA0ACA0A0A0ACA0)) 
    u2f_fifo_wr_dat_inferred_i_21
       (.I0(u2f_data[16]),
        .I1(u2f_data[0]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[16]));
  LUT6 #(
    .INIT(64'hA0AAA0AAA0ACA0A0)) 
    u2f_fifo_wr_dat_inferred_i_22
       (.I0(u2f_data[15]),
        .I1(u2f_data[7]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[15]));
  LUT6 #(
    .INIT(64'hA0AAA0AAA0ACA0A0)) 
    u2f_fifo_wr_dat_inferred_i_23
       (.I0(u2f_data[14]),
        .I1(u2f_data[6]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[14]));
  LUT6 #(
    .INIT(64'hA0AAA0AAA0ACA0A0)) 
    u2f_fifo_wr_dat_inferred_i_24
       (.I0(u2f_data[13]),
        .I1(u2f_data[5]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[13]));
  LUT6 #(
    .INIT(64'hA0AAA0AAA0ACA0A0)) 
    u2f_fifo_wr_dat_inferred_i_25
       (.I0(u2f_data[12]),
        .I1(u2f_data[4]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[12]));
  LUT6 #(
    .INIT(64'hA0AAA0AAA0ACA0A0)) 
    u2f_fifo_wr_dat_inferred_i_26
       (.I0(u2f_data[11]),
        .I1(u2f_data[3]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[11]));
  LUT6 #(
    .INIT(64'hA0AAA0AAA0ACA0A0)) 
    u2f_fifo_wr_dat_inferred_i_27
       (.I0(u2f_data[10]),
        .I1(u2f_data[2]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[10]));
  LUT6 #(
    .INIT(64'hA0AAA0AAA0ACA0A0)) 
    u2f_fifo_wr_dat_inferred_i_28
       (.I0(u2f_data[9]),
        .I1(u2f_data[1]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[9]));
  LUT6 #(
    .INIT(64'hA0AAA0AAA0ACA0A0)) 
    u2f_fifo_wr_dat_inferred_i_29
       (.I0(u2f_data[8]),
        .I1(u2f_data[0]),
        .I2(CSIZE[1]),
        .I3(addrW_dly[1]),
        .I4(addrW_dly[0]),
        .I5(CSIZE[0]),
        .O(u2f_fifo_wr_dat[8]));
  LUT4 #(
    .INIT(16'hFECE)) 
    u2f_fifo_wr_dat_inferred_i_3
       (.I0(addrW_dly[1]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[0]),
        .I3(CSIZE[0]),
        .O(u2f_fifo_wr_dat[34]));
  LUT5 #(
    .INIT(32'hCECF0000)) 
    u2f_fifo_wr_dat_inferred_i_30
       (.I0(CSIZE[0]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[1]),
        .I3(addrW_dly[0]),
        .I4(u2f_data[7]),
        .O(u2f_fifo_wr_dat[7]));
  LUT5 #(
    .INIT(32'hCECF0000)) 
    u2f_fifo_wr_dat_inferred_i_31
       (.I0(CSIZE[0]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[1]),
        .I3(addrW_dly[0]),
        .I4(u2f_data[6]),
        .O(u2f_fifo_wr_dat[6]));
  LUT5 #(
    .INIT(32'hCECF0000)) 
    u2f_fifo_wr_dat_inferred_i_32
       (.I0(CSIZE[0]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[1]),
        .I3(addrW_dly[0]),
        .I4(u2f_data[5]),
        .O(u2f_fifo_wr_dat[5]));
  LUT5 #(
    .INIT(32'hCECF0000)) 
    u2f_fifo_wr_dat_inferred_i_33
       (.I0(CSIZE[0]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[1]),
        .I3(addrW_dly[0]),
        .I4(u2f_data[4]),
        .O(u2f_fifo_wr_dat[4]));
  LUT5 #(
    .INIT(32'hCECF0000)) 
    u2f_fifo_wr_dat_inferred_i_34
       (.I0(CSIZE[0]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[1]),
        .I3(addrW_dly[0]),
        .I4(u2f_data[3]),
        .O(u2f_fifo_wr_dat[3]));
  LUT5 #(
    .INIT(32'hCECF0000)) 
    u2f_fifo_wr_dat_inferred_i_35
       (.I0(CSIZE[0]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[1]),
        .I3(addrW_dly[0]),
        .I4(u2f_data[2]),
        .O(u2f_fifo_wr_dat[2]));
  LUT5 #(
    .INIT(32'hCECF0000)) 
    u2f_fifo_wr_dat_inferred_i_36
       (.I0(CSIZE[0]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[1]),
        .I3(addrW_dly[0]),
        .I4(u2f_data[1]),
        .O(u2f_fifo_wr_dat[1]));
  LUT5 #(
    .INIT(32'hCECF0000)) 
    u2f_fifo_wr_dat_inferred_i_37
       (.I0(CSIZE[0]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[1]),
        .I3(addrW_dly[0]),
        .I4(u2f_data[0]),
        .O(u2f_fifo_wr_dat[0]));
  LUT4 #(
    .INIT(16'h22B2)) 
    u2f_fifo_wr_dat_inferred_i_38
       (.I0(countW[7]),
        .I1(AWLEN[7]),
        .I2(countW[6]),
        .I3(AWLEN[6]),
        .O(u2f_fifo_wr_dat_inferred_i_38_n_0));
  LUT4 #(
    .INIT(16'h20BA)) 
    u2f_fifo_wr_dat_inferred_i_39
       (.I0(countW[5]),
        .I1(AWLEN[4]),
        .I2(countW[4]),
        .I3(AWLEN[5]),
        .O(u2f_fifo_wr_dat_inferred_i_39_n_0));
  LUT4 #(
    .INIT(16'hFDDC)) 
    u2f_fifo_wr_dat_inferred_i_4
       (.I0(addrW_dly[1]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[0]),
        .I3(CSIZE[0]),
        .O(u2f_fifo_wr_dat[33]));
  LUT4 #(
    .INIT(16'h20BA)) 
    u2f_fifo_wr_dat_inferred_i_40
       (.I0(countW[3]),
        .I1(AWLEN[2]),
        .I2(countW[2]),
        .I3(AWLEN[3]),
        .O(u2f_fifo_wr_dat_inferred_i_40_n_0));
  LUT4 #(
    .INIT(16'h20BA)) 
    u2f_fifo_wr_dat_inferred_i_41
       (.I0(countW[1]),
        .I1(AWLEN[0]),
        .I2(countW[0]),
        .I3(AWLEN[1]),
        .O(u2f_fifo_wr_dat_inferred_i_41_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    u2f_fifo_wr_dat_inferred_i_42
       (.I0(countW[8]),
        .O(u2f_fifo_wr_dat_inferred_i_42_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    u2f_fifo_wr_dat_inferred_i_43
       (.I0(AWLEN[7]),
        .I1(countW[7]),
        .I2(AWLEN[6]),
        .I3(countW[6]),
        .O(u2f_fifo_wr_dat_inferred_i_43_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    u2f_fifo_wr_dat_inferred_i_44
       (.I0(AWLEN[5]),
        .I1(countW[5]),
        .I2(AWLEN[4]),
        .I3(countW[4]),
        .O(u2f_fifo_wr_dat_inferred_i_44_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    u2f_fifo_wr_dat_inferred_i_45
       (.I0(AWLEN[3]),
        .I1(countW[3]),
        .I2(AWLEN[2]),
        .I3(countW[2]),
        .O(u2f_fifo_wr_dat_inferred_i_45_n_0));
  LUT4 #(
    .INIT(16'h8421)) 
    u2f_fifo_wr_dat_inferred_i_46
       (.I0(countW[0]),
        .I1(countW[1]),
        .I2(AWLEN[0]),
        .I3(AWLEN[1]),
        .O(u2f_fifo_wr_dat_inferred_i_46_n_0));
  LUT4 #(
    .INIT(16'h0040)) 
    u2f_fifo_wr_dat_inferred_i_47
       (.I0(CSIZE[1]),
        .I1(addrW_dly[1]),
        .I2(addrW_dly[0]),
        .I3(CSIZE[0]),
        .O(u2f_fifo_wr_dat_inferred_i_47_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    u2f_fifo_wr_dat_inferred_i_48
       (.I0(CSIZE[1]),
        .I1(addrW_dly[1]),
        .I2(CSIZE[0]),
        .O(u2f_fifo_wr_dat_inferred_i_48_n_0));
  LUT4 #(
    .INIT(16'hFDCD)) 
    u2f_fifo_wr_dat_inferred_i_5
       (.I0(addrW_dly[1]),
        .I1(CSIZE[1]),
        .I2(addrW_dly[0]),
        .I3(CSIZE[0]),
        .O(u2f_fifo_wr_dat[32]));
  LUT6 #(
    .INIT(64'hFFEAEAEAFFC0C0C0)) 
    u2f_fifo_wr_dat_inferred_i_6
       (.I0(CSIZE[1]),
        .I1(u2f_fifo_wr_dat_inferred_i_47_n_0),
        .I2(u2f_data[7]),
        .I3(u2f_fifo_wr_dat_inferred_i_48_n_0),
        .I4(u2f_data[15]),
        .I5(u2f_data[31]),
        .O(u2f_fifo_wr_dat[31]));
  LUT6 #(
    .INIT(64'hFFEAEAEAFFC0C0C0)) 
    u2f_fifo_wr_dat_inferred_i_7
       (.I0(CSIZE[1]),
        .I1(u2f_fifo_wr_dat_inferred_i_47_n_0),
        .I2(u2f_data[6]),
        .I3(u2f_fifo_wr_dat_inferred_i_48_n_0),
        .I4(u2f_data[14]),
        .I5(u2f_data[30]),
        .O(u2f_fifo_wr_dat[30]));
  LUT6 #(
    .INIT(64'hFFEAEAEAFFC0C0C0)) 
    u2f_fifo_wr_dat_inferred_i_8
       (.I0(CSIZE[1]),
        .I1(u2f_fifo_wr_dat_inferred_i_47_n_0),
        .I2(u2f_data[5]),
        .I3(u2f_fifo_wr_dat_inferred_i_48_n_0),
        .I4(u2f_data[13]),
        .I5(u2f_data[29]),
        .O(u2f_fifo_wr_dat[29]));
  LUT6 #(
    .INIT(64'hFFEAEAEAFFC0C0C0)) 
    u2f_fifo_wr_dat_inferred_i_9
       (.I0(CSIZE[1]),
        .I1(u2f_fifo_wr_dat_inferred_i_47_n_0),
        .I2(u2f_data[4]),
        .I3(u2f_fifo_wr_dat_inferred_i_48_n_0),
        .I4(u2f_data[12]),
        .I5(u2f_data[28]),
        .O(u2f_fifo_wr_dat[28]));
  LUT5 #(
    .INIT(32'h04000000)) 
    u2f_fifo_wr_vld_inferred_i_1
       (.I0(state_write[0]),
        .I1(state_write[1]),
        .I2(state_write[2]),
        .I3(u2f_ready),
        .I4(u2f_valid),
        .O(u2f_fifo_wr_vld));
  LUT6 #(
    .INIT(64'hAEAEEFAEAEAEEEAE)) 
    u2f_ready_i_1
       (.I0(u2f_ready_i_2_n_0),
        .I1(u2f_ready),
        .I2(state_write[1]),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(AWREADY),
        .O(u2f_ready_i_1_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAABFFAAAA)) 
    u2f_ready_i_2
       (.I0(u2f_ready_i_3_n_0),
        .I1(u2f_fifo_fullN),
        .I2(u2f_fifo_wr_dat[40]),
        .I3(u2f_valid),
        .I4(u2f_ready),
        .I5(state_write[2]),
        .O(u2f_ready_i_2_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    u2f_ready_i_3
       (.I0(u2f_fifo_fullN),
        .I1(state_write[0]),
        .I2(state_write[2]),
        .I3(state_write[1]),
        .O(u2f_ready_i_3_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    u2f_ready_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(u_u2f_fifo_i_1_n_0),
        .D(u2f_ready_i_1_n_0),
        .Q(u2f_ready));
  (* FAW = "4" *) 
  (* FDT = "16" *) 
  (* FDW = "32" *) 
  (* FULN = "4" *) 
  trx_fifo_sync_small__parameterized0 u_f2u_fifo
       (.clk(ACLK),
        .clr(1'b0),
        .empty(NLW_u_f2u_fifo_empty_UNCONNECTED),
        .emptyN(NLW_u_f2u_fifo_emptyN_UNCONNECTED),
        .full(NLW_u_f2u_fifo_full_UNCONNECTED),
        .fullN(NLW_u_f2u_fifo_fullN_UNCONNECTED),
        .rd_cnt(NLW_u_f2u_fifo_rd_cnt_UNCONNECTED[4:0]),
        .rd_dout(f2u_data[31:0]),
        .rd_rdy(f2u_ready),
        .rd_vld(f2u_valid),
        .rst(u_u2f_fifo_i_1_n_0),
        .wr_cnt(NLW_u_f2u_fifo_wr_cnt_UNCONNECTED[4:0]),
        .wr_din(f2u_fifo_wr_dat),
        .wr_rdy(f2u_fifo_wr_rdy),
        .wr_vld(u_f2u_fifo_i_1_n_0));
  LUT4 #(
    .INIT(16'h0E00)) 
    u_f2u_fifo_i_1
       (.I0(RVALID),
        .I1(state_read[0]),
        .I2(state_read[2]),
        .I3(state_read[1]),
        .O(u_f2u_fifo_i_1_n_0));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_10
       (.I0(RDATA[23]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[23]),
        .O(f2u_fifo_wr_dat[23]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_11
       (.I0(RDATA[22]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[22]),
        .O(f2u_fifo_wr_dat[22]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_12
       (.I0(RDATA[21]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[21]),
        .O(f2u_fifo_wr_dat[21]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_13
       (.I0(RDATA[20]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[20]),
        .O(f2u_fifo_wr_dat[20]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_14
       (.I0(RDATA[19]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[19]),
        .O(f2u_fifo_wr_dat[19]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_15
       (.I0(RDATA[18]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[18]),
        .O(f2u_fifo_wr_dat[18]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_16
       (.I0(RDATA[17]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[17]),
        .O(f2u_fifo_wr_dat[17]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_17
       (.I0(RDATA[16]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[16]),
        .O(f2u_fifo_wr_dat[16]));
  LUT6 #(
    .INIT(64'hFFFF88F888F888F8)) 
    u_f2u_fifo_i_18
       (.I0(u_f2u_fifo_i_35_n_0),
        .I1(RDATA[15]),
        .I2(f2u_int_data[15]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(RDATA[31]),
        .I5(u_f2u_fifo_i_36_n_0),
        .O(f2u_fifo_wr_dat[15]));
  LUT6 #(
    .INIT(64'hFFFF88F888F888F8)) 
    u_f2u_fifo_i_19
       (.I0(u_f2u_fifo_i_35_n_0),
        .I1(RDATA[14]),
        .I2(f2u_int_data[14]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(RDATA[30]),
        .I5(u_f2u_fifo_i_36_n_0),
        .O(f2u_fifo_wr_dat[14]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_2
       (.I0(RDATA[31]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[31]),
        .O(f2u_fifo_wr_dat[31]));
  LUT6 #(
    .INIT(64'hFFFF88F888F888F8)) 
    u_f2u_fifo_i_20
       (.I0(u_f2u_fifo_i_35_n_0),
        .I1(RDATA[13]),
        .I2(f2u_int_data[13]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(RDATA[29]),
        .I5(u_f2u_fifo_i_36_n_0),
        .O(f2u_fifo_wr_dat[13]));
  LUT6 #(
    .INIT(64'hFFFF88F888F888F8)) 
    u_f2u_fifo_i_21
       (.I0(u_f2u_fifo_i_35_n_0),
        .I1(RDATA[12]),
        .I2(f2u_int_data[12]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(RDATA[28]),
        .I5(u_f2u_fifo_i_36_n_0),
        .O(f2u_fifo_wr_dat[12]));
  LUT6 #(
    .INIT(64'hFFFF88F888F888F8)) 
    u_f2u_fifo_i_22
       (.I0(u_f2u_fifo_i_35_n_0),
        .I1(RDATA[11]),
        .I2(f2u_int_data[11]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(RDATA[27]),
        .I5(u_f2u_fifo_i_36_n_0),
        .O(f2u_fifo_wr_dat[11]));
  LUT6 #(
    .INIT(64'hFFFF88F888F888F8)) 
    u_f2u_fifo_i_23
       (.I0(u_f2u_fifo_i_35_n_0),
        .I1(RDATA[10]),
        .I2(f2u_int_data[10]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(RDATA[26]),
        .I5(u_f2u_fifo_i_36_n_0),
        .O(f2u_fifo_wr_dat[10]));
  LUT6 #(
    .INIT(64'hFFFF88F888F888F8)) 
    u_f2u_fifo_i_24
       (.I0(u_f2u_fifo_i_35_n_0),
        .I1(RDATA[9]),
        .I2(f2u_int_data[9]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(RDATA[25]),
        .I5(u_f2u_fifo_i_36_n_0),
        .O(f2u_fifo_wr_dat[9]));
  LUT6 #(
    .INIT(64'hFFFF88F888F888F8)) 
    u_f2u_fifo_i_25
       (.I0(u_f2u_fifo_i_35_n_0),
        .I1(RDATA[8]),
        .I2(f2u_int_data[8]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(RDATA[24]),
        .I5(u_f2u_fifo_i_36_n_0),
        .O(f2u_fifo_wr_dat[8]));
  LUT5 #(
    .INIT(32'hEAFFEAEA)) 
    u_f2u_fifo_i_26
       (.I0(u_f2u_fifo_i_37_n_0),
        .I1(u_f2u_fifo_i_38_n_0),
        .I2(RDATA[31]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(f2u_int_data[7]),
        .O(f2u_fifo_wr_dat[7]));
  LUT5 #(
    .INIT(32'hEAFFEAEA)) 
    u_f2u_fifo_i_27
       (.I0(u_f2u_fifo_i_39_n_0),
        .I1(u_f2u_fifo_i_38_n_0),
        .I2(RDATA[30]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(f2u_int_data[6]),
        .O(f2u_fifo_wr_dat[6]));
  LUT5 #(
    .INIT(32'hEAFFEAEA)) 
    u_f2u_fifo_i_28
       (.I0(u_f2u_fifo_i_40_n_0),
        .I1(u_f2u_fifo_i_38_n_0),
        .I2(RDATA[29]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(f2u_int_data[5]),
        .O(f2u_fifo_wr_dat[5]));
  LUT5 #(
    .INIT(32'hEAFFEAEA)) 
    u_f2u_fifo_i_29
       (.I0(u_f2u_fifo_i_41_n_0),
        .I1(u_f2u_fifo_i_38_n_0),
        .I2(RDATA[28]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(f2u_int_data[4]),
        .O(f2u_fifo_wr_dat[4]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_3
       (.I0(RDATA[30]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[30]),
        .O(f2u_fifo_wr_dat[30]));
  LUT5 #(
    .INIT(32'hEAFFEAEA)) 
    u_f2u_fifo_i_30
       (.I0(u_f2u_fifo_i_42_n_0),
        .I1(u_f2u_fifo_i_38_n_0),
        .I2(RDATA[27]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(f2u_int_data[3]),
        .O(f2u_fifo_wr_dat[3]));
  LUT5 #(
    .INIT(32'hEAFFEAEA)) 
    u_f2u_fifo_i_31
       (.I0(u_f2u_fifo_i_43_n_0),
        .I1(u_f2u_fifo_i_38_n_0),
        .I2(RDATA[26]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(f2u_int_data[2]),
        .O(f2u_fifo_wr_dat[2]));
  LUT5 #(
    .INIT(32'hEAFFEAEA)) 
    u_f2u_fifo_i_32
       (.I0(u_f2u_fifo_i_44_n_0),
        .I1(u_f2u_fifo_i_38_n_0),
        .I2(RDATA[25]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(f2u_int_data[1]),
        .O(f2u_fifo_wr_dat[1]));
  LUT5 #(
    .INIT(32'hEAFFEAEA)) 
    u_f2u_fifo_i_33
       (.I0(u_f2u_fifo_i_45_n_0),
        .I1(u_f2u_fifo_i_38_n_0),
        .I2(RDATA[24]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(f2u_int_data[0]),
        .O(f2u_fifo_wr_dat[0]));
  LUT3 #(
    .INIT(8'hDF)) 
    u_f2u_fifo_i_34
       (.I0(state_read[1]),
        .I1(state_read[2]),
        .I2(state_read[0]),
        .O(u_f2u_fifo_i_34_n_0));
  LUT5 #(
    .INIT(32'hCCCCC400)) 
    u_f2u_fifo_i_35
       (.I0(addrR[1]),
        .I1(u_f2u_fifo_i_34_n_0),
        .I2(addrR[0]),
        .I3(CSIZE[0]),
        .I4(CSIZE[1]),
        .O(u_f2u_fifo_i_35_n_0));
  LUT5 #(
    .INIT(32'h10000000)) 
    u_f2u_fifo_i_36
       (.I0(addrR[0]),
        .I1(CSIZE[1]),
        .I2(u_f2u_fifo_i_34_n_0),
        .I3(addrR[1]),
        .I4(CSIZE[0]),
        .O(u_f2u_fifo_i_36_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    u_f2u_fifo_i_37
       (.I0(u_f2u_fifo_i_46_n_0),
        .I1(RDATA[7]),
        .I2(u_f2u_fifo_i_47_n_0),
        .I3(RDATA[15]),
        .I4(RDATA[23]),
        .I5(u_f2u_fifo_i_48_n_0),
        .O(u_f2u_fifo_i_37_n_0));
  LUT5 #(
    .INIT(32'h00004000)) 
    u_f2u_fifo_i_38
       (.I0(CSIZE[0]),
        .I1(addrR[0]),
        .I2(addrR[1]),
        .I3(u_f2u_fifo_i_34_n_0),
        .I4(CSIZE[1]),
        .O(u_f2u_fifo_i_38_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    u_f2u_fifo_i_39
       (.I0(u_f2u_fifo_i_46_n_0),
        .I1(RDATA[6]),
        .I2(u_f2u_fifo_i_47_n_0),
        .I3(RDATA[14]),
        .I4(RDATA[22]),
        .I5(u_f2u_fifo_i_48_n_0),
        .O(u_f2u_fifo_i_39_n_0));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_4
       (.I0(RDATA[29]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[29]),
        .O(f2u_fifo_wr_dat[29]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    u_f2u_fifo_i_40
       (.I0(u_f2u_fifo_i_46_n_0),
        .I1(RDATA[5]),
        .I2(u_f2u_fifo_i_47_n_0),
        .I3(RDATA[13]),
        .I4(RDATA[21]),
        .I5(u_f2u_fifo_i_48_n_0),
        .O(u_f2u_fifo_i_40_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    u_f2u_fifo_i_41
       (.I0(u_f2u_fifo_i_46_n_0),
        .I1(RDATA[4]),
        .I2(u_f2u_fifo_i_47_n_0),
        .I3(RDATA[12]),
        .I4(RDATA[20]),
        .I5(u_f2u_fifo_i_48_n_0),
        .O(u_f2u_fifo_i_41_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    u_f2u_fifo_i_42
       (.I0(u_f2u_fifo_i_46_n_0),
        .I1(RDATA[3]),
        .I2(u_f2u_fifo_i_47_n_0),
        .I3(RDATA[11]),
        .I4(RDATA[19]),
        .I5(u_f2u_fifo_i_48_n_0),
        .O(u_f2u_fifo_i_42_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    u_f2u_fifo_i_43
       (.I0(u_f2u_fifo_i_46_n_0),
        .I1(RDATA[2]),
        .I2(u_f2u_fifo_i_47_n_0),
        .I3(RDATA[10]),
        .I4(RDATA[18]),
        .I5(u_f2u_fifo_i_48_n_0),
        .O(u_f2u_fifo_i_43_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    u_f2u_fifo_i_44
       (.I0(u_f2u_fifo_i_46_n_0),
        .I1(RDATA[1]),
        .I2(u_f2u_fifo_i_47_n_0),
        .I3(RDATA[9]),
        .I4(RDATA[17]),
        .I5(u_f2u_fifo_i_48_n_0),
        .O(u_f2u_fifo_i_44_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    u_f2u_fifo_i_45
       (.I0(u_f2u_fifo_i_46_n_0),
        .I1(RDATA[0]),
        .I2(u_f2u_fifo_i_47_n_0),
        .I3(RDATA[8]),
        .I4(RDATA[16]),
        .I5(u_f2u_fifo_i_48_n_0),
        .O(u_f2u_fifo_i_45_n_0));
  LUT5 #(
    .INIT(32'hCCCCC404)) 
    u_f2u_fifo_i_46
       (.I0(addrR[1]),
        .I1(u_f2u_fifo_i_34_n_0),
        .I2(addrR[0]),
        .I3(CSIZE[0]),
        .I4(CSIZE[1]),
        .O(u_f2u_fifo_i_46_n_0));
  LUT5 #(
    .INIT(32'h00040000)) 
    u_f2u_fifo_i_47
       (.I0(addrR[1]),
        .I1(addrR[0]),
        .I2(CSIZE[0]),
        .I3(CSIZE[1]),
        .I4(u_f2u_fifo_i_34_n_0),
        .O(u_f2u_fifo_i_47_n_0));
  LUT6 #(
    .INIT(64'h000000000000A2AA)) 
    u_f2u_fifo_i_48
       (.I0(addrR[1]),
        .I1(state_read[0]),
        .I2(state_read[2]),
        .I3(state_read[1]),
        .I4(CSIZE[1]),
        .I5(addrR[0]),
        .O(u_f2u_fifo_i_48_n_0));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_5
       (.I0(RDATA[28]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[28]),
        .O(f2u_fifo_wr_dat[28]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_6
       (.I0(RDATA[27]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[27]),
        .O(f2u_fifo_wr_dat[27]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_7
       (.I0(RDATA[26]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[26]),
        .O(f2u_fifo_wr_dat[26]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_8
       (.I0(RDATA[25]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[25]),
        .O(f2u_fifo_wr_dat[25]));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    u_f2u_fifo_i_9
       (.I0(RDATA[24]),
        .I1(CSIZE[1]),
        .I2(CSIZE[0]),
        .I3(addrR[0]),
        .I4(u_f2u_fifo_i_34_n_0),
        .I5(f2u_int_data[24]),
        .O(f2u_fifo_wr_dat[24]));
  (* FAW = "4" *) 
  (* FDT = "16" *) 
  (* FDW = "41" *) 
  (* FULN = "4" *) 
  trx_fifo_sync_small u_u2f_fifo
       (.clk(ACLK),
        .clr(1'b0),
        .empty(u2f_fifo_empty),
        .emptyN(u2f_fifo_emptyN),
        .full(u2f_fifo_full),
        .fullN(u2f_fifo_fullN),
        .rd_cnt(NLW_u_u2f_fifo_rd_cnt_UNCONNECTED[4:0]),
        .rd_dout(u2f_fifo_rd_dat),
        .rd_rdy(u2f_fifo_rd_rdy),
        .rd_vld(u2f_fifo_rd_vld),
        .rst(u_u2f_fifo_i_1_n_0),
        .wr_cnt(NLW_u_u2f_fifo_wr_cnt_UNCONNECTED[4:0]),
        .wr_din(u2f_fifo_wr_dat),
        .wr_rdy(u2f_fifo_wr_rdy),
        .wr_vld(u2f_fifo_wr_vld));
  LUT1 #(
    .INIT(2'h1)) 
    u_u2f_fifo_i_1
       (.I0(ARESETn),
        .O(u_u2f_fifo_i_1_n_0));
  LUT6 #(
    .INIT(64'h0F050404FFFF0000)) 
    write_done_i_1
       (.I0(state_write[0]),
        .I1(BVALID),
        .I2(state_write[1]),
        .I3(write_go),
        .I4(write_done),
        .I5(state_write[2]),
        .O(write_done_i_1_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    write_done_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(write_done_i_1_n_0),
        .Q(write_done));
  LUT3 #(
    .INIT(8'hEA)) 
    write_go_i_1
       (.I0(write_go_i_2_n_0),
        .I1(CWRITE),
        .I2(write_go_i_3_n_0),
        .O(write_go_i_1_n_0));
  LUT6 #(
    .INIT(64'h4F4F5F5F00000200)) 
    write_go_i_2
       (.I0(state_cmd[2]),
        .I1(state_cmd[0]),
        .I2(state_cmd[1]),
        .I3(CWRITE),
        .I4(write_done),
        .I5(write_go),
        .O(write_go_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000080000)) 
    write_go_i_3
       (.I0(cmd_ready),
        .I1(cmd_valid),
        .I2(CEI),
        .I3(state_cmd[2]),
        .I4(state_cmd[0]),
        .I5(state_cmd[1]),
        .O(write_go_i_3_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    write_go_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(read_go_i_2_n_0),
        .D(write_go_i_1_n_0),
        .Q(write_go));
endmodule

(* FAW = "4" *) (* FDT = "16" *) (* FDW = "41" *) 
(* FULN = "4" *) 
module trx_fifo_sync_small
   (rst,
    clr,
    clk,
    wr_rdy,
    wr_vld,
    wr_din,
    rd_rdy,
    rd_vld,
    rd_dout,
    full,
    empty,
    fullN,
    emptyN,
    rd_cnt,
    wr_cnt);
  input rst;
  input clr;
  input clk;
  output wr_rdy;
  input wr_vld;
  input [40:0]wr_din;
  input rd_rdy;
  output rd_vld;
  output [40:0]rd_dout;
  output full;
  output empty;
  output fullN;
  output emptyN;
  output [4:0]rd_cnt;
  output [4:0]wr_cnt;

  wire Mem_reg_0_15_28_40_i_1_n_0;
  wire clk;
  wire clr;
  wire empty;
  wire emptyN;
  wire empty_INST_0_i_1_n_0;
  wire [4:0]fifo_head;
  wire \fifo_head[0]_i_1_n_0 ;
  wire \fifo_head[1]_i_1_n_0 ;
  wire \fifo_head[2]_i_1_n_0 ;
  wire \fifo_head[3]_i_1_n_0 ;
  wire \fifo_head[4]_i_2_n_0 ;
  wire [3:0]fifo_head_reg_rep__0;
  wire [4:0]fifo_tail;
  wire \fifo_tail[0]_i_1_n_0 ;
  wire \fifo_tail[1]_i_1_n_0 ;
  wire \fifo_tail[2]_i_1_n_0 ;
  wire \fifo_tail[3]_i_1_n_0 ;
  wire \fifo_tail[4]_i_2_n_0 ;
  wire full;
  wire fullN;
  wire next_head;
  wire \next_head[0]_i_1_n_0 ;
  wire \next_head[1]_i_1_n_0 ;
  wire \next_head[2]_i_1_n_0 ;
  wire \next_head[3]_i_1_n_0 ;
  wire \next_head[4]_i_1_n_0 ;
  wire [4:0]next_head_reg__0;
  wire next_tail;
  wire \next_tail[0]_i_1_n_0 ;
  wire \next_tail[1]_i_1_n_0 ;
  wire \next_tail[2]_i_1_n_0 ;
  wire \next_tail[3]_i_1_n_0 ;
  wire \next_tail[4]_i_1_n_0 ;
  wire [4:0]next_tail_reg__0;
  wire [3:0]\^rd_cnt ;
  wire rd_cnt13_out;
  wire \rd_cnt[0]_i_1_n_0 ;
  wire \rd_cnt[1]_i_1_n_0 ;
  wire \rd_cnt[2]_i_1_n_0 ;
  wire \rd_cnt[3]_i_1_n_0 ;
  wire \rd_cnt[4]_i_1_n_0 ;
  wire \rd_cnt[4]_i_2_n_0 ;
  wire \rd_cnt[4]_i_3_n_0 ;
  wire \rd_cnt[4]_i_4_n_0 ;
  wire \rd_cnt[4]_i_5_n_0 ;
  wire \rd_cnt[4]_i_6_n_0 ;
  wire [40:0]rd_dout;
  wire rd_rdy;
  wire rd_vld;
  wire rst;
  wire [4:1]\^wr_cnt ;
  wire [40:0]wr_din;
  wire wr_rdy;
  wire wr_vld;
  wire [1:0]NLW_Mem_reg_0_15_0_13_DOH_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_14_27_DOH_UNCONNECTED;
  wire [1:1]NLW_Mem_reg_0_15_28_40_DOG_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_28_40_DOH_UNCONNECTED;

  assign rd_cnt[4] = full;
  assign rd_cnt[3:0] = \^rd_cnt [3:0];
  assign wr_cnt[4:1] = \^wr_cnt [4:1];
  assign wr_cnt[0] = \^rd_cnt [0];
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 Mem_reg_0_15_0_13
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_head_reg_rep__0}),
        .ADDRE({1'b0,fifo_head_reg_rep__0}),
        .ADDRF({1'b0,fifo_head_reg_rep__0}),
        .ADDRG({1'b0,fifo_head_reg_rep__0}),
        .ADDRH({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[1:0]),
        .DIB(wr_din[3:2]),
        .DIC(wr_din[5:4]),
        .DID(wr_din[7:6]),
        .DIE(wr_din[9:8]),
        .DIF(wr_din[11:10]),
        .DIG(wr_din[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(rd_dout[1:0]),
        .DOB(rd_dout[3:2]),
        .DOC(rd_dout[5:4]),
        .DOD(rd_dout[7:6]),
        .DOE(rd_dout[9:8]),
        .DOF(rd_dout[11:10]),
        .DOG(rd_dout[13:12]),
        .DOH(NLW_Mem_reg_0_15_0_13_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_28_40_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "27" *) 
  RAM32M16 Mem_reg_0_15_14_27
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_head_reg_rep__0}),
        .ADDRE({1'b0,fifo_head_reg_rep__0}),
        .ADDRF({1'b0,fifo_head_reg_rep__0}),
        .ADDRG({1'b0,fifo_head_reg_rep__0}),
        .ADDRH({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[15:14]),
        .DIB(wr_din[17:16]),
        .DIC(wr_din[19:18]),
        .DID(wr_din[21:20]),
        .DIE(wr_din[23:22]),
        .DIF(wr_din[25:24]),
        .DIG(wr_din[27:26]),
        .DIH({1'b0,1'b0}),
        .DOA(rd_dout[15:14]),
        .DOB(rd_dout[17:16]),
        .DOC(rd_dout[19:18]),
        .DOD(rd_dout[21:20]),
        .DOE(rd_dout[23:22]),
        .DOF(rd_dout[25:24]),
        .DOG(rd_dout[27:26]),
        .DOH(NLW_Mem_reg_0_15_14_27_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_28_40_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "28" *) 
  (* ram_slice_end = "40" *) 
  RAM32M16 Mem_reg_0_15_28_40
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_head_reg_rep__0}),
        .ADDRE({1'b0,fifo_head_reg_rep__0}),
        .ADDRF({1'b0,fifo_head_reg_rep__0}),
        .ADDRG({1'b0,fifo_head_reg_rep__0}),
        .ADDRH({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[29:28]),
        .DIB(wr_din[31:30]),
        .DIC(wr_din[33:32]),
        .DID(wr_din[35:34]),
        .DIE(wr_din[37:36]),
        .DIF(wr_din[39:38]),
        .DIG({1'b0,wr_din[40]}),
        .DIH({1'b0,1'b0}),
        .DOA(rd_dout[29:28]),
        .DOB(rd_dout[31:30]),
        .DOC(rd_dout[33:32]),
        .DOD(rd_dout[35:34]),
        .DOE(rd_dout[37:36]),
        .DOF(rd_dout[39:38]),
        .DOG({NLW_Mem_reg_0_15_28_40_DOG_UNCONNECTED[1],rd_dout[40]}),
        .DOH(NLW_Mem_reg_0_15_28_40_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_28_40_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    Mem_reg_0_15_28_40_i_1
       (.I0(wr_vld),
        .I1(full),
        .O(Mem_reg_0_15_28_40_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h0000001F)) 
    emptyN_INST_0
       (.I0(\^rd_cnt [1]),
        .I1(\^rd_cnt [0]),
        .I2(\^rd_cnt [2]),
        .I3(\^rd_cnt [3]),
        .I4(full),
        .O(emptyN));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT5 #(
    .INIT(32'h82000082)) 
    empty_INST_0
       (.I0(empty_INST_0_i_1_n_0),
        .I1(fifo_tail[0]),
        .I2(fifo_head[0]),
        .I3(fifo_tail[4]),
        .I4(fifo_head[4]),
        .O(empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    empty_INST_0_i_1
       (.I0(fifo_tail[3]),
        .I1(fifo_head[3]),
        .I2(fifo_tail[1]),
        .I3(fifo_head[1]),
        .I4(fifo_head[2]),
        .I5(fifo_tail[2]),
        .O(empty_INST_0_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_head[0]_i_1 
       (.I0(clr),
        .I1(next_head_reg__0[0]),
        .O(\fifo_head[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[1]_i_1 
       (.I0(next_head_reg__0[1]),
        .I1(clr),
        .O(\fifo_head[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_head[2]_i_1 
       (.I0(clr),
        .I1(next_head_reg__0[2]),
        .O(\fifo_head[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_head[3]_i_1 
       (.I0(clr),
        .I1(next_head_reg__0[3]),
        .O(\fifo_head[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_head[4]_i_1 
       (.I0(clr),
        .I1(\rd_cnt[4]_i_3_n_0 ),
        .O(next_head));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[4]_i_2 
       (.I0(next_head_reg__0[4]),
        .I1(clr),
        .O(\fifo_head[4]_i_2_n_0 ));
  FDCE \fifo_head_reg[0] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[0]_i_1_n_0 ),
        .Q(fifo_head[0]));
  FDCE \fifo_head_reg[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[1]_i_1_n_0 ),
        .Q(fifo_head[1]));
  FDCE \fifo_head_reg[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[2]_i_1_n_0 ),
        .Q(fifo_head[2]));
  FDCE \fifo_head_reg[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[3]_i_1_n_0 ),
        .Q(fifo_head[3]));
  FDCE \fifo_head_reg[4] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[4]_i_2_n_0 ),
        .Q(fifo_head[4]));
  FDCE \fifo_head_reg_rep[0] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[0]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[0]));
  FDCE \fifo_head_reg_rep[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[1]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[1]));
  FDCE \fifo_head_reg_rep[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[2]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[2]));
  FDCE \fifo_head_reg_rep[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[3]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_tail[0]_i_1 
       (.I0(clr),
        .I1(next_tail_reg__0[0]),
        .O(\fifo_tail[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[1]_i_1 
       (.I0(next_tail_reg__0[1]),
        .I1(clr),
        .O(\fifo_tail[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[2]_i_1 
       (.I0(next_tail_reg__0[2]),
        .I1(clr),
        .O(\fifo_tail[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[3]_i_1 
       (.I0(next_tail_reg__0[3]),
        .I1(clr),
        .O(\fifo_tail[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAE)) 
    \fifo_tail[4]_i_1 
       (.I0(clr),
        .I1(wr_vld),
        .I2(full),
        .O(next_tail));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_tail[4]_i_2 
       (.I0(clr),
        .I1(next_tail_reg__0[4]),
        .O(\fifo_tail[4]_i_2_n_0 ));
  FDCE \fifo_tail_reg[0] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\fifo_tail[0]_i_1_n_0 ),
        .Q(fifo_tail[0]));
  FDCE \fifo_tail_reg[1] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\fifo_tail[1]_i_1_n_0 ),
        .Q(fifo_tail[1]));
  FDCE \fifo_tail_reg[2] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\fifo_tail[2]_i_1_n_0 ),
        .Q(fifo_tail[2]));
  FDCE \fifo_tail_reg[3] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\fifo_tail[3]_i_1_n_0 ),
        .Q(fifo_tail[3]));
  FDCE \fifo_tail_reg[4] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\fifo_tail[4]_i_2_n_0 ),
        .Q(fifo_tail[4]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    fullN_INST_0
       (.I0(\^rd_cnt [3]),
        .I1(\^rd_cnt [2]),
        .I2(full),
        .O(fullN));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \next_head[0]_i_1 
       (.I0(clr),
        .I1(next_head_reg__0[0]),
        .O(\next_head[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'h12)) 
    \next_head[1]_i_1 
       (.I0(next_head_reg__0[1]),
        .I1(clr),
        .I2(next_head_reg__0[0]),
        .O(\next_head[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \next_head[2]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[2]),
        .I3(clr),
        .O(\next_head[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \next_head[3]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[2]),
        .I3(next_head_reg__0[3]),
        .I4(clr),
        .O(\next_head[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \next_head[4]_i_1 
       (.I0(next_head_reg__0[2]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[0]),
        .I3(next_head_reg__0[3]),
        .I4(next_head_reg__0[4]),
        .I5(clr),
        .O(\next_head[4]_i_1_n_0 ));
  FDPE \next_head_reg[0] 
       (.C(clk),
        .CE(next_head),
        .D(\next_head[0]_i_1_n_0 ),
        .PRE(rst),
        .Q(next_head_reg__0[0]));
  FDCE \next_head_reg[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\next_head[1]_i_1_n_0 ),
        .Q(next_head_reg__0[1]));
  FDCE \next_head_reg[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\next_head[2]_i_1_n_0 ),
        .Q(next_head_reg__0[2]));
  FDCE \next_head_reg[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\next_head[3]_i_1_n_0 ),
        .Q(next_head_reg__0[3]));
  FDCE \next_head_reg[4] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\next_head[4]_i_1_n_0 ),
        .Q(next_head_reg__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \next_tail[0]_i_1 
       (.I0(clr),
        .I1(next_tail_reg__0[0]),
        .O(\next_tail[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h12)) 
    \next_tail[1]_i_1 
       (.I0(next_tail_reg__0[1]),
        .I1(clr),
        .I2(next_tail_reg__0[0]),
        .O(\next_tail[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \next_tail[2]_i_1 
       (.I0(next_tail_reg__0[0]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[2]),
        .I3(clr),
        .O(\next_tail[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \next_tail[3]_i_1 
       (.I0(next_tail_reg__0[0]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[2]),
        .I3(next_tail_reg__0[3]),
        .I4(clr),
        .O(\next_tail[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \next_tail[4]_i_1 
       (.I0(next_tail_reg__0[2]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[0]),
        .I3(next_tail_reg__0[3]),
        .I4(next_tail_reg__0[4]),
        .I5(clr),
        .O(\next_tail[4]_i_1_n_0 ));
  FDPE \next_tail_reg[0] 
       (.C(clk),
        .CE(next_tail),
        .D(\next_tail[0]_i_1_n_0 ),
        .PRE(rst),
        .Q(next_tail_reg__0[0]));
  FDCE \next_tail_reg[1] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\next_tail[1]_i_1_n_0 ),
        .Q(next_tail_reg__0[1]));
  FDCE \next_tail_reg[2] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\next_tail[2]_i_1_n_0 ),
        .Q(next_tail_reg__0[2]));
  FDCE \next_tail_reg[3] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\next_tail[3]_i_1_n_0 ),
        .Q(next_tail_reg__0[3]));
  FDCE \next_tail_reg[4] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\next_tail[4]_i_1_n_0 ),
        .Q(next_tail_reg__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \rd_cnt[0]_i_1 
       (.I0(clr),
        .I1(\^rd_cnt [0]),
        .O(\rd_cnt[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F70808F7)) 
    \rd_cnt[1]_i_1 
       (.I0(\rd_cnt[4]_i_3_n_0 ),
        .I1(wr_vld),
        .I2(full),
        .I3(\^rd_cnt [0]),
        .I4(\^rd_cnt [1]),
        .I5(clr),
        .O(\rd_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'h00007E81)) 
    \rd_cnt[2]_i_1 
       (.I0(\^rd_cnt [0]),
        .I1(\^rd_cnt [1]),
        .I2(rd_cnt13_out),
        .I3(\^rd_cnt [2]),
        .I4(clr),
        .O(\rd_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1444444444444441)) 
    \rd_cnt[3]_i_1 
       (.I0(clr),
        .I1(\^rd_cnt [3]),
        .I2(\^rd_cnt [2]),
        .I3(\^rd_cnt [0]),
        .I4(\^rd_cnt [1]),
        .I5(rd_cnt13_out),
        .O(\rd_cnt[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'h0000D500)) 
    \rd_cnt[3]_i_2 
       (.I0(rd_rdy),
        .I1(empty_INST_0_i_1_n_0),
        .I2(\rd_cnt[4]_i_5_n_0 ),
        .I3(wr_vld),
        .I4(full),
        .O(rd_cnt13_out));
  LUT4 #(
    .INIT(16'hBBEB)) 
    \rd_cnt[4]_i_1 
       (.I0(clr),
        .I1(\rd_cnt[4]_i_3_n_0 ),
        .I2(wr_vld),
        .I3(full),
        .O(\rd_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1444444444444441)) 
    \rd_cnt[4]_i_2 
       (.I0(clr),
        .I1(full),
        .I2(\^rd_cnt [2]),
        .I3(\rd_cnt[4]_i_4_n_0 ),
        .I4(\^rd_cnt [1]),
        .I5(\^rd_cnt [3]),
        .O(\rd_cnt[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h90090000FFFFFFFF)) 
    \rd_cnt[4]_i_3 
       (.I0(fifo_head[4]),
        .I1(fifo_tail[4]),
        .I2(fifo_head[0]),
        .I3(fifo_tail[0]),
        .I4(empty_INST_0_i_1_n_0),
        .I5(rd_rdy),
        .O(\rd_cnt[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BB2B2B2B)) 
    \rd_cnt[4]_i_4 
       (.I0(\^rd_cnt [0]),
        .I1(\^rd_cnt [1]),
        .I2(rd_rdy),
        .I3(empty_INST_0_i_1_n_0),
        .I4(\rd_cnt[4]_i_5_n_0 ),
        .I5(\rd_cnt[4]_i_6_n_0 ),
        .O(\rd_cnt[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    \rd_cnt[4]_i_5 
       (.I0(fifo_tail[0]),
        .I1(fifo_head[0]),
        .I2(fifo_tail[4]),
        .I3(fifo_head[4]),
        .O(\rd_cnt[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'hD)) 
    \rd_cnt[4]_i_6 
       (.I0(wr_vld),
        .I1(full),
        .O(\rd_cnt[4]_i_6_n_0 ));
  FDCE \rd_cnt_reg[0] 
       (.C(clk),
        .CE(\rd_cnt[4]_i_1_n_0 ),
        .CLR(rst),
        .D(\rd_cnt[0]_i_1_n_0 ),
        .Q(\^rd_cnt [0]));
  FDCE \rd_cnt_reg[1] 
       (.C(clk),
        .CE(\rd_cnt[4]_i_1_n_0 ),
        .CLR(rst),
        .D(\rd_cnt[1]_i_1_n_0 ),
        .Q(\^rd_cnt [1]));
  FDCE \rd_cnt_reg[2] 
       (.C(clk),
        .CE(\rd_cnt[4]_i_1_n_0 ),
        .CLR(rst),
        .D(\rd_cnt[2]_i_1_n_0 ),
        .Q(\^rd_cnt [2]));
  FDCE \rd_cnt_reg[3] 
       (.C(clk),
        .CE(\rd_cnt[4]_i_1_n_0 ),
        .CLR(rst),
        .D(\rd_cnt[3]_i_1_n_0 ),
        .Q(\^rd_cnt [3]));
  FDCE \rd_cnt_reg[4] 
       (.C(clk),
        .CE(\rd_cnt[4]_i_1_n_0 ),
        .CLR(rst),
        .D(\rd_cnt[4]_i_2_n_0 ),
        .Q(full));
  LUT1 #(
    .INIT(2'h1)) 
    rd_vld_INST_0
       (.I0(empty),
        .O(rd_vld));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_cnt[1]_INST_0 
       (.I0(\^rd_cnt [1]),
        .I1(\^rd_cnt [0]),
        .O(\^wr_cnt [1]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \wr_cnt[2]_INST_0 
       (.I0(\^rd_cnt [0]),
        .I1(\^rd_cnt [1]),
        .I2(\^rd_cnt [2]),
        .O(\^wr_cnt [2]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h01FE)) 
    \wr_cnt[3]_INST_0 
       (.I0(\^rd_cnt [2]),
        .I1(\^rd_cnt [1]),
        .I2(\^rd_cnt [0]),
        .I3(\^rd_cnt [3]),
        .O(\^wr_cnt [3]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \wr_cnt[4]_INST_0 
       (.I0(\^rd_cnt [1]),
        .I1(\^rd_cnt [0]),
        .I2(\^rd_cnt [2]),
        .I3(\^rd_cnt [3]),
        .I4(full),
        .O(\^wr_cnt [4]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT1 #(
    .INIT(2'h1)) 
    wr_rdy_INST_0
       (.I0(full),
        .O(wr_rdy));
endmodule

(* FAW = "4" *) (* FDT = "16" *) (* FDW = "32" *) 
(* FULN = "4" *) (* ORIG_REF_NAME = "trx_fifo_sync_small" *) 
module trx_fifo_sync_small__parameterized0
   (rst,
    clr,
    clk,
    wr_rdy,
    wr_vld,
    wr_din,
    rd_rdy,
    rd_vld,
    rd_dout,
    full,
    empty,
    fullN,
    emptyN,
    rd_cnt,
    wr_cnt);
  input rst;
  input clr;
  input clk;
  output wr_rdy;
  input wr_vld;
  input [31:0]wr_din;
  input rd_rdy;
  output rd_vld;
  output [31:0]rd_dout;
  output full;
  output empty;
  output fullN;
  output emptyN;
  output [4:0]rd_cnt;
  output [4:0]wr_cnt;

  wire Mem_reg_0_15_28_31_i_1_n_0;
  wire clk;
  wire clr;
  wire empty;
  wire emptyN;
  wire empty_INST_0_i_1_n_0;
  wire [4:0]fifo_head;
  wire \fifo_head[0]_i_1_n_0 ;
  wire \fifo_head[1]_i_1_n_0 ;
  wire \fifo_head[2]_i_1_n_0 ;
  wire \fifo_head[3]_i_1_n_0 ;
  wire \fifo_head[4]_i_2_n_0 ;
  wire [3:0]fifo_head_reg_rep__0;
  wire [4:0]fifo_tail;
  wire \fifo_tail[0]_i_1_n_0 ;
  wire \fifo_tail[1]_i_1_n_0 ;
  wire \fifo_tail[2]_i_1_n_0 ;
  wire \fifo_tail[3]_i_1_n_0 ;
  wire \fifo_tail[4]_i_2_n_0 ;
  wire full;
  wire fullN;
  wire next_head;
  wire \next_head[0]_i_1_n_0 ;
  wire \next_head[1]_i_1_n_0 ;
  wire \next_head[2]_i_1_n_0 ;
  wire \next_head[3]_i_1_n_0 ;
  wire \next_head[4]_i_1_n_0 ;
  wire [4:0]next_head_reg__0;
  wire next_tail;
  wire \next_tail[0]_i_1_n_0 ;
  wire \next_tail[1]_i_1_n_0 ;
  wire \next_tail[2]_i_1_n_0 ;
  wire \next_tail[3]_i_1_n_0 ;
  wire \next_tail[4]_i_1_n_0 ;
  wire [4:0]next_tail_reg__0;
  wire [3:0]\^rd_cnt ;
  wire rd_cnt13_out;
  wire \rd_cnt[0]_i_1_n_0 ;
  wire \rd_cnt[1]_i_1_n_0 ;
  wire \rd_cnt[2]_i_1_n_0 ;
  wire \rd_cnt[3]_i_1_n_0 ;
  wire \rd_cnt[4]_i_1_n_0 ;
  wire \rd_cnt[4]_i_2_n_0 ;
  wire \rd_cnt[4]_i_3_n_0 ;
  wire \rd_cnt[4]_i_4_n_0 ;
  wire \rd_cnt[4]_i_5_n_0 ;
  wire \rd_cnt[4]_i_6_n_0 ;
  wire [31:0]rd_dout;
  wire rd_rdy;
  wire rd_vld;
  wire rst;
  wire [4:1]\^wr_cnt ;
  wire [31:0]wr_din;
  wire wr_rdy;
  wire wr_vld;
  wire [1:0]NLW_Mem_reg_0_15_0_13_DOH_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_14_27_DOH_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_28_31_DOC_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_28_31_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_28_31_DOE_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_28_31_DOF_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_28_31_DOG_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_28_31_DOH_UNCONNECTED;

  assign rd_cnt[4] = full;
  assign rd_cnt[3:0] = \^rd_cnt [3:0];
  assign wr_cnt[4:1] = \^wr_cnt [4:1];
  assign wr_cnt[0] = \^rd_cnt [0];
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 Mem_reg_0_15_0_13
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_head_reg_rep__0}),
        .ADDRE({1'b0,fifo_head_reg_rep__0}),
        .ADDRF({1'b0,fifo_head_reg_rep__0}),
        .ADDRG({1'b0,fifo_head_reg_rep__0}),
        .ADDRH({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[1:0]),
        .DIB(wr_din[3:2]),
        .DIC(wr_din[5:4]),
        .DID(wr_din[7:6]),
        .DIE(wr_din[9:8]),
        .DIF(wr_din[11:10]),
        .DIG(wr_din[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(rd_dout[1:0]),
        .DOB(rd_dout[3:2]),
        .DOC(rd_dout[5:4]),
        .DOD(rd_dout[7:6]),
        .DOE(rd_dout[9:8]),
        .DOF(rd_dout[11:10]),
        .DOG(rd_dout[13:12]),
        .DOH(NLW_Mem_reg_0_15_0_13_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_28_31_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "27" *) 
  RAM32M16 Mem_reg_0_15_14_27
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_head_reg_rep__0}),
        .ADDRE({1'b0,fifo_head_reg_rep__0}),
        .ADDRF({1'b0,fifo_head_reg_rep__0}),
        .ADDRG({1'b0,fifo_head_reg_rep__0}),
        .ADDRH({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[15:14]),
        .DIB(wr_din[17:16]),
        .DIC(wr_din[19:18]),
        .DID(wr_din[21:20]),
        .DIE(wr_din[23:22]),
        .DIF(wr_din[25:24]),
        .DIG(wr_din[27:26]),
        .DIH({1'b0,1'b0}),
        .DOA(rd_dout[15:14]),
        .DOB(rd_dout[17:16]),
        .DOC(rd_dout[19:18]),
        .DOD(rd_dout[21:20]),
        .DOE(rd_dout[23:22]),
        .DOF(rd_dout[25:24]),
        .DOG(rd_dout[27:26]),
        .DOH(NLW_Mem_reg_0_15_14_27_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_28_31_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "28" *) 
  (* ram_slice_end = "31" *) 
  RAM32M16 Mem_reg_0_15_28_31
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_head_reg_rep__0}),
        .ADDRE({1'b0,fifo_head_reg_rep__0}),
        .ADDRF({1'b0,fifo_head_reg_rep__0}),
        .ADDRG({1'b0,fifo_head_reg_rep__0}),
        .ADDRH({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[29:28]),
        .DIB(wr_din[31:30]),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DIE({1'b0,1'b0}),
        .DIF({1'b0,1'b0}),
        .DIG({1'b0,1'b0}),
        .DIH({1'b0,1'b0}),
        .DOA(rd_dout[29:28]),
        .DOB(rd_dout[31:30]),
        .DOC(NLW_Mem_reg_0_15_28_31_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_Mem_reg_0_15_28_31_DOD_UNCONNECTED[1:0]),
        .DOE(NLW_Mem_reg_0_15_28_31_DOE_UNCONNECTED[1:0]),
        .DOF(NLW_Mem_reg_0_15_28_31_DOF_UNCONNECTED[1:0]),
        .DOG(NLW_Mem_reg_0_15_28_31_DOG_UNCONNECTED[1:0]),
        .DOH(NLW_Mem_reg_0_15_28_31_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_28_31_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    Mem_reg_0_15_28_31_i_1
       (.I0(wr_vld),
        .I1(full),
        .O(Mem_reg_0_15_28_31_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'h0000001F)) 
    emptyN_INST_0
       (.I0(\^rd_cnt [1]),
        .I1(\^rd_cnt [0]),
        .I2(\^rd_cnt [2]),
        .I3(\^rd_cnt [3]),
        .I4(full),
        .O(emptyN));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h82000082)) 
    empty_INST_0
       (.I0(empty_INST_0_i_1_n_0),
        .I1(fifo_tail[0]),
        .I2(fifo_head[0]),
        .I3(fifo_tail[4]),
        .I4(fifo_head[4]),
        .O(empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    empty_INST_0_i_1
       (.I0(fifo_tail[3]),
        .I1(fifo_head[3]),
        .I2(fifo_tail[1]),
        .I3(fifo_head[1]),
        .I4(fifo_head[2]),
        .I5(fifo_tail[2]),
        .O(empty_INST_0_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_head[0]_i_1 
       (.I0(clr),
        .I1(next_head_reg__0[0]),
        .O(\fifo_head[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[1]_i_1 
       (.I0(next_head_reg__0[1]),
        .I1(clr),
        .O(\fifo_head[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_head[2]_i_1 
       (.I0(clr),
        .I1(next_head_reg__0[2]),
        .O(\fifo_head[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_head[3]_i_1 
       (.I0(clr),
        .I1(next_head_reg__0[3]),
        .O(\fifo_head[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_head[4]_i_1 
       (.I0(clr),
        .I1(\rd_cnt[4]_i_3_n_0 ),
        .O(next_head));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[4]_i_2 
       (.I0(next_head_reg__0[4]),
        .I1(clr),
        .O(\fifo_head[4]_i_2_n_0 ));
  FDCE \fifo_head_reg[0] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[0]_i_1_n_0 ),
        .Q(fifo_head[0]));
  FDCE \fifo_head_reg[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[1]_i_1_n_0 ),
        .Q(fifo_head[1]));
  FDCE \fifo_head_reg[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[2]_i_1_n_0 ),
        .Q(fifo_head[2]));
  FDCE \fifo_head_reg[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[3]_i_1_n_0 ),
        .Q(fifo_head[3]));
  FDCE \fifo_head_reg[4] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[4]_i_2_n_0 ),
        .Q(fifo_head[4]));
  FDCE \fifo_head_reg_rep[0] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[0]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[0]));
  FDCE \fifo_head_reg_rep[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[1]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[1]));
  FDCE \fifo_head_reg_rep[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[2]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[2]));
  FDCE \fifo_head_reg_rep[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\fifo_head[3]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_tail[0]_i_1 
       (.I0(clr),
        .I1(next_tail_reg__0[0]),
        .O(\fifo_tail[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[1]_i_1 
       (.I0(next_tail_reg__0[1]),
        .I1(clr),
        .O(\fifo_tail[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[2]_i_1 
       (.I0(next_tail_reg__0[2]),
        .I1(clr),
        .O(\fifo_tail[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[3]_i_1 
       (.I0(next_tail_reg__0[3]),
        .I1(clr),
        .O(\fifo_tail[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAE)) 
    \fifo_tail[4]_i_1 
       (.I0(clr),
        .I1(wr_vld),
        .I2(full),
        .O(next_tail));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_tail[4]_i_2 
       (.I0(clr),
        .I1(next_tail_reg__0[4]),
        .O(\fifo_tail[4]_i_2_n_0 ));
  FDCE \fifo_tail_reg[0] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\fifo_tail[0]_i_1_n_0 ),
        .Q(fifo_tail[0]));
  FDCE \fifo_tail_reg[1] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\fifo_tail[1]_i_1_n_0 ),
        .Q(fifo_tail[1]));
  FDCE \fifo_tail_reg[2] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\fifo_tail[2]_i_1_n_0 ),
        .Q(fifo_tail[2]));
  FDCE \fifo_tail_reg[3] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\fifo_tail[3]_i_1_n_0 ),
        .Q(fifo_tail[3]));
  FDCE \fifo_tail_reg[4] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\fifo_tail[4]_i_2_n_0 ),
        .Q(fifo_tail[4]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    fullN_INST_0
       (.I0(\^rd_cnt [3]),
        .I1(\^rd_cnt [2]),
        .I2(full),
        .O(fullN));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \next_head[0]_i_1 
       (.I0(clr),
        .I1(next_head_reg__0[0]),
        .O(\next_head[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h12)) 
    \next_head[1]_i_1 
       (.I0(next_head_reg__0[1]),
        .I1(clr),
        .I2(next_head_reg__0[0]),
        .O(\next_head[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \next_head[2]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[2]),
        .I3(clr),
        .O(\next_head[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \next_head[3]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[2]),
        .I3(next_head_reg__0[3]),
        .I4(clr),
        .O(\next_head[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \next_head[4]_i_1 
       (.I0(next_head_reg__0[2]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[0]),
        .I3(next_head_reg__0[3]),
        .I4(next_head_reg__0[4]),
        .I5(clr),
        .O(\next_head[4]_i_1_n_0 ));
  FDPE \next_head_reg[0] 
       (.C(clk),
        .CE(next_head),
        .D(\next_head[0]_i_1_n_0 ),
        .PRE(rst),
        .Q(next_head_reg__0[0]));
  FDCE \next_head_reg[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\next_head[1]_i_1_n_0 ),
        .Q(next_head_reg__0[1]));
  FDCE \next_head_reg[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\next_head[2]_i_1_n_0 ),
        .Q(next_head_reg__0[2]));
  FDCE \next_head_reg[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\next_head[3]_i_1_n_0 ),
        .Q(next_head_reg__0[3]));
  FDCE \next_head_reg[4] 
       (.C(clk),
        .CE(next_head),
        .CLR(rst),
        .D(\next_head[4]_i_1_n_0 ),
        .Q(next_head_reg__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \next_tail[0]_i_1 
       (.I0(clr),
        .I1(next_tail_reg__0[0]),
        .O(\next_tail[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h12)) 
    \next_tail[1]_i_1 
       (.I0(next_tail_reg__0[1]),
        .I1(clr),
        .I2(next_tail_reg__0[0]),
        .O(\next_tail[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \next_tail[2]_i_1 
       (.I0(next_tail_reg__0[0]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[2]),
        .I3(clr),
        .O(\next_tail[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \next_tail[3]_i_1 
       (.I0(next_tail_reg__0[0]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[2]),
        .I3(next_tail_reg__0[3]),
        .I4(clr),
        .O(\next_tail[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \next_tail[4]_i_1 
       (.I0(next_tail_reg__0[2]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[0]),
        .I3(next_tail_reg__0[3]),
        .I4(next_tail_reg__0[4]),
        .I5(clr),
        .O(\next_tail[4]_i_1_n_0 ));
  FDPE \next_tail_reg[0] 
       (.C(clk),
        .CE(next_tail),
        .D(\next_tail[0]_i_1_n_0 ),
        .PRE(rst),
        .Q(next_tail_reg__0[0]));
  FDCE \next_tail_reg[1] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\next_tail[1]_i_1_n_0 ),
        .Q(next_tail_reg__0[1]));
  FDCE \next_tail_reg[2] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\next_tail[2]_i_1_n_0 ),
        .Q(next_tail_reg__0[2]));
  FDCE \next_tail_reg[3] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\next_tail[3]_i_1_n_0 ),
        .Q(next_tail_reg__0[3]));
  FDCE \next_tail_reg[4] 
       (.C(clk),
        .CE(next_tail),
        .CLR(rst),
        .D(\next_tail[4]_i_1_n_0 ),
        .Q(next_tail_reg__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \rd_cnt[0]_i_1 
       (.I0(clr),
        .I1(\^rd_cnt [0]),
        .O(\rd_cnt[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F70808F7)) 
    \rd_cnt[1]_i_1 
       (.I0(\rd_cnt[4]_i_3_n_0 ),
        .I1(wr_vld),
        .I2(full),
        .I3(\^rd_cnt [0]),
        .I4(\^rd_cnt [1]),
        .I5(clr),
        .O(\rd_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT5 #(
    .INIT(32'h00007E81)) 
    \rd_cnt[2]_i_1 
       (.I0(\^rd_cnt [0]),
        .I1(\^rd_cnt [1]),
        .I2(rd_cnt13_out),
        .I3(\^rd_cnt [2]),
        .I4(clr),
        .O(\rd_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1444444444444441)) 
    \rd_cnt[3]_i_1 
       (.I0(clr),
        .I1(\^rd_cnt [3]),
        .I2(\^rd_cnt [2]),
        .I3(\^rd_cnt [0]),
        .I4(\^rd_cnt [1]),
        .I5(rd_cnt13_out),
        .O(\rd_cnt[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h0000D500)) 
    \rd_cnt[3]_i_2 
       (.I0(rd_rdy),
        .I1(empty_INST_0_i_1_n_0),
        .I2(\rd_cnt[4]_i_5_n_0 ),
        .I3(wr_vld),
        .I4(full),
        .O(rd_cnt13_out));
  LUT4 #(
    .INIT(16'hBBEB)) 
    \rd_cnt[4]_i_1 
       (.I0(clr),
        .I1(\rd_cnt[4]_i_3_n_0 ),
        .I2(wr_vld),
        .I3(full),
        .O(\rd_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1444444444444441)) 
    \rd_cnt[4]_i_2 
       (.I0(clr),
        .I1(full),
        .I2(\^rd_cnt [2]),
        .I3(\rd_cnt[4]_i_4_n_0 ),
        .I4(\^rd_cnt [1]),
        .I5(\^rd_cnt [3]),
        .O(\rd_cnt[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h90090000FFFFFFFF)) 
    \rd_cnt[4]_i_3 
       (.I0(fifo_head[4]),
        .I1(fifo_tail[4]),
        .I2(fifo_head[0]),
        .I3(fifo_tail[0]),
        .I4(empty_INST_0_i_1_n_0),
        .I5(rd_rdy),
        .O(\rd_cnt[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BB2B2B2B)) 
    \rd_cnt[4]_i_4 
       (.I0(\^rd_cnt [0]),
        .I1(\^rd_cnt [1]),
        .I2(rd_rdy),
        .I3(empty_INST_0_i_1_n_0),
        .I4(\rd_cnt[4]_i_5_n_0 ),
        .I5(\rd_cnt[4]_i_6_n_0 ),
        .O(\rd_cnt[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    \rd_cnt[4]_i_5 
       (.I0(fifo_tail[0]),
        .I1(fifo_head[0]),
        .I2(fifo_tail[4]),
        .I3(fifo_head[4]),
        .O(\rd_cnt[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'hD)) 
    \rd_cnt[4]_i_6 
       (.I0(wr_vld),
        .I1(full),
        .O(\rd_cnt[4]_i_6_n_0 ));
  FDCE \rd_cnt_reg[0] 
       (.C(clk),
        .CE(\rd_cnt[4]_i_1_n_0 ),
        .CLR(rst),
        .D(\rd_cnt[0]_i_1_n_0 ),
        .Q(\^rd_cnt [0]));
  FDCE \rd_cnt_reg[1] 
       (.C(clk),
        .CE(\rd_cnt[4]_i_1_n_0 ),
        .CLR(rst),
        .D(\rd_cnt[1]_i_1_n_0 ),
        .Q(\^rd_cnt [1]));
  FDCE \rd_cnt_reg[2] 
       (.C(clk),
        .CE(\rd_cnt[4]_i_1_n_0 ),
        .CLR(rst),
        .D(\rd_cnt[2]_i_1_n_0 ),
        .Q(\^rd_cnt [2]));
  FDCE \rd_cnt_reg[3] 
       (.C(clk),
        .CE(\rd_cnt[4]_i_1_n_0 ),
        .CLR(rst),
        .D(\rd_cnt[3]_i_1_n_0 ),
        .Q(\^rd_cnt [3]));
  FDCE \rd_cnt_reg[4] 
       (.C(clk),
        .CE(\rd_cnt[4]_i_1_n_0 ),
        .CLR(rst),
        .D(\rd_cnt[4]_i_2_n_0 ),
        .Q(full));
  LUT1 #(
    .INIT(2'h1)) 
    rd_vld_INST_0
       (.I0(empty),
        .O(rd_vld));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_cnt[1]_INST_0 
       (.I0(\^rd_cnt [1]),
        .I1(\^rd_cnt [0]),
        .O(\^wr_cnt [1]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \wr_cnt[2]_INST_0 
       (.I0(\^rd_cnt [0]),
        .I1(\^rd_cnt [1]),
        .I2(\^rd_cnt [2]),
        .O(\^wr_cnt [2]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h01FE)) 
    \wr_cnt[3]_INST_0 
       (.I0(\^rd_cnt [2]),
        .I1(\^rd_cnt [1]),
        .I2(\^rd_cnt [0]),
        .I3(\^rd_cnt [3]),
        .O(\^wr_cnt [3]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \wr_cnt[4]_INST_0 
       (.I0(\^rd_cnt [1]),
        .I1(\^rd_cnt [0]),
        .I2(\^rd_cnt [2]),
        .I3(\^rd_cnt [3]),
        .I4(full),
        .O(\^wr_cnt [4]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT1 #(
    .INIT(2'h1)) 
    wr_rdy_INST_0
       (.I0(full),
        .O(wr_rdy));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module gpif2mst_async_32x512_blk_mem_gen_generic_cstr
   (D,
    ENB_dly_D,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    E,
    out,
    s_axis_tvalid);
  output [31:0]D;
  output ENB_dly_D;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [0:0]E;
  input out;
  input s_axis_tvalid;

  wire [31:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [8:0]Q;
  wire m_aclk;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire s_axis_tvalid;

  gpif2mst_async_32x512_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tvalid(s_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module gpif2mst_async_32x512_blk_mem_gen_prim_width
   (D,
    ENB_dly_D,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    E,
    out,
    s_axis_tvalid);
  output [31:0]D;
  output ENB_dly_D;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [0:0]E;
  input out;
  input s_axis_tvalid;

  wire [31:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENA_dly_D;
  wire ENB_I;
  wire ENB_dly;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [4:0]RSTA_SHFT_REG;
  wire [4:0]RSTB_SHFT_REG;
  wire \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ;
  wire \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ;
  wire \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ;
  wire m_aclk;
  wire out;
  wire p_1_out;
  wire p_3_out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire s_axis_tvalid;

  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_D_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ),
        .Q(ENA_dly_D),
        .R(1'b0));
  (* srl_bus_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop " *) 
  (* srl_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(s_aclk),
        .D(p_3_out),
        .Q(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_i_1 
       (.I0(RSTA_SHFT_REG[0]),
        .I1(RSTA_SHFT_REG[4]),
        .O(p_3_out));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_D_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(ENB_dly),
        .Q(ENB_dly_D),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(POR_B),
        .Q(ENB_dly),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.POR_B_i_1 
       (.I0(RSTB_SHFT_REG[0]),
        .I1(RSTB_SHFT_REG[4]),
        .O(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.POR_B_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(p_1_out),
        .Q(POR_B),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTA_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg " *) 
  (* srl_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(s_aclk),
        .D(RSTA_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTA_SHFT_REG[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTB_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg " *) 
  (* srl_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_aclk),
        .D(RSTB_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTB_SHFT_REG[4]),
        .R(1'b0));
  gpif2mst_async_32x512_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENA_dly_D(ENA_dly_D),
        .ENB_I(ENB_I),
        .POR_B(POR_B),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tvalid(s_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module gpif2mst_async_32x512_blk_mem_gen_prim_wrapper
   (D,
    m_aclk,
    s_aclk,
    ENB_I,
    POR_B,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    s_axis_tdata,
    E,
    ENA_dly_D,
    out,
    s_axis_tvalid);
  output [31:0]D;
  input m_aclk;
  input s_aclk;
  input ENB_I;
  input POR_B;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [31:0]s_axis_tdata;
  input [0:0]E;
  input ENA_dly_D;
  input out;
  input s_axis_tvalid;

  wire [31:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_68 ;
  wire \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_69 ;
  wire \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_70 ;
  wire \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_71 ;
  wire [0:0]E;
  wire ENA_I;
  wire ENA_dly_D;
  wire ENB_I;
  wire POR_B;
  wire [8:0]Q;
  wire m_aclk;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire s_axis_tvalid;
  wire [15:0]\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTPB_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(0),
    .DOB_REG(0),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({Q,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(m_aclk),
        .CLKBWRCLK(s_aclk),
        .DINADIN(s_axis_tdata[15:0]),
        .DINBDIN(s_axis_tdata[31:16]),
        .DINPADINP({1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0}),
        .DOUTADOUT(D[15:0]),
        .DOUTBDOUT(D[31:16]),
        .DOUTPADOUTP({\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_68 ,\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_69 }),
        .DOUTPBDOUTP({\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_70 ,\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_71 }),
        .ENARDEN(ENB_I),
        .ENBWREN(ENA_I),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(POR_B),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({E,E,E,E}));
  LUT3 #(
    .INIT(8'hBA)) 
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(ENA_dly_D),
        .I1(out),
        .I2(s_axis_tvalid),
        .O(ENA_I));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module gpif2mst_async_32x512_blk_mem_gen_top
   (D,
    ENB_dly_D,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    E,
    out,
    s_axis_tvalid);
  output [31:0]D;
  output ENB_dly_D;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [0:0]E;
  input out;
  input s_axis_tvalid;

  wire [31:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [8:0]Q;
  wire m_aclk;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire s_axis_tvalid;

  gpif2mst_async_32x512_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tvalid(s_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_2" *) 
module gpif2mst_async_32x512_blk_mem_gen_v8_4_2
   (D,
    ENB_dly_D,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    E,
    out,
    s_axis_tvalid);
  output [31:0]D;
  output ENB_dly_D;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [0:0]E;
  input out;
  input s_axis_tvalid;

  wire [31:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [8:0]Q;
  wire m_aclk;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire s_axis_tvalid;

  gpif2mst_async_32x512_blk_mem_gen_v8_4_2_synth inst_blk_mem_gen
       (.D(D),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tvalid(s_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_2_synth" *) 
module gpif2mst_async_32x512_blk_mem_gen_v8_4_2_synth
   (D,
    ENB_dly_D,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    E,
    out,
    s_axis_tvalid);
  output [31:0]D;
  output ENB_dly_D;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [0:0]E;
  input out;
  input s_axis_tvalid;

  wire [31:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [8:0]Q;
  wire m_aclk;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire s_axis_tvalid;

  gpif2mst_async_32x512_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tvalid(s_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module gpif2mst_async_32x512_clk_x_pntrs
   (WR_PNTR_RD,
    DI,
    \dest_out_bin_ff_reg[8] ,
    S,
    RD_PNTR_WR,
    v1_reg,
    v1_reg_0,
    \dest_out_bin_ff_reg[6] ,
    v1_reg_1,
    v1_reg_2,
    \dest_out_bin_ff_reg[7] ,
    \dest_out_bin_ff_reg[7]_0 ,
    \dest_out_bin_ff_reg[7]_1 ,
    \dest_out_bin_ff_reg[7]_2 ,
    \dest_out_bin_ff_reg[7]_3 ,
    \dest_out_bin_ff_reg[7]_4 ,
    \dest_out_bin_ff_reg[7]_5 ,
    \dest_out_bin_ff_reg[7]_6 ,
    \dest_out_bin_ff_reg[7]_7 ,
    O,
    Q,
    \gdiff.diff_pntr_pad_reg[9] ,
    \gmux.gm[3].gms.ms ,
    \gmux.gm[4].gms.ms ,
    s_aclk,
    \src_gray_ff_reg[8] ,
    m_aclk);
  output [8:0]WR_PNTR_RD;
  output [5:0]DI;
  output \dest_out_bin_ff_reg[8] ;
  output [0:0]S;
  output [8:0]RD_PNTR_WR;
  output [3:0]v1_reg;
  output [3:0]v1_reg_0;
  output [5:0]\dest_out_bin_ff_reg[6] ;
  output [3:0]v1_reg_1;
  output [0:0]v1_reg_2;
  output \dest_out_bin_ff_reg[7] ;
  output \dest_out_bin_ff_reg[7]_0 ;
  output \dest_out_bin_ff_reg[7]_1 ;
  output \dest_out_bin_ff_reg[7]_2 ;
  output \dest_out_bin_ff_reg[7]_3 ;
  output \dest_out_bin_ff_reg[7]_4 ;
  output \dest_out_bin_ff_reg[7]_5 ;
  output \dest_out_bin_ff_reg[7]_6 ;
  output \dest_out_bin_ff_reg[7]_7 ;
  output [0:0]O;
  input [8:0]Q;
  input [8:0]\gdiff.diff_pntr_pad_reg[9] ;
  input [7:0]\gmux.gm[3].gms.ms ;
  input [0:0]\gmux.gm[4].gms.ms ;
  input s_aclk;
  input [8:0]\src_gray_ff_reg[8] ;
  input m_aclk;

  wire [5:0]DI;
  wire [0:0]O;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [0:0]S;
  wire [8:0]WR_PNTR_RD;
  wire [5:0]\dest_out_bin_ff_reg[6] ;
  wire \dest_out_bin_ff_reg[7] ;
  wire \dest_out_bin_ff_reg[7]_0 ;
  wire \dest_out_bin_ff_reg[7]_1 ;
  wire \dest_out_bin_ff_reg[7]_2 ;
  wire \dest_out_bin_ff_reg[7]_3 ;
  wire \dest_out_bin_ff_reg[7]_4 ;
  wire \dest_out_bin_ff_reg[7]_5 ;
  wire \dest_out_bin_ff_reg[7]_6 ;
  wire \dest_out_bin_ff_reg[7]_7 ;
  wire \dest_out_bin_ff_reg[8] ;
  wire [8:1]diff_wr_rd__0;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_10_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_11_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_12_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_13_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_14_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_4_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_6_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_7_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_8_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_9_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_1 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_2 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_3 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_4 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_5 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_6 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_7 ;
  wire [8:0]\gdiff.diff_pntr_pad_reg[9] ;
  wire [7:0]\gmux.gm[3].gms.ms ;
  wire [0:0]\gmux.gm[4].gms.ms ;
  wire m_aclk;
  wire s_aclk;
  wire [8:0]\src_gray_ff_reg[8] ;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;
  wire [3:0]v1_reg_1;
  wire [0:0]v1_reg_2;
  wire [7:0]\NLW_g_rd.gvalid_low.rd_dc_i_reg[9]_i_3_CO_UNCONNECTED ;
  wire [7:1]\NLW_g_rd.gvalid_low.rd_dc_i_reg[9]_i_3_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \g_rd.gvalid_low.rd_dc_i[1]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .O(\dest_out_bin_ff_reg[7] ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \g_rd.gvalid_low.rd_dc_i[2]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .I1(diff_wr_rd__0[2]),
        .O(\dest_out_bin_ff_reg[7]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \g_rd.gvalid_low.rd_dc_i[3]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .I1(diff_wr_rd__0[2]),
        .I2(diff_wr_rd__0[3]),
        .O(\dest_out_bin_ff_reg[7]_7 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \g_rd.gvalid_low.rd_dc_i[4]_i_1 
       (.I0(diff_wr_rd__0[2]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[3]),
        .I3(diff_wr_rd__0[4]),
        .O(\dest_out_bin_ff_reg[7]_6 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_1 
       (.I0(diff_wr_rd__0[3]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[2]),
        .I3(diff_wr_rd__0[4]),
        .I4(diff_wr_rd__0[5]),
        .O(\dest_out_bin_ff_reg[7]_5 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \g_rd.gvalid_low.rd_dc_i[6]_i_1 
       (.I0(diff_wr_rd__0[4]),
        .I1(diff_wr_rd__0[2]),
        .I2(diff_wr_rd__0[1]),
        .I3(diff_wr_rd__0[3]),
        .I4(diff_wr_rd__0[5]),
        .I5(diff_wr_rd__0[6]),
        .O(\dest_out_bin_ff_reg[7]_4 ));
  LUT2 #(
    .INIT(4'h6)) 
    \g_rd.gvalid_low.rd_dc_i[7]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i[9]_i_4_n_0 ),
        .I1(diff_wr_rd__0[7]),
        .O(\dest_out_bin_ff_reg[7]_3 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \g_rd.gvalid_low.rd_dc_i[8]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i[9]_i_4_n_0 ),
        .I1(diff_wr_rd__0[7]),
        .I2(diff_wr_rd__0[8]),
        .O(\dest_out_bin_ff_reg[7]_2 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_10 
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_11 
       (.I0(WR_PNTR_RD[3]),
        .I1(Q[3]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_12 
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_13 
       (.I0(WR_PNTR_RD[1]),
        .I1(Q[1]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_14 
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_2 
       (.I0(diff_wr_rd__0[8]),
        .I1(\g_rd.gvalid_low.rd_dc_i[9]_i_4_n_0 ),
        .I2(diff_wr_rd__0[7]),
        .O(\dest_out_bin_ff_reg[7]_1 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_4 
       (.I0(diff_wr_rd__0[6]),
        .I1(diff_wr_rd__0[4]),
        .I2(diff_wr_rd__0[2]),
        .I3(diff_wr_rd__0[1]),
        .I4(diff_wr_rd__0[3]),
        .I5(diff_wr_rd__0[5]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_6 
       (.I0(WR_PNTR_RD[8]),
        .I1(Q[8]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_7 
       (.I0(WR_PNTR_RD[7]),
        .I1(Q[7]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_8 
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_9 
       (.I0(WR_PNTR_RD[5]),
        .I1(Q[5]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_9_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \g_rd.gvalid_low.rd_dc_i_reg[9]_i_3 
       (.CI(\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_g_rd.gvalid_low.rd_dc_i_reg[9]_i_3_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_g_rd.gvalid_low.rd_dc_i_reg[9]_i_3_O_UNCONNECTED [7:1],diff_wr_rd__0[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\g_rd.gvalid_low.rd_dc_i[9]_i_6_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_0 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_1 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_2 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_3 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_4 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_5 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_6 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_7 }),
        .DI(WR_PNTR_RD[7:0]),
        .O({diff_wr_rd__0[7:1],O}),
        .S({\g_rd.gvalid_low.rd_dc_i[9]_i_7_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_8_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_9_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_10_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_11_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_12_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_13_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_14_n_0 }));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(RD_PNTR_WR[0]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [0]),
        .I2(RD_PNTR_WR[1]),
        .I3(\gdiff.diff_pntr_pad_reg[9] [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(RD_PNTR_WR[0]),
        .I1(\gmux.gm[3].gms.ms [0]),
        .I2(RD_PNTR_WR[1]),
        .I3(\gmux.gm[3].gms.ms [1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .I2(WR_PNTR_RD[1]),
        .I3(Q[1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gdiff.diff_pntr_pad_reg[9] [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gmux.gm[3].gms.ms [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gmux.gm[3].gms.ms [3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .I2(WR_PNTR_RD[3]),
        .I3(Q[3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(RD_PNTR_WR[4]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [4]),
        .I2(RD_PNTR_WR[5]),
        .I3(\gdiff.diff_pntr_pad_reg[9] [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[4]),
        .I1(\gmux.gm[3].gms.ms [4]),
        .I2(RD_PNTR_WR[5]),
        .I3(\gmux.gm[3].gms.ms [5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .I2(WR_PNTR_RD[5]),
        .I3(Q[5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [6]),
        .I2(RD_PNTR_WR[7]),
        .I3(\gdiff.diff_pntr_pad_reg[9] [7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gmux.gm[3].gms.ms [6]),
        .I2(RD_PNTR_WR[7]),
        .I3(\gmux.gm[3].gms.ms [7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .I2(WR_PNTR_RD[7]),
        .I3(Q[7]),
        .O(v1_reg_1[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__0 
       (.I0(WR_PNTR_RD[8]),
        .I1(\gmux.gm[4].gms.ms ),
        .O(v1_reg_2));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[8]),
        .I1(Q[8]),
        .O(\dest_out_bin_ff_reg[8] ));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry__0_i_1
       (.I0(RD_PNTR_WR[7]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [7]),
        .I2(RD_PNTR_WR[8]),
        .I3(\gdiff.diff_pntr_pad_reg[9] [8]),
        .O(S));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_10
       (.I0(RD_PNTR_WR[4]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [4]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [5]),
        .I3(RD_PNTR_WR[5]),
        .O(\dest_out_bin_ff_reg[6] [3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_11
       (.I0(RD_PNTR_WR[3]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [3]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [4]),
        .I3(RD_PNTR_WR[4]),
        .O(\dest_out_bin_ff_reg[6] [2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_12
       (.I0(RD_PNTR_WR[2]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [2]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [3]),
        .I3(RD_PNTR_WR[3]),
        .O(\dest_out_bin_ff_reg[6] [1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_13
       (.I0(RD_PNTR_WR[1]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [1]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [2]),
        .I3(RD_PNTR_WR[2]),
        .O(\dest_out_bin_ff_reg[6] [0]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_1__0
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_2__0
       (.I0(WR_PNTR_RD[5]),
        .I1(Q[5]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_3__0
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_4__0
       (.I0(WR_PNTR_RD[3]),
        .I1(Q[3]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_5__0
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_6__0
       (.I0(WR_PNTR_RD[1]),
        .I1(Q[1]),
        .O(DI[0]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_8
       (.I0(RD_PNTR_WR[6]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [6]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [7]),
        .I3(RD_PNTR_WR[7]),
        .O(\dest_out_bin_ff_reg[6] [5]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_9
       (.I0(RD_PNTR_WR[5]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [5]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [6]),
        .I3(RD_PNTR_WR[6]),
        .O(\dest_out_bin_ff_reg[6] [4]));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_32x512_xpm_cdc_gray rd_pntr_cdc_inst
       (.dest_clk(s_aclk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(m_aclk),
        .src_in_bin(Q));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_32x512_xpm_cdc_gray__2 wr_pntr_cdc_inst
       (.dest_clk(m_aclk),
        .dest_out_bin(WR_PNTR_RD),
        .src_clk(s_aclk),
        .src_in_bin(\src_gray_ff_reg[8] ));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module gpif2mst_async_32x512_compare
   (comp1,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg);
  output comp1;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire [0:0]v1_reg;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO " *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \gmux.gm[0].gm1.m1_CARRY4_CARRY8 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED [7:5],comp1,carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .DI({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED [7:5],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED [7:0]),
        .S({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED [7:5],v1_reg,\gmux.gm[4].gms.ms_0 }));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module gpif2mst_async_32x512_compare_0
   (ram_full_fb_i_reg,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg_0,
    out,
    s_axis_tvalid,
    comp1,
    ram_full_fb_i_reg_0);
  output ram_full_fb_i_reg;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg_0;
  input out;
  input s_axis_tvalid;
  input comp1;
  input ram_full_fb_i_reg_0;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire comp2;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire s_axis_tvalid;
  wire [0:0]v1_reg_0;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO " *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \gmux.gm[0].gm1.m1_CARRY4_CARRY8 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED [7:5],comp2,carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .DI({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED [7:5],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED [7:0]),
        .S({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED [7:5],v1_reg_0,\gmux.gm[4].gms.ms_0 }));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(comp2),
        .I1(out),
        .I2(s_axis_tvalid),
        .I3(comp1),
        .I4(ram_full_fb_i_reg_0),
        .O(ram_full_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module gpif2mst_async_32x512_compare_1
   (ram_empty_fb_i_reg,
    v1_reg,
    ram_empty_fb_i_reg_0,
    p_8_out,
    comp1);
  output ram_empty_fb_i_reg;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg_0;
  input p_8_out;
  input comp1;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp0;
  wire comp1;
  wire p_8_out;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire [3:0]v1_reg;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO " *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \gmux.gm[0].gm1.m1_CARRY4_CARRY8 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED [7:5],comp0,carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .DI({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED [7:5],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED [7:0]),
        .S({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED [7:5],ram_empty_fb_i_reg_0,v1_reg}));
  LUT3 #(
    .INIT(8'hEA)) 
    ram_empty_i_i_1
       (.I0(comp0),
        .I1(p_8_out),
        .I2(comp1),
        .O(ram_empty_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module gpif2mst_async_32x512_compare_2
   (comp1,
    v1_reg_0,
    ram_empty_fb_i_reg);
  output comp1;
  input [3:0]v1_reg_0;
  input [0:0]ram_empty_fb_i_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [0:0]ram_empty_fb_i_reg;
  wire [3:0]v1_reg_0;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO " *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \gmux.gm[0].gm1.m1_CARRY4_CARRY8 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED [7:5],comp1,carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .DI({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED [7:5],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED [7:0]),
        .S({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED [7:5],ram_empty_fb_i_reg,v1_reg_0}));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module gpif2mst_async_32x512_fifo_generator_ramfifo
   (wr_rst_busy,
    m_axis_tdata,
    axis_rd_data_count,
    axis_prog_full,
    axis_wr_data_count,
    s_axis_tready,
    m_axis_tvalid,
    axis_prog_empty,
    s_aclk,
    m_aclk,
    s_axis_tdata,
    s_axis_tvalid,
    m_axis_tready,
    s_aresetn);
  output wr_rst_busy;
  output [31:0]m_axis_tdata;
  output [9:0]axis_rd_data_count;
  output axis_prog_full;
  output [9:0]axis_wr_data_count;
  output s_axis_tready;
  output m_axis_tvalid;
  output axis_prog_empty;
  input s_aclk;
  input m_aclk;
  input [31:0]s_axis_tdata;
  input s_axis_tvalid;
  input m_axis_tready;
  input s_aresetn;

  wire axis_prog_empty;
  wire axis_prog_full;
  wire [9:0]axis_rd_data_count;
  wire [9:0]axis_wr_data_count;
  wire [0:0]diff_wr_rd;
  wire dout_i;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_10 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_11 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_12 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_13 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_14 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_15 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_16 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_34 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_35 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_36 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_37 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_38 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_39 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_45 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_46 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_47 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_48 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_49 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_50 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_51 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_52 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_53 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_9 ;
  wire [3:0]\gras.rsts/c0/v1_reg ;
  wire [4:4]\gras.rsts/c1/v1_reg ;
  wire [3:0]\gwas.wsts/c1/v1_reg ;
  wire [3:0]\gwas.wsts/c2/v1_reg ;
  wire m_aclk;
  wire [31:0]m_axis_tdata;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire p_0_in;
  wire [8:0]p_0_out;
  wire [8:0]p_13_out;
  wire [8:0]p_14_out;
  wire p_20_out;
  wire [8:0]p_24_out;
  wire [8:0]p_25_out;
  wire [8:8]rd_pntr_plus1;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire rstblk_n_1;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axis_tdata;
  wire s_axis_tready;
  wire s_axis_tvalid;
  wire [7:0]wr_pntr_plus2;
  wire wr_rst_busy;

  gpif2mst_async_32x512_clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.DI({\gntv_or_sync_fifo.gcx.clkx_n_9 ,\gntv_or_sync_fifo.gcx.clkx_n_10 ,\gntv_or_sync_fifo.gcx.clkx_n_11 ,\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 }),
        .O(diff_wr_rd),
        .Q(p_0_out),
        .RD_PNTR_WR(p_25_out),
        .S(\gntv_or_sync_fifo.gcx.clkx_n_16 ),
        .WR_PNTR_RD(p_24_out),
        .\dest_out_bin_ff_reg[6] ({\gntv_or_sync_fifo.gcx.clkx_n_34 ,\gntv_or_sync_fifo.gcx.clkx_n_35 ,\gntv_or_sync_fifo.gcx.clkx_n_36 ,\gntv_or_sync_fifo.gcx.clkx_n_37 ,\gntv_or_sync_fifo.gcx.clkx_n_38 ,\gntv_or_sync_fifo.gcx.clkx_n_39 }),
        .\dest_out_bin_ff_reg[7] (\gntv_or_sync_fifo.gcx.clkx_n_45 ),
        .\dest_out_bin_ff_reg[7]_0 (\gntv_or_sync_fifo.gcx.clkx_n_46 ),
        .\dest_out_bin_ff_reg[7]_1 (\gntv_or_sync_fifo.gcx.clkx_n_47 ),
        .\dest_out_bin_ff_reg[7]_2 (\gntv_or_sync_fifo.gcx.clkx_n_48 ),
        .\dest_out_bin_ff_reg[7]_3 (\gntv_or_sync_fifo.gcx.clkx_n_49 ),
        .\dest_out_bin_ff_reg[7]_4 (\gntv_or_sync_fifo.gcx.clkx_n_50 ),
        .\dest_out_bin_ff_reg[7]_5 (\gntv_or_sync_fifo.gcx.clkx_n_51 ),
        .\dest_out_bin_ff_reg[7]_6 (\gntv_or_sync_fifo.gcx.clkx_n_52 ),
        .\dest_out_bin_ff_reg[7]_7 (\gntv_or_sync_fifo.gcx.clkx_n_53 ),
        .\dest_out_bin_ff_reg[8] (\gntv_or_sync_fifo.gcx.clkx_n_15 ),
        .\gdiff.diff_pntr_pad_reg[9] (p_14_out),
        .\gmux.gm[3].gms.ms (wr_pntr_plus2),
        .\gmux.gm[4].gms.ms (rd_pntr_plus1),
        .m_aclk(m_aclk),
        .s_aclk(s_aclk),
        .\src_gray_ff_reg[8] (p_13_out),
        .v1_reg(\gwas.wsts/c1/v1_reg ),
        .v1_reg_0(\gwas.wsts/c2/v1_reg ),
        .v1_reg_1(\gras.rsts/c0/v1_reg ),
        .v1_reg_2(\gras.rsts/c1/v1_reg ));
  gpif2mst_async_32x512_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.DI({\gntv_or_sync_fifo.gcx.clkx_n_9 ,\gntv_or_sync_fifo.gcx.clkx_n_10 ,\gntv_or_sync_fifo.gcx.clkx_n_11 ,\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 }),
        .E(dout_i),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .O(diff_wr_rd),
        .Q(p_0_out),
        .WR_PNTR_RD(p_24_out),
        .axis_prog_empty(axis_prog_empty),
        .axis_rd_data_count(axis_rd_data_count),
        .\g_rd.gvalid_low.rd_dc_i_reg[1] (\gntv_or_sync_fifo.gcx.clkx_n_45 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_46 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[3] (\gntv_or_sync_fifo.gcx.clkx_n_53 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[4] (\gntv_or_sync_fifo.gcx.clkx_n_52 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[5] (\gntv_or_sync_fifo.gcx.clkx_n_51 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[6] (\gntv_or_sync_fifo.gcx.clkx_n_50 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[7] (\gntv_or_sync_fifo.gcx.clkx_n_49 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[8] (\gntv_or_sync_fifo.gcx.clkx_n_48 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[9] (\gntv_or_sync_fifo.gcx.clkx_n_47 ),
        .\gc0.count_d1_reg[0] (rstblk_n_1),
        .\gc0.count_reg[8] (rd_pntr_plus1),
        .m_aclk(m_aclk),
        .m_axis_tready(m_axis_tready),
        .m_axis_tvalid(m_axis_tvalid),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_15 ),
        .ram_empty_fb_i_reg_0(\gras.rsts/c1/v1_reg ),
        .v1_reg(\gras.rsts/c0/v1_reg ));
  gpif2mst_async_32x512_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.E(p_20_out),
        .Q(p_13_out),
        .RD_PNTR_WR(p_25_out),
        .S(\gntv_or_sync_fifo.gcx.clkx_n_16 ),
        .axis_prog_full(axis_prog_full),
        .axis_wr_data_count(axis_wr_data_count),
        .\gdiff.diff_pntr_pad_reg[8] ({\gntv_or_sync_fifo.gcx.clkx_n_34 ,\gntv_or_sync_fifo.gcx.clkx_n_35 ,\gntv_or_sync_fifo.gcx.clkx_n_36 ,\gntv_or_sync_fifo.gcx.clkx_n_37 ,\gntv_or_sync_fifo.gcx.clkx_n_38 ,\gntv_or_sync_fifo.gcx.clkx_n_39 }),
        .\gic0.gc0.count_d1_reg[1] (rstblk_n_0),
        .\gic0.gc0.count_d1_reg[8] (p_14_out),
        .\gic0.gc0.count_reg[7] (wr_pntr_plus2),
        .\gmux.gm[4].gms.ms (\gwas.wsts/c1/v1_reg ),
        .\gmux.gm[4].gms.ms_0 (\gwas.wsts/c2/v1_reg ),
        .out(p_0_in),
        .ram_full_fb_i_reg(rst_full_gen_i),
        .s_aclk(s_aclk),
        .s_axis_tready(s_axis_tready),
        .s_axis_tvalid(s_axis_tvalid));
  gpif2mst_async_32x512_memory \gntv_or_sync_fifo.mem 
       (.\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_13_out),
        .E(p_20_out),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .Q(p_0_out),
        .\goreg_bm.dout_i_reg[31]_0 (dout_i),
        .m_aclk(m_aclk),
        .m_axis_tdata(m_axis_tdata),
        .out(p_0_in),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tvalid(s_axis_tvalid));
  gpif2mst_async_32x512_reset_blk_ramfifo rstblk
       (.m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 (rstblk_n_1),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 (rstblk_n_0),
        .out(rst_full_gen_i),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module gpif2mst_async_32x512_fifo_generator_top
   (wr_rst_busy,
    m_axis_tdata,
    axis_rd_data_count,
    axis_prog_full,
    axis_wr_data_count,
    s_axis_tready,
    m_axis_tvalid,
    axis_prog_empty,
    s_aclk,
    m_aclk,
    s_axis_tdata,
    s_axis_tvalid,
    m_axis_tready,
    s_aresetn);
  output wr_rst_busy;
  output [31:0]m_axis_tdata;
  output [9:0]axis_rd_data_count;
  output axis_prog_full;
  output [9:0]axis_wr_data_count;
  output s_axis_tready;
  output m_axis_tvalid;
  output axis_prog_empty;
  input s_aclk;
  input m_aclk;
  input [31:0]s_axis_tdata;
  input s_axis_tvalid;
  input m_axis_tready;
  input s_aresetn;

  wire axis_prog_empty;
  wire axis_prog_full;
  wire [9:0]axis_rd_data_count;
  wire [9:0]axis_wr_data_count;
  wire m_aclk;
  wire [31:0]m_axis_tdata;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axis_tdata;
  wire s_axis_tready;
  wire s_axis_tvalid;
  wire wr_rst_busy;

  gpif2mst_async_32x512_fifo_generator_ramfifo \grf.rf 
       (.axis_prog_empty(axis_prog_empty),
        .axis_prog_full(axis_prog_full),
        .axis_rd_data_count(axis_rd_data_count),
        .axis_wr_data_count(axis_wr_data_count),
        .m_aclk(m_aclk),
        .m_axis_tdata(m_axis_tdata),
        .m_axis_tready(m_axis_tready),
        .m_axis_tvalid(m_axis_tvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tready(s_axis_tready),
        .s_axis_tvalid(s_axis_tvalid),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "32" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "4" *) (* C_AXIS_TSTRB_WIDTH = "4" *) 
(* C_AXIS_TUSER_WIDTH = "1" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "10" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "18" *) 
(* C_DIN_WIDTH_AXIS = "32" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "32" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "18" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynquplus" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "0" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "1" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_IMPLEMENTATION_TYPE_AXIS = "11" *) (* C_IMPLEMENTATION_TYPE_RACH = "12" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "11" *) (* C_IMPLEMENTATION_TYPE_WACH = "12" *) (* C_IMPLEMENTATION_TYPE_WDCH = "11" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "12" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "1" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "2" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "4kx4" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "13" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1021" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "13" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1021" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "13" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "1" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "508" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "15" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "15" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "15" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "1022" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "1" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "10" *) 
(* C_RD_DEPTH = "1024" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "10" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "10" *) 
(* C_WR_DEPTH = "1024" *) (* C_WR_DEPTH_AXIS = "512" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "10" *) 
(* C_WR_PNTR_WIDTH_AXIS = "9" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_3" *) 
module gpif2mst_async_32x512_fifo_generator_v13_2_3
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [17:0]din;
  input wr_en;
  input rd_en;
  input [9:0]prog_empty_thresh;
  input [9:0]prog_empty_thresh_assert;
  input [9:0]prog_empty_thresh_negate;
  input [9:0]prog_full_thresh;
  input [9:0]prog_full_thresh_assert;
  input [9:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [17:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [9:0]data_count;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [31:0]s_axis_tdata;
  input [3:0]s_axis_tstrb;
  input [3:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [0:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [31:0]m_axis_tdata;
  output [3:0]m_axis_tstrb;
  output [3:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [0:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [8:0]axis_prog_full_thresh;
  input [8:0]axis_prog_empty_thresh;
  output [9:0]axis_data_count;
  output [9:0]axis_wr_data_count;
  output [9:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire axis_prog_empty;
  wire axis_prog_full;
  wire [9:0]axis_rd_data_count;
  wire [9:0]axis_wr_data_count;
  wire m_aclk;
  wire [31:0]m_axis_tdata;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axis_tdata;
  wire s_axis_tready;
  wire s_axis_tvalid;
  wire wr_rst_busy;

  assign almost_empty = \<const1> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign data_count[9] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[17] = \<const0> ;
  assign dout[16] = \<const0> ;
  assign dout[15] = \<const0> ;
  assign dout[14] = \<const0> ;
  assign dout[13] = \<const0> ;
  assign dout[12] = \<const0> ;
  assign dout[11] = \<const0> ;
  assign dout[10] = \<const0> ;
  assign dout[9] = \<const0> ;
  assign dout[8] = \<const0> ;
  assign dout[7] = \<const0> ;
  assign dout[6] = \<const0> ;
  assign dout[5] = \<const0> ;
  assign dout[4] = \<const0> ;
  assign dout[3] = \<const0> ;
  assign dout[2] = \<const0> ;
  assign dout[1] = \<const0> ;
  assign dout[0] = \<const0> ;
  assign empty = \<const1> ;
  assign full = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[3] = \<const0> ;
  assign m_axis_tkeep[2] = \<const0> ;
  assign m_axis_tkeep[1] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const1> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[9] = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[9] = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  gpif2mst_async_32x512_fifo_generator_v13_2_3_synth inst_fifo_gen
       (.axis_prog_empty(axis_prog_empty),
        .axis_prog_full(axis_prog_full),
        .axis_rd_data_count(axis_rd_data_count),
        .axis_wr_data_count(axis_wr_data_count),
        .m_aclk(m_aclk),
        .m_axis_tdata(m_axis_tdata),
        .m_axis_tready(m_axis_tready),
        .m_axis_tvalid(m_axis_tvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tready(s_axis_tready),
        .s_axis_tvalid(s_axis_tvalid),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_3_synth" *) 
module gpif2mst_async_32x512_fifo_generator_v13_2_3_synth
   (wr_rst_busy,
    m_axis_tdata,
    axis_rd_data_count,
    axis_prog_full,
    axis_wr_data_count,
    s_axis_tready,
    m_axis_tvalid,
    axis_prog_empty,
    s_aclk,
    m_aclk,
    s_axis_tdata,
    s_axis_tvalid,
    m_axis_tready,
    s_aresetn);
  output wr_rst_busy;
  output [31:0]m_axis_tdata;
  output [9:0]axis_rd_data_count;
  output axis_prog_full;
  output [9:0]axis_wr_data_count;
  output s_axis_tready;
  output m_axis_tvalid;
  output axis_prog_empty;
  input s_aclk;
  input m_aclk;
  input [31:0]s_axis_tdata;
  input s_axis_tvalid;
  input m_axis_tready;
  input s_aresetn;

  wire axis_prog_empty;
  wire axis_prog_full;
  wire [9:0]axis_rd_data_count;
  wire [9:0]axis_wr_data_count;
  wire m_aclk;
  wire [31:0]m_axis_tdata;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axis_tdata;
  wire s_axis_tready;
  wire s_axis_tvalid;
  wire wr_rst_busy;

  gpif2mst_async_32x512_fifo_generator_top \gaxis_fifo.gaxisf.axisf 
       (.axis_prog_empty(axis_prog_empty),
        .axis_prog_full(axis_prog_full),
        .axis_rd_data_count(axis_rd_data_count),
        .axis_wr_data_count(axis_wr_data_count),
        .m_aclk(m_aclk),
        .m_axis_tdata(m_axis_tdata),
        .m_axis_tready(m_axis_tready),
        .m_axis_tvalid(m_axis_tvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tready(s_axis_tready),
        .s_axis_tvalid(s_axis_tvalid),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module gpif2mst_async_32x512_memory
   (ENB_dly_D,
    m_axis_tdata,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    E,
    out,
    s_axis_tvalid,
    \goreg_bm.dout_i_reg[31]_0 );
  output ENB_dly_D;
  output [31:0]m_axis_tdata;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [0:0]E;
  input out;
  input s_axis_tvalid;
  input [0:0]\goreg_bm.dout_i_reg[31]_0 ;

  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [8:0]Q;
  wire [31:0]doutb;
  wire [0:0]\goreg_bm.dout_i_reg[31]_0 ;
  wire m_aclk;
  wire [31:0]m_axis_tdata;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire s_axis_tvalid;

  gpif2mst_async_32x512_blk_mem_gen_v8_4_2 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tvalid(s_axis_tvalid));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[0]),
        .Q(m_axis_tdata[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[10]),
        .Q(m_axis_tdata[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[11]),
        .Q(m_axis_tdata[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[12]),
        .Q(m_axis_tdata[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[13]),
        .Q(m_axis_tdata[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[14]),
        .Q(m_axis_tdata[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[15]),
        .Q(m_axis_tdata[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[16]),
        .Q(m_axis_tdata[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[17]),
        .Q(m_axis_tdata[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[18]),
        .Q(m_axis_tdata[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[19]),
        .Q(m_axis_tdata[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[1]),
        .Q(m_axis_tdata[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[20]),
        .Q(m_axis_tdata[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[21]),
        .Q(m_axis_tdata[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[22]),
        .Q(m_axis_tdata[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[23]),
        .Q(m_axis_tdata[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[24]),
        .Q(m_axis_tdata[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[25]),
        .Q(m_axis_tdata[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[26]),
        .Q(m_axis_tdata[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[27]),
        .Q(m_axis_tdata[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[28]),
        .Q(m_axis_tdata[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[29]),
        .Q(m_axis_tdata[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[2]),
        .Q(m_axis_tdata[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[30]),
        .Q(m_axis_tdata[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[31]),
        .Q(m_axis_tdata[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[3]),
        .Q(m_axis_tdata[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[4]),
        .Q(m_axis_tdata[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[5]),
        .Q(m_axis_tdata[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[6]),
        .Q(m_axis_tdata[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[7]),
        .Q(m_axis_tdata[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[8]),
        .Q(m_axis_tdata[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[31]_0 ),
        .D(doutb[9]),
        .Q(m_axis_tdata[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module gpif2mst_async_32x512_rd_bin_cntr
   (DI,
    Q,
    \gc0.count_reg[8]_0 ,
    v1_reg,
    \gc0.count_d1_reg[7]_0 ,
    S,
    p_8_out,
    WR_PNTR_RD,
    \gc0.count_d1_reg[0]_0 ,
    m_aclk);
  output [0:0]DI;
  output [8:0]Q;
  output [0:0]\gc0.count_reg[8]_0 ;
  output [3:0]v1_reg;
  output [0:0]\gc0.count_d1_reg[7]_0 ;
  output [7:0]S;
  input p_8_out;
  input [8:0]WR_PNTR_RD;
  input \gc0.count_d1_reg[0]_0 ;
  input m_aclk;

  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire [8:0]WR_PNTR_RD;
  wire \gc0.count[8]_i_2_n_0 ;
  wire \gc0.count_d1_reg[0]_0 ;
  wire [0:0]\gc0.count_d1_reg[7]_0 ;
  wire [0:0]\gc0.count_reg[8]_0 ;
  wire m_aclk;
  wire p_8_out;
  wire [8:0]plusOp__1;
  wire [7:0]rd_pntr_plus1;
  wire [3:0]v1_reg;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .O(plusOp__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[2]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1 
       (.I0(rd_pntr_plus1[2]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .I4(rd_pntr_plus1[4]),
        .O(plusOp__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[0]),
        .I3(rd_pntr_plus1[2]),
        .I4(rd_pntr_plus1[4]),
        .I5(rd_pntr_plus1[5]),
        .O(plusOp__1[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[6]_i_1 
       (.I0(\gc0.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus1[6]),
        .O(plusOp__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[7]_i_1 
       (.I0(\gc0.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus1[6]),
        .I2(rd_pntr_plus1[7]),
        .O(plusOp__1[7]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[8]_i_1 
       (.I0(rd_pntr_plus1[6]),
        .I1(\gc0.count[8]_i_2_n_0 ),
        .I2(rd_pntr_plus1[7]),
        .I3(\gc0.count_reg[8]_0 ),
        .O(plusOp__1[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc0.count[8]_i_2 
       (.I0(rd_pntr_plus1[5]),
        .I1(rd_pntr_plus1[3]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[0]),
        .I4(rd_pntr_plus1[2]),
        .I5(rd_pntr_plus1[4]),
        .O(\gc0.count[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[0]),
        .Q(Q[0]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[1]),
        .Q(Q[1]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[2]),
        .Q(Q[2]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[3]),
        .Q(Q[3]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[4]),
        .Q(Q[4]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[5]),
        .Q(Q[5]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[6]),
        .Q(Q[6]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[7]),
        .Q(Q[7]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[8] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(\gc0.count_reg[8]_0 ),
        .Q(Q[8]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[0]),
        .Q(rd_pntr_plus1[0]),
        .S(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[1]),
        .Q(rd_pntr_plus1[1]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[2]),
        .Q(rd_pntr_plus1[2]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[3]),
        .Q(rd_pntr_plus1[3]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[4]),
        .Q(rd_pntr_plus1[4]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[5]),
        .Q(rd_pntr_plus1[5]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[6]),
        .Q(rd_pntr_plus1[6]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[7]),
        .Q(rd_pntr_plus1[7]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[8] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[8]),
        .Q(\gc0.count_reg[8]_0 ),
        .R(\gc0.count_d1_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__2 
       (.I0(rd_pntr_plus1[0]),
        .I1(WR_PNTR_RD[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(WR_PNTR_RD[1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(rd_pntr_plus1[3]),
        .I3(WR_PNTR_RD[3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[4]),
        .I1(WR_PNTR_RD[4]),
        .I2(rd_pntr_plus1[5]),
        .I3(WR_PNTR_RD[5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(rd_pntr_plus1[7]),
        .I3(WR_PNTR_RD[7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry__0_i_1__0
       (.I0(Q[7]),
        .I1(WR_PNTR_RD[7]),
        .I2(Q[8]),
        .I3(WR_PNTR_RD[8]),
        .O(\gc0.count_d1_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_10__0
       (.I0(Q[4]),
        .I1(WR_PNTR_RD[4]),
        .I2(Q[5]),
        .I3(WR_PNTR_RD[5]),
        .O(S[5]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_11__0
       (.I0(Q[3]),
        .I1(WR_PNTR_RD[3]),
        .I2(Q[4]),
        .I3(WR_PNTR_RD[4]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_12__0
       (.I0(Q[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(Q[3]),
        .I3(WR_PNTR_RD[3]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_13__0
       (.I0(Q[1]),
        .I1(WR_PNTR_RD[1]),
        .I2(Q[2]),
        .I3(WR_PNTR_RD[2]),
        .O(S[2]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    plusOp__0_carry_i_14__0
       (.I0(WR_PNTR_RD[0]),
        .I1(p_8_out),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(WR_PNTR_RD[1]),
        .O(S[1]));
  LUT3 #(
    .INIT(8'h96)) 
    plusOp__0_carry_i_15__0
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .I2(p_8_out),
        .O(S[0]));
  LUT3 #(
    .INIT(8'h71)) 
    plusOp__0_carry_i_7__0
       (.I0(Q[0]),
        .I1(p_8_out),
        .I2(WR_PNTR_RD[0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_8__0
       (.I0(Q[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(Q[7]),
        .I3(WR_PNTR_RD[7]),
        .O(S[7]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_9__0
       (.I0(Q[5]),
        .I1(WR_PNTR_RD[5]),
        .I2(Q[6]),
        .I3(WR_PNTR_RD[6]),
        .O(S[6]));
endmodule

(* ORIG_REF_NAME = "rd_dc_fwft_ext_as" *) 
module gpif2mst_async_32x512_rd_dc_fwft_ext_as
   (axis_rd_data_count,
    rd_dc_i,
    \g_rd.gvalid_low.rd_dc_i_reg[9]_0 ,
    m_aclk,
    \g_rd.gvalid_low.rd_dc_i_reg[8]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[7]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[6]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[5]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[4]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[3]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[2]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[1]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[0]_0 );
  output [9:0]axis_rd_data_count;
  input [0:0]rd_dc_i;
  input \g_rd.gvalid_low.rd_dc_i_reg[9]_0 ;
  input m_aclk;
  input \g_rd.gvalid_low.rd_dc_i_reg[8]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[6]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[5]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[4]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[3]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[2]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[1]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[0]_0 ;

  wire [9:0]axis_rd_data_count;
  wire \g_rd.gvalid_low.rd_dc_i_reg[0]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[1]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[2]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[3]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[4]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[5]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[6]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[8]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_0 ;
  wire m_aclk;
  wire [0:0]rd_dc_i;

  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[0]_0 ),
        .Q(axis_rd_data_count[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[1]_0 ),
        .Q(axis_rd_data_count[1]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[2]_0 ),
        .Q(axis_rd_data_count[2]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[3]_0 ),
        .Q(axis_rd_data_count[3]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[4]_0 ),
        .Q(axis_rd_data_count[4]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[5]_0 ),
        .Q(axis_rd_data_count[5]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[6]_0 ),
        .Q(axis_rd_data_count[6]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ),
        .Q(axis_rd_data_count[7]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[8]_0 ),
        .Q(axis_rd_data_count[8]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[9] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[9]_0 ),
        .Q(axis_rd_data_count[9]),
        .R(rd_dc_i));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module gpif2mst_async_32x512_rd_fwft
   (ENB_I,
    p_8_out,
    E,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    rd_dc_i,
    m_axis_tvalid,
    empty_fwft_i_reg_0,
    m_aclk,
    ENB_dly_D,
    out,
    m_axis_tready,
    O);
  output ENB_I;
  output p_8_out;
  output [0:0]E;
  output \gpregsm1.curr_fwft_state_reg[1]_0 ;
  output [0:0]rd_dc_i;
  output m_axis_tvalid;
  input empty_fwft_i_reg_0;
  input m_aclk;
  input ENB_dly_D;
  input out;
  input m_axis_tready;
  input [0:0]O;

  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [0:0]O;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0__1;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i_reg0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0__1;
  wire empty_fwft_i_reg_0;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire m_aclk;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire [1:0]next_fwft_state;
  wire out;
  wire p_8_out;
  wire [0:0]rd_dc_i;
  (* DONT_TOUCH *) wire user_valid;

  LUT4 #(
    .INIT(16'hAABA)) 
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(ENB_dly_D),
        .I1(empty_fwft_i_reg_0),
        .I2(p_8_out),
        .I3(out),
        .O(ENB_I));
  LUT6 #(
    .INIT(64'hFFFFF02F20000000)) 
    aempty_fwft_fb_i_i_1
       (.I0(m_axis_tready),
        .I1(empty_fwft_fb_o_i),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(out),
        .I5(aempty_fwft_fb_i),
        .O(aempty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_fb_i),
        .S(empty_fwft_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_i),
        .S(empty_fwft_i_reg_0));
  LUT5 #(
    .INIT(32'hFF0F0400)) 
    empty_fwft_fb_i_i_1
       (.I0(empty_fwft_fb_o_i),
        .I1(m_axis_tready),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .I4(empty_fwft_fb_i),
        .O(empty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_fb_i),
        .S(empty_fwft_i_reg_0));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(m_axis_tready),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i_reg0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i_reg0),
        .Q(empty_fwft_fb_o_i),
        .S(empty_fwft_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_i),
        .S(empty_fwft_i_reg_0));
  LUT4 #(
    .INIT(16'h00D0)) 
    \g_rd.gvalid_low.rd_dc_i[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(O),
        .I2(user_valid),
        .I3(empty_fwft_i_reg_0),
        .O(\gpregsm1.curr_fwft_state_reg[1]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_1 
       (.I0(empty_fwft_i_reg_0),
        .I1(curr_fwft_state[1]),
        .I2(user_valid),
        .O(rd_dc_i));
  LUT5 #(
    .INIT(32'h04555555)) 
    \gc0.count_d1[8]_i_1 
       (.I0(out),
        .I1(m_axis_tready),
        .I2(empty_fwft_fb_o_i),
        .I3(curr_fwft_state[1]),
        .I4(curr_fwft_state[0]),
        .O(p_8_out));
  LUT5 #(
    .INIT(32'h00004F00)) 
    \goreg_bm.dout_i[31]_i_1 
       (.I0(empty_fwft_fb_o_i),
        .I1(m_axis_tready),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(empty_fwft_i_reg_0),
        .O(E));
  LUT4 #(
    .INIT(16'hFBAA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(m_axis_tready),
        .I2(empty_fwft_fb_o_i),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT5 #(
    .INIT(32'hA200FFFF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(m_axis_tready),
        .I2(empty_fwft_fb_o_i),
        .I3(curr_fwft_state[0]),
        .I4(out),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]),
        .R(empty_fwft_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]),
        .R(empty_fwft_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(user_valid),
        .R(empty_fwft_i_reg_0));
  LUT1 #(
    .INIT(2'h1)) 
    m_axis_tvalid_INST_0
       (.I0(empty_fwft_i),
        .O(m_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module gpif2mst_async_32x512_rd_logic
   (axis_rd_data_count,
    axis_prog_empty,
    ENB_I,
    E,
    Q,
    \gc0.count_reg[8] ,
    m_axis_tvalid,
    v1_reg,
    ram_empty_fb_i_reg,
    ram_empty_fb_i_reg_0,
    \gc0.count_d1_reg[0] ,
    m_aclk,
    \g_rd.gvalid_low.rd_dc_i_reg[9] ,
    \g_rd.gvalid_low.rd_dc_i_reg[8] ,
    \g_rd.gvalid_low.rd_dc_i_reg[7] ,
    \g_rd.gvalid_low.rd_dc_i_reg[6] ,
    \g_rd.gvalid_low.rd_dc_i_reg[5] ,
    \g_rd.gvalid_low.rd_dc_i_reg[4] ,
    \g_rd.gvalid_low.rd_dc_i_reg[3] ,
    \g_rd.gvalid_low.rd_dc_i_reg[2] ,
    \g_rd.gvalid_low.rd_dc_i_reg[1] ,
    DI,
    ENB_dly_D,
    m_axis_tready,
    WR_PNTR_RD,
    O);
  output [9:0]axis_rd_data_count;
  output axis_prog_empty;
  output ENB_I;
  output [0:0]E;
  output [8:0]Q;
  output [0:0]\gc0.count_reg[8] ;
  output m_axis_tvalid;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg;
  input [0:0]ram_empty_fb_i_reg_0;
  input \gc0.count_d1_reg[0] ;
  input m_aclk;
  input \g_rd.gvalid_low.rd_dc_i_reg[9] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[8] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[7] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[6] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[5] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[4] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[3] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[2] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[1] ;
  input [5:0]DI;
  input ENB_dly_D;
  input m_axis_tready;
  input [8:0]WR_PNTR_RD;
  input [0:0]O;

  wire [5:0]DI;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [0:0]O;
  wire [8:0]Q;
  wire [8:0]WR_PNTR_RD;
  wire axis_prog_empty;
  wire [9:0]axis_rd_data_count;
  wire [3:0]\c1/v1_reg ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[1] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[2] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[3] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[4] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[5] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[6] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[7] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[8] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9] ;
  wire \gc0.count_d1_reg[0] ;
  wire [0:0]\gc0.count_reg[8] ;
  wire \gr1.gr1_int.rfwft_n_3 ;
  wire m_aclk;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire p_2_out;
  wire p_8_out;
  wire ram_empty_fb_i_reg;
  wire [0:0]ram_empty_fb_i_reg_0;
  wire [9:9]rd_dc_i;
  wire rpntr_n_0;
  wire rpntr_n_15;
  wire rpntr_n_16;
  wire rpntr_n_17;
  wire rpntr_n_18;
  wire rpntr_n_19;
  wire rpntr_n_20;
  wire rpntr_n_21;
  wire rpntr_n_22;
  wire rpntr_n_23;
  wire [3:0]v1_reg;

  gpif2mst_async_32x512_rd_fwft \gr1.gr1_int.rfwft 
       (.E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .O(O),
        .empty_fwft_i_reg_0(\gc0.count_d1_reg[0] ),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (\gr1.gr1_int.rfwft_n_3 ),
        .m_aclk(m_aclk),
        .m_axis_tready(m_axis_tready),
        .m_axis_tvalid(m_axis_tvalid),
        .out(p_2_out),
        .p_8_out(p_8_out),
        .rd_dc_i(rd_dc_i));
  gpif2mst_async_32x512_rd_dc_fwft_ext_as \gr1.grdc2.rdc 
       (.axis_rd_data_count(axis_rd_data_count),
        .\g_rd.gvalid_low.rd_dc_i_reg[0]_0 (\gr1.gr1_int.rfwft_n_3 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[1]_0 (\g_rd.gvalid_low.rd_dc_i_reg[1] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[2]_0 (\g_rd.gvalid_low.rd_dc_i_reg[2] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[3]_0 (\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[4]_0 (\g_rd.gvalid_low.rd_dc_i_reg[4] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[5]_0 (\g_rd.gvalid_low.rd_dc_i_reg[5] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[6]_0 (\g_rd.gvalid_low.rd_dc_i_reg[6] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[7]_0 (\g_rd.gvalid_low.rd_dc_i_reg[7] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[8]_0 (\g_rd.gvalid_low.rd_dc_i_reg[8] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[9]_0 (\g_rd.gvalid_low.rd_dc_i_reg[9] ),
        .m_aclk(m_aclk),
        .rd_dc_i(rd_dc_i));
  gpif2mst_async_32x512_rd_pe_as \gras.gpe.rdpe 
       (.DI({DI,rpntr_n_0}),
        .S({rpntr_n_16,rpntr_n_17,rpntr_n_18,rpntr_n_19,rpntr_n_20,rpntr_n_21,rpntr_n_22,rpntr_n_23}),
        .axis_prog_empty(axis_prog_empty),
        .\gdiff.diff_pntr_pad_reg[9]_0 (rpntr_n_15),
        .\gpe1.prog_empty_i_reg_0 (\gc0.count_d1_reg[0] ),
        .m_aclk(m_aclk),
        .out(p_2_out));
  gpif2mst_async_32x512_rd_status_flags_as \gras.rsts 
       (.m_aclk(m_aclk),
        .out(p_2_out),
        .p_8_out(p_8_out),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg),
        .ram_empty_fb_i_reg_1(ram_empty_fb_i_reg_0),
        .ram_empty_fb_i_reg_2(\gc0.count_d1_reg[0] ),
        .v1_reg(v1_reg),
        .v1_reg_0(\c1/v1_reg ));
  gpif2mst_async_32x512_rd_bin_cntr rpntr
       (.DI(rpntr_n_0),
        .Q(Q),
        .S({rpntr_n_16,rpntr_n_17,rpntr_n_18,rpntr_n_19,rpntr_n_20,rpntr_n_21,rpntr_n_22,rpntr_n_23}),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\gc0.count_d1_reg[0]_0 (\gc0.count_d1_reg[0] ),
        .\gc0.count_d1_reg[7]_0 (rpntr_n_15),
        .\gc0.count_reg[8]_0 (\gc0.count_reg[8] ),
        .m_aclk(m_aclk),
        .p_8_out(p_8_out),
        .v1_reg(\c1/v1_reg ));
endmodule

(* ORIG_REF_NAME = "rd_pe_as" *) 
module gpif2mst_async_32x512_rd_pe_as
   (axis_prog_empty,
    DI,
    S,
    \gdiff.diff_pntr_pad_reg[9]_0 ,
    \gpe1.prog_empty_i_reg_0 ,
    m_aclk,
    out);
  output axis_prog_empty;
  input [6:0]DI;
  input [7:0]S;
  input [0:0]\gdiff.diff_pntr_pad_reg[9]_0 ;
  input \gpe1.prog_empty_i_reg_0 ;
  input m_aclk;
  input out;

  wire [6:0]DI;
  wire [7:0]S;
  wire axis_prog_empty;
  wire [9:1]diff_pntr_pad;
  wire [0:0]\gdiff.diff_pntr_pad_reg[9]_0 ;
  wire \gpe1.prog_empty_i_i_1_n_0 ;
  wire \gpe1.prog_empty_i_i_2_n_0 ;
  wire \gpe1.prog_empty_i_i_3_n_0 ;
  wire \gpe1.prog_empty_i_reg_0 ;
  wire m_aclk;
  wire out;
  wire [9:1]plusOp;
  wire plusOp__0_carry_n_0;
  wire plusOp__0_carry_n_1;
  wire plusOp__0_carry_n_2;
  wire plusOp__0_carry_n_3;
  wire plusOp__0_carry_n_4;
  wire plusOp__0_carry_n_5;
  wire plusOp__0_carry_n_6;
  wire plusOp__0_carry_n_7;
  wire [7:0]NLW_plusOp__0_carry__0_CO_UNCONNECTED;
  wire [7:1]NLW_plusOp__0_carry__0_O_UNCONNECTED;

  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(diff_pntr_pad[1]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(diff_pntr_pad[2]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(diff_pntr_pad[3]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[4]),
        .Q(diff_pntr_pad[4]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[5]),
        .Q(diff_pntr_pad[5]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[6]),
        .Q(diff_pntr_pad[6]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[7]),
        .Q(diff_pntr_pad[7]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[8]),
        .Q(diff_pntr_pad[8]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[9] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[9]),
        .Q(diff_pntr_pad[9]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  LUT6 #(
    .INIT(64'h8888888888888BBB)) 
    \gpe1.prog_empty_i_i_1 
       (.I0(axis_prog_empty),
        .I1(out),
        .I2(diff_pntr_pad[1]),
        .I3(diff_pntr_pad[2]),
        .I4(\gpe1.prog_empty_i_i_2_n_0 ),
        .I5(\gpe1.prog_empty_i_i_3_n_0 ),
        .O(\gpe1.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gpe1.prog_empty_i_i_2 
       (.I0(diff_pntr_pad[7]),
        .I1(diff_pntr_pad[6]),
        .I2(diff_pntr_pad[9]),
        .I3(diff_pntr_pad[8]),
        .O(\gpe1.prog_empty_i_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \gpe1.prog_empty_i_i_3 
       (.I0(diff_pntr_pad[3]),
        .I1(diff_pntr_pad[5]),
        .I2(diff_pntr_pad[4]),
        .O(\gpe1.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gpe1.prog_empty_i_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\gpe1.prog_empty_i_i_1_n_0 ),
        .Q(axis_prog_empty),
        .S(\gpe1.prog_empty_i_reg_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    plusOp__0_carry
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({plusOp__0_carry_n_0,plusOp__0_carry_n_1,plusOp__0_carry_n_2,plusOp__0_carry_n_3,plusOp__0_carry_n_4,plusOp__0_carry_n_5,plusOp__0_carry_n_6,plusOp__0_carry_n_7}),
        .DI({DI,1'b0}),
        .O(plusOp[8:1]),
        .S(S));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    plusOp__0_carry__0
       (.CI(plusOp__0_carry_n_0),
        .CI_TOP(1'b0),
        .CO(NLW_plusOp__0_carry__0_CO_UNCONNECTED[7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_plusOp__0_carry__0_O_UNCONNECTED[7:1],plusOp[9]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gdiff.diff_pntr_pad_reg[9]_0 }));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module gpif2mst_async_32x512_rd_status_flags_as
   (out,
    v1_reg,
    ram_empty_fb_i_reg_0,
    v1_reg_0,
    ram_empty_fb_i_reg_1,
    ram_empty_fb_i_reg_2,
    m_aclk,
    p_8_out);
  output out;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg_0;
  input [3:0]v1_reg_0;
  input [0:0]ram_empty_fb_i_reg_1;
  input ram_empty_fb_i_reg_2;
  input m_aclk;
  input p_8_out;

  wire c0_n_0;
  wire comp1;
  wire m_aclk;
  wire p_8_out;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  wire ram_empty_fb_i_reg_0;
  wire [0:0]ram_empty_fb_i_reg_1;
  wire ram_empty_fb_i_reg_2;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;

  assign out = ram_empty_fb_i;
  gpif2mst_async_32x512_compare_1 c0
       (.comp1(comp1),
        .p_8_out(p_8_out),
        .ram_empty_fb_i_reg(c0_n_0),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg_0),
        .v1_reg(v1_reg));
  gpif2mst_async_32x512_compare_2 c1
       (.comp1(comp1),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg_1),
        .v1_reg_0(v1_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(c0_n_0),
        .Q(ram_empty_fb_i),
        .S(ram_empty_fb_i_reg_2));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(c0_n_0),
        .Q(ram_empty_i),
        .S(ram_empty_fb_i_reg_2));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module gpif2mst_async_32x512_reset_blk_ramfifo
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ,
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ,
    wr_rst_busy,
    out,
    s_aclk,
    m_aclk,
    s_aresetn);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  output wr_rst_busy;
  output out;
  input s_aclk;
  input m_aclk;
  input s_aresetn;

  wire arst_sync_rd_rst;
  wire dest_out;
  wire dest_rst;
  wire inverted_reset;
  wire m_aclk;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  wire [3:0]rd_rst_wr_ext;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  wire s_aclk;
  wire s_aresetn;
  wire sckt_rd_rst_wr;
  wire wr_rst_busy_i__0;
  wire wr_rst_busy_i_n_0;
  wire [1:0]wr_rst_rd_ext;

  assign out = rst_d3;
  assign wr_rst_busy = wr_rst_busy_i__0;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(wr_rst_busy_i__0),
        .Q(rst_d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rst_d1),
        .Q(rst_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDSE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rst_d2),
        .Q(rst_d3),
        .S(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(wr_rst_rd_ext[1]),
        .I1(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ),
        .I2(arst_sync_rd_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .Q(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hD0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(rd_rst_wr_ext[1]),
        .I1(rd_rst_wr_ext[0]),
        .I2(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .Q(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .S(dest_rst));
  FDSE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(wr_rst_busy_i_n_0),
        .Q(wr_rst_busy_i__0),
        .S(dest_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]),
        .R(1'b0));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_32x512_xpm_cdc_single \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(s_aclk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(m_aclk),
        .src_in(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_32x512_xpm_cdc_single__2 \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(m_aclk),
        .dest_out(dest_out),
        .src_clk(s_aclk),
        .src_in(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_32x512_xpm_cdc_sync_rst \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(m_aclk),
        .dest_rst(arst_sync_rd_rst),
        .src_rst(inverted_reset));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_32x512_xpm_cdc_sync_rst__2 \ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(s_aclk),
        .dest_rst(dest_rst),
        .src_rst(inverted_reset));
  LUT1 #(
    .INIT(2'h1)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst_i_1 
       (.I0(s_aresetn),
        .O(inverted_reset));
  LUT5 #(
    .INIT(32'hF020F0F0)) 
    wr_rst_busy_i
       (.I0(rd_rst_wr_ext[1]),
        .I1(rd_rst_wr_ext[0]),
        .I2(wr_rst_busy_i__0),
        .I3(rd_rst_wr_ext[2]),
        .I4(rd_rst_wr_ext[3]),
        .O(wr_rst_busy_i_n_0));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module gpif2mst_async_32x512_wr_bin_cntr
   (S,
    Q,
    DI,
    \gic0.gc0.count_d1_reg[8]_0 ,
    \gic0.gc0.count_d2_reg[8]_0 ,
    v1_reg,
    \gic0.gc0.count_reg[7]_0 ,
    v1_reg_0,
    D,
    \gic0.gc0.count_d1_reg[0]_0 ,
    RD_PNTR_WR,
    O,
    \wr_data_count_i_reg[9] ,
    s_axis_tvalid,
    out,
    \gic0.gc0.count_d1_reg[1]_0 ,
    E,
    s_aclk);
  output [7:0]S;
  output [8:0]Q;
  output [5:0]DI;
  output [8:0]\gic0.gc0.count_d1_reg[8]_0 ;
  output [0:0]\gic0.gc0.count_d2_reg[8]_0 ;
  output [0:0]v1_reg;
  output [7:0]\gic0.gc0.count_reg[7]_0 ;
  output [0:0]v1_reg_0;
  output [8:0]D;
  output [1:0]\gic0.gc0.count_d1_reg[0]_0 ;
  input [8:0]RD_PNTR_WR;
  input [6:0]O;
  input [0:0]\wr_data_count_i_reg[9] ;
  input s_axis_tvalid;
  input out;
  input \gic0.gc0.count_d1_reg[1]_0 ;
  input [0:0]E;
  input s_aclk;

  wire [8:0]D;
  wire [5:0]DI;
  wire [0:0]E;
  wire [6:0]O;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [7:0]S;
  wire \gic0.gc0.count[8]_i_2_n_0 ;
  wire [1:0]\gic0.gc0.count_d1_reg[0]_0 ;
  wire \gic0.gc0.count_d1_reg[1]_0 ;
  wire [8:0]\gic0.gc0.count_d1_reg[8]_0 ;
  wire [0:0]\gic0.gc0.count_d2_reg[8]_0 ;
  wire [7:0]\gic0.gc0.count_reg[7]_0 ;
  wire out;
  wire [8:0]plusOp__0;
  wire s_aclk;
  wire s_axis_tvalid;
  wire [0:0]v1_reg;
  wire [0:0]v1_reg_0;
  wire \wr_data_count_i[9]_i_2_n_0 ;
  wire [0:0]\wr_data_count_i_reg[9] ;
  wire [8:8]wr_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .I2(\gic0.gc0.count_reg[7]_0 [2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [1]),
        .I1(\gic0.gc0.count_reg[7]_0 [0]),
        .I2(\gic0.gc0.count_reg[7]_0 [2]),
        .I3(\gic0.gc0.count_reg[7]_0 [3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [2]),
        .I1(\gic0.gc0.count_reg[7]_0 [0]),
        .I2(\gic0.gc0.count_reg[7]_0 [1]),
        .I3(\gic0.gc0.count_reg[7]_0 [3]),
        .I4(\gic0.gc0.count_reg[7]_0 [4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc0.count[5]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [3]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .I2(\gic0.gc0.count_reg[7]_0 [0]),
        .I3(\gic0.gc0.count_reg[7]_0 [2]),
        .I4(\gic0.gc0.count_reg[7]_0 [4]),
        .I5(\gic0.gc0.count_reg[7]_0 [5]),
        .O(plusOp__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[6]_i_1 
       (.I0(\gic0.gc0.count[8]_i_2_n_0 ),
        .I1(\gic0.gc0.count_reg[7]_0 [6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[7]_i_1 
       (.I0(\gic0.gc0.count[8]_i_2_n_0 ),
        .I1(\gic0.gc0.count_reg[7]_0 [6]),
        .I2(\gic0.gc0.count_reg[7]_0 [7]),
        .O(plusOp__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[8]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [6]),
        .I1(\gic0.gc0.count[8]_i_2_n_0 ),
        .I2(\gic0.gc0.count_reg[7]_0 [7]),
        .I3(wr_pntr_plus2),
        .O(plusOp__0[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc0.count[8]_i_2 
       (.I0(\gic0.gc0.count_reg[7]_0 [5]),
        .I1(\gic0.gc0.count_reg[7]_0 [3]),
        .I2(\gic0.gc0.count_reg[7]_0 [1]),
        .I3(\gic0.gc0.count_reg[7]_0 [0]),
        .I4(\gic0.gc0.count_reg[7]_0 [2]),
        .I5(\gic0.gc0.count_reg[7]_0 [4]),
        .O(\gic0.gc0.count[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [0]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [0]),
        .S(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [1]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [1]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [2]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [3]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [4]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[5] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [5]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[6] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [6]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[7] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [7]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[8] 
       (.C(s_aclk),
        .CE(E),
        .D(wr_pntr_plus2),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [8]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[5] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[6] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[7] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[8] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(\gic0.gc0.count_reg[7]_0 [0]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(\gic0.gc0.count_reg[7]_0 [1]),
        .S(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(\gic0.gc0.count_reg[7]_0 [2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(\gic0.gc0.count_reg[7]_0 [3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[4]),
        .Q(\gic0.gc0.count_reg[7]_0 [4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[5] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[5]),
        .Q(\gic0.gc0.count_reg[7]_0 [5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[6] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[6]),
        .Q(\gic0.gc0.count_reg[7]_0 [6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[7] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[7]),
        .Q(\gic0.gc0.count_reg[7]_0 [7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[8] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[8]),
        .Q(wr_pntr_plus2),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(wr_pntr_plus2),
        .I1(RD_PNTR_WR[8]),
        .O(v1_reg_0));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__2 
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [8]),
        .I1(RD_PNTR_WR[8]),
        .O(v1_reg));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1
       (.I0(Q[8]),
        .I1(RD_PNTR_WR[8]),
        .O(\gic0.gc0.count_d2_reg[8]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1
       (.I0(Q[7]),
        .I1(RD_PNTR_WR[7]),
        .O(S[7]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2
       (.I0(Q[6]),
        .I1(RD_PNTR_WR[6]),
        .O(S[6]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3
       (.I0(Q[5]),
        .I1(RD_PNTR_WR[5]),
        .O(S[5]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4
       (.I0(Q[4]),
        .I1(RD_PNTR_WR[4]),
        .O(S[4]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_5
       (.I0(Q[3]),
        .I1(RD_PNTR_WR[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_6
       (.I0(Q[2]),
        .I1(RD_PNTR_WR[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_7
       (.I0(Q[1]),
        .I1(RD_PNTR_WR[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_8
       (.I0(Q[0]),
        .I1(RD_PNTR_WR[0]),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_1
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [6]),
        .I1(RD_PNTR_WR[6]),
        .O(DI[5]));
  LUT6 #(
    .INIT(64'hF75108AE08AEF751)) 
    plusOp__0_carry_i_14
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [0]),
        .I1(s_axis_tvalid),
        .I2(out),
        .I3(RD_PNTR_WR[0]),
        .I4(\gic0.gc0.count_d1_reg[8]_0 [1]),
        .I5(RD_PNTR_WR[1]),
        .O(\gic0.gc0.count_d1_reg[0]_0 [1]));
  LUT4 #(
    .INIT(16'h9969)) 
    plusOp__0_carry_i_15
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [0]),
        .I1(RD_PNTR_WR[0]),
        .I2(s_axis_tvalid),
        .I3(out),
        .O(\gic0.gc0.count_d1_reg[0]_0 [0]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_2
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [5]),
        .I1(RD_PNTR_WR[5]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_3
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [4]),
        .I1(RD_PNTR_WR[4]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_4
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [3]),
        .I1(RD_PNTR_WR[3]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_5
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [2]),
        .I1(RD_PNTR_WR[2]),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_6
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [1]),
        .I1(RD_PNTR_WR[1]),
        .O(DI[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_data_count_i[1]_i_1 
       (.I0(O[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[2]_i_1 
       (.I0(O[0]),
        .I1(O[1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_data_count_i[3]_i_1 
       (.I0(O[0]),
        .I1(O[1]),
        .I2(O[2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_data_count_i[4]_i_1 
       (.I0(O[1]),
        .I1(O[0]),
        .I2(O[2]),
        .I3(O[3]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_data_count_i[5]_i_1 
       (.I0(O[2]),
        .I1(O[0]),
        .I2(O[1]),
        .I3(O[3]),
        .I4(O[4]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wr_data_count_i[6]_i_1 
       (.I0(O[3]),
        .I1(O[1]),
        .I2(O[0]),
        .I3(O[2]),
        .I4(O[4]),
        .I5(O[5]),
        .O(D[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[7]_i_1 
       (.I0(\wr_data_count_i[9]_i_2_n_0 ),
        .I1(O[6]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_data_count_i[8]_i_1 
       (.I0(\wr_data_count_i[9]_i_2_n_0 ),
        .I1(O[6]),
        .I2(\wr_data_count_i_reg[9] ),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \wr_data_count_i[9]_i_1 
       (.I0(\wr_data_count_i_reg[9] ),
        .I1(\wr_data_count_i[9]_i_2_n_0 ),
        .I2(O[6]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \wr_data_count_i[9]_i_2 
       (.I0(O[5]),
        .I1(O[3]),
        .I2(O[1]),
        .I3(O[0]),
        .I4(O[2]),
        .I5(O[4]),
        .O(\wr_data_count_i[9]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "wr_dc_fwft_ext_as" *) 
module gpif2mst_async_32x512_wr_dc_fwft_ext_as
   (O,
    \gic0.gc0.count_d2_reg[7] ,
    axis_wr_data_count,
    Q,
    S,
    \wr_data_count_i_reg[9]_0 ,
    \wr_data_count_i_reg[0]_0 ,
    D,
    s_aclk);
  output [6:0]O;
  output [0:0]\gic0.gc0.count_d2_reg[7] ;
  output [9:0]axis_wr_data_count;
  input [7:0]Q;
  input [7:0]S;
  input [0:0]\wr_data_count_i_reg[9]_0 ;
  input \wr_data_count_i_reg[0]_0 ;
  input [8:0]D;
  input s_aclk;

  wire [8:0]D;
  wire [6:0]O;
  wire [7:0]Q;
  wire [7:0]S;
  wire [9:0]axis_wr_data_count;
  wire [0:0]\gic0.gc0.count_d2_reg[7] ;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_15;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire minusOp_carry_n_4;
  wire minusOp_carry_n_5;
  wire minusOp_carry_n_6;
  wire minusOp_carry_n_7;
  wire s_aclk;
  wire \wr_data_count_i_reg[0]_0 ;
  wire [0:0]\wr_data_count_i_reg[9]_0 ;
  wire [7:0]NLW_minusOp_carry__0_CO_UNCONNECTED;
  wire [7:1]NLW_minusOp_carry__0_O_UNCONNECTED;

  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    minusOp_carry
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3,minusOp_carry_n_4,minusOp_carry_n_5,minusOp_carry_n_6,minusOp_carry_n_7}),
        .DI(Q),
        .O({O,minusOp_carry_n_15}),
        .S(S));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CI_TOP(1'b0),
        .CO(NLW_minusOp_carry__0_CO_UNCONNECTED[7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_minusOp_carry__0_O_UNCONNECTED[7:1],\gic0.gc0.count_d2_reg[7] }),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\wr_data_count_i_reg[9]_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(minusOp_carry_n_15),
        .Q(axis_wr_data_count[0]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(axis_wr_data_count[1]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(axis_wr_data_count[2]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(axis_wr_data_count[3]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(axis_wr_data_count[4]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[5] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(axis_wr_data_count[5]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[6] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(axis_wr_data_count[6]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[7] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(axis_wr_data_count[7]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[8] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(axis_wr_data_count[8]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[9] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(axis_wr_data_count[9]),
        .R(\wr_data_count_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module gpif2mst_async_32x512_wr_logic
   (out,
    Q,
    \gic0.gc0.count_d1_reg[8] ,
    E,
    \gic0.gc0.count_reg[7] ,
    s_axis_tready,
    axis_prog_full,
    axis_wr_data_count,
    \gmux.gm[4].gms.ms ,
    \gmux.gm[4].gms.ms_0 ,
    \gdiff.diff_pntr_pad_reg[8] ,
    S,
    \gic0.gc0.count_d1_reg[1] ,
    s_aclk,
    RD_PNTR_WR,
    s_axis_tvalid,
    ram_full_fb_i_reg);
  output out;
  output [8:0]Q;
  output [8:0]\gic0.gc0.count_d1_reg[8] ;
  output [0:0]E;
  output [7:0]\gic0.gc0.count_reg[7] ;
  output s_axis_tready;
  output axis_prog_full;
  output [9:0]axis_wr_data_count;
  input [3:0]\gmux.gm[4].gms.ms ;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [5:0]\gdiff.diff_pntr_pad_reg[8] ;
  input [0:0]S;
  input \gic0.gc0.count_d1_reg[1] ;
  input s_aclk;
  input [8:0]RD_PNTR_WR;
  input s_axis_tvalid;
  input ram_full_fb_i_reg;

  wire [0:0]E;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [0:0]S;
  wire axis_prog_full;
  wire [9:0]axis_wr_data_count;
  wire [4:4]\c1/v1_reg ;
  wire [4:4]\c2/v1_reg ;
  wire [5:0]\gdiff.diff_pntr_pad_reg[8] ;
  wire \gic0.gc0.count_d1_reg[1] ;
  wire [8:0]\gic0.gc0.count_d1_reg[8] ;
  wire [7:0]\gic0.gc0.count_reg[7] ;
  wire [3:0]\gmux.gm[4].gms.ms ;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire \gwas.gwdc1.wdcext_n_0 ;
  wire \gwas.gwdc1.wdcext_n_1 ;
  wire \gwas.gwdc1.wdcext_n_2 ;
  wire \gwas.gwdc1.wdcext_n_3 ;
  wire \gwas.gwdc1.wdcext_n_4 ;
  wire \gwas.gwdc1.wdcext_n_5 ;
  wire \gwas.gwdc1.wdcext_n_6 ;
  wire \gwas.gwdc1.wdcext_n_7 ;
  wire \gwas.wsts_n_1 ;
  wire out;
  wire ram_full_fb_i_reg;
  wire s_aclk;
  wire s_axis_tready;
  wire s_axis_tvalid;
  wire wpntr_n_0;
  wire wpntr_n_1;
  wire wpntr_n_17;
  wire wpntr_n_18;
  wire wpntr_n_19;
  wire wpntr_n_2;
  wire wpntr_n_20;
  wire wpntr_n_21;
  wire wpntr_n_22;
  wire wpntr_n_3;
  wire wpntr_n_32;
  wire wpntr_n_4;
  wire wpntr_n_43;
  wire wpntr_n_44;
  wire wpntr_n_45;
  wire wpntr_n_46;
  wire wpntr_n_47;
  wire wpntr_n_48;
  wire wpntr_n_49;
  wire wpntr_n_5;
  wire wpntr_n_50;
  wire wpntr_n_51;
  wire wpntr_n_52;
  wire wpntr_n_53;
  wire wpntr_n_6;
  wire wpntr_n_7;

  gpif2mst_async_32x512_wr_pf_as \gwas.gpf.wrpf 
       (.DI({wpntr_n_17,wpntr_n_18,wpntr_n_19,wpntr_n_20,wpntr_n_21,wpntr_n_22,\gwas.wsts_n_1 }),
        .S({\gdiff.diff_pntr_pad_reg[8] ,wpntr_n_52,wpntr_n_53}),
        .axis_prog_full(axis_prog_full),
        .\gdiff.diff_pntr_pad_reg[2]_0 (\gic0.gc0.count_d1_reg[1] ),
        .\gdiff.diff_pntr_pad_reg[9]_0 (S),
        .\gpf1.prog_full_i_reg_0 (ram_full_fb_i_reg),
        .out(out),
        .s_aclk(s_aclk));
  gpif2mst_async_32x512_wr_dc_fwft_ext_as \gwas.gwdc1.wdcext 
       (.D({wpntr_n_43,wpntr_n_44,wpntr_n_45,wpntr_n_46,wpntr_n_47,wpntr_n_48,wpntr_n_49,wpntr_n_50,wpntr_n_51}),
        .O({\gwas.gwdc1.wdcext_n_0 ,\gwas.gwdc1.wdcext_n_1 ,\gwas.gwdc1.wdcext_n_2 ,\gwas.gwdc1.wdcext_n_3 ,\gwas.gwdc1.wdcext_n_4 ,\gwas.gwdc1.wdcext_n_5 ,\gwas.gwdc1.wdcext_n_6 }),
        .Q(Q[7:0]),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3,wpntr_n_4,wpntr_n_5,wpntr_n_6,wpntr_n_7}),
        .axis_wr_data_count(axis_wr_data_count),
        .\gic0.gc0.count_d2_reg[7] (\gwas.gwdc1.wdcext_n_7 ),
        .s_aclk(s_aclk),
        .\wr_data_count_i_reg[0]_0 (\gic0.gc0.count_d1_reg[1] ),
        .\wr_data_count_i_reg[9]_0 (wpntr_n_32));
  gpif2mst_async_32x512_wr_status_flags_as \gwas.wsts 
       (.DI(\gwas.wsts_n_1 ),
        .E(E),
        .Q(\gic0.gc0.count_d1_reg[8] [0]),
        .RD_PNTR_WR(RD_PNTR_WR[0]),
        .\gmux.gm[4].gms.ms (\gmux.gm[4].gms.ms ),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms_0 ),
        .out(out),
        .ram_full_fb_i_reg_0(\gic0.gc0.count_d1_reg[1] ),
        .ram_full_fb_i_reg_1(ram_full_fb_i_reg),
        .s_aclk(s_aclk),
        .s_axis_tready(s_axis_tready),
        .s_axis_tvalid(s_axis_tvalid),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ));
  gpif2mst_async_32x512_wr_bin_cntr wpntr
       (.D({wpntr_n_43,wpntr_n_44,wpntr_n_45,wpntr_n_46,wpntr_n_47,wpntr_n_48,wpntr_n_49,wpntr_n_50,wpntr_n_51}),
        .DI({wpntr_n_17,wpntr_n_18,wpntr_n_19,wpntr_n_20,wpntr_n_21,wpntr_n_22}),
        .E(E),
        .O({\gwas.gwdc1.wdcext_n_0 ,\gwas.gwdc1.wdcext_n_1 ,\gwas.gwdc1.wdcext_n_2 ,\gwas.gwdc1.wdcext_n_3 ,\gwas.gwdc1.wdcext_n_4 ,\gwas.gwdc1.wdcext_n_5 ,\gwas.gwdc1.wdcext_n_6 }),
        .Q(Q),
        .RD_PNTR_WR(RD_PNTR_WR),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3,wpntr_n_4,wpntr_n_5,wpntr_n_6,wpntr_n_7}),
        .\gic0.gc0.count_d1_reg[0]_0 ({wpntr_n_52,wpntr_n_53}),
        .\gic0.gc0.count_d1_reg[1]_0 (\gic0.gc0.count_d1_reg[1] ),
        .\gic0.gc0.count_d1_reg[8]_0 (\gic0.gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8]_0 (wpntr_n_32),
        .\gic0.gc0.count_reg[7]_0 (\gic0.gc0.count_reg[7] ),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tvalid(s_axis_tvalid),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .\wr_data_count_i_reg[9] (\gwas.gwdc1.wdcext_n_7 ));
endmodule

(* ORIG_REF_NAME = "wr_pf_as" *) 
module gpif2mst_async_32x512_wr_pf_as
   (axis_prog_full,
    DI,
    S,
    \gdiff.diff_pntr_pad_reg[9]_0 ,
    \gdiff.diff_pntr_pad_reg[2]_0 ,
    s_aclk,
    \gpf1.prog_full_i_reg_0 ,
    out);
  output axis_prog_full;
  input [6:0]DI;
  input [7:0]S;
  input [0:0]\gdiff.diff_pntr_pad_reg[9]_0 ;
  input \gdiff.diff_pntr_pad_reg[2]_0 ;
  input s_aclk;
  input \gpf1.prog_full_i_reg_0 ;
  input out;

  wire [6:0]DI;
  wire [7:0]S;
  wire axis_prog_full;
  wire \gdiff.diff_pntr_pad_reg[2]_0 ;
  wire [0:0]\gdiff.diff_pntr_pad_reg[9]_0 ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[2] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[3] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[4] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[5] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[6] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[7] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[8] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[9] ;
  wire \gpf1.prog_full_i_i_1_n_0 ;
  wire \gpf1.prog_full_i_i_2_n_0 ;
  wire \gpf1.prog_full_i_i_3_n_0 ;
  wire \gpf1.prog_full_i_reg_0 ;
  wire out;
  wire plusOp__0_carry__0_n_15;
  wire plusOp__0_carry_n_0;
  wire plusOp__0_carry_n_1;
  wire plusOp__0_carry_n_10;
  wire plusOp__0_carry_n_11;
  wire plusOp__0_carry_n_12;
  wire plusOp__0_carry_n_13;
  wire plusOp__0_carry_n_14;
  wire plusOp__0_carry_n_2;
  wire plusOp__0_carry_n_3;
  wire plusOp__0_carry_n_4;
  wire plusOp__0_carry_n_5;
  wire plusOp__0_carry_n_6;
  wire plusOp__0_carry_n_7;
  wire plusOp__0_carry_n_8;
  wire plusOp__0_carry_n_9;
  wire s_aclk;
  wire [0:0]NLW_plusOp__0_carry_O_UNCONNECTED;
  wire [7:0]NLW_plusOp__0_carry__0_CO_UNCONNECTED;
  wire [7:1]NLW_plusOp__0_carry__0_O_UNCONNECTED;

  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_14),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[2] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_13),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[3] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_12),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[4] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[5] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_11),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[5] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[6] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_10),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[6] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[7] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_9),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[7] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[8] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_8),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[8] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[9] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry__0_n_15),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[9] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h0F010001)) 
    \gpf1.prog_full_i_i_1 
       (.I0(\gpf1.prog_full_i_i_2_n_0 ),
        .I1(\gpf1.prog_full_i_i_3_n_0 ),
        .I2(\gpf1.prog_full_i_reg_0 ),
        .I3(out),
        .I4(axis_prog_full),
        .O(\gpf1.prog_full_i_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h777FFFFF)) 
    \gpf1.prog_full_i_i_2 
       (.I0(\gdiff.diff_pntr_pad_reg_n_0_[8] ),
        .I1(\gdiff.diff_pntr_pad_reg_n_0_[7] ),
        .I2(\gdiff.diff_pntr_pad_reg_n_0_[3] ),
        .I3(\gdiff.diff_pntr_pad_reg_n_0_[2] ),
        .I4(\gdiff.diff_pntr_pad_reg_n_0_[9] ),
        .O(\gpf1.prog_full_i_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \gpf1.prog_full_i_i_3 
       (.I0(\gdiff.diff_pntr_pad_reg_n_0_[4] ),
        .I1(\gdiff.diff_pntr_pad_reg_n_0_[6] ),
        .I2(\gdiff.diff_pntr_pad_reg_n_0_[5] ),
        .O(\gpf1.prog_full_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \gpf1.prog_full_i_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(\gpf1.prog_full_i_i_1_n_0 ),
        .Q(axis_prog_full),
        .S(\gdiff.diff_pntr_pad_reg[2]_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    plusOp__0_carry
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({plusOp__0_carry_n_0,plusOp__0_carry_n_1,plusOp__0_carry_n_2,plusOp__0_carry_n_3,plusOp__0_carry_n_4,plusOp__0_carry_n_5,plusOp__0_carry_n_6,plusOp__0_carry_n_7}),
        .DI({DI,1'b0}),
        .O({plusOp__0_carry_n_8,plusOp__0_carry_n_9,plusOp__0_carry_n_10,plusOp__0_carry_n_11,plusOp__0_carry_n_12,plusOp__0_carry_n_13,plusOp__0_carry_n_14,NLW_plusOp__0_carry_O_UNCONNECTED[0]}),
        .S(S));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    plusOp__0_carry__0
       (.CI(plusOp__0_carry_n_0),
        .CI_TOP(1'b0),
        .CO(NLW_plusOp__0_carry__0_CO_UNCONNECTED[7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_plusOp__0_carry__0_O_UNCONNECTED[7:1],plusOp__0_carry__0_n_15}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gdiff.diff_pntr_pad_reg[9]_0 }));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module gpif2mst_async_32x512_wr_status_flags_as
   (out,
    DI,
    E,
    s_axis_tready,
    \gmux.gm[4].gms.ms ,
    v1_reg,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg_0,
    ram_full_fb_i_reg_0,
    s_aclk,
    RD_PNTR_WR,
    s_axis_tvalid,
    Q,
    ram_full_fb_i_reg_1);
  output out;
  output [0:0]DI;
  output [0:0]E;
  output s_axis_tready;
  input [3:0]\gmux.gm[4].gms.ms ;
  input [0:0]v1_reg;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg_0;
  input ram_full_fb_i_reg_0;
  input s_aclk;
  input [0:0]RD_PNTR_WR;
  input s_axis_tvalid;
  input [0:0]Q;
  input ram_full_fb_i_reg_1;

  wire [0:0]DI;
  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]RD_PNTR_WR;
  wire c2_n_0;
  wire comp1;
  wire [3:0]\gmux.gm[4].gms.ms ;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  wire ram_full_fb_i_reg_1;
  (* DONT_TOUCH *) wire ram_full_i;
  wire s_aclk;
  wire s_axis_tready;
  wire s_axis_tvalid;
  wire [0:0]v1_reg;
  wire [0:0]v1_reg_0;

  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_3 
       (.I0(s_axis_tvalid),
        .I1(ram_full_fb_i),
        .O(E));
  gpif2mst_async_32x512_compare c1
       (.comp1(comp1),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms ),
        .v1_reg(v1_reg));
  gpif2mst_async_32x512_compare_0 c2
       (.comp1(comp1),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms_0 ),
        .out(ram_full_fb_i),
        .ram_full_fb_i_reg(c2_n_0),
        .ram_full_fb_i_reg_0(ram_full_fb_i_reg_1),
        .s_axis_tvalid(s_axis_tvalid),
        .v1_reg_0(v1_reg_0));
  LUT4 #(
    .INIT(16'h7510)) 
    plusOp__0_carry_i_7
       (.I0(RD_PNTR_WR),
        .I1(ram_full_fb_i),
        .I2(s_axis_tvalid),
        .I3(Q),
        .O(DI));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(s_aclk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_full_fb_i),
        .S(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(s_aclk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_full_i),
        .S(ram_full_fb_i_reg_0));
  LUT1 #(
    .INIT(2'h1)) 
    s_axis_tready_INST_0
       (.I0(ram_full_i),
        .O(s_axis_tready));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module gpif2mst_async_34x512_blk_mem_gen_generic_cstr
   (D,
    ENB_dly_D,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    s_axis_tuser,
    E,
    out,
    s_axis_tvalid);
  output [33:0]D;
  output ENB_dly_D;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [1:0]s_axis_tuser;
  input [0:0]E;
  input out;
  input s_axis_tvalid;

  wire [33:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [8:0]Q;
  wire m_aclk;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;

  gpif2mst_async_34x512_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module gpif2mst_async_34x512_blk_mem_gen_prim_width
   (D,
    ENB_dly_D,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    s_axis_tuser,
    E,
    out,
    s_axis_tvalid);
  output [33:0]D;
  output ENB_dly_D;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [1:0]s_axis_tuser;
  input [0:0]E;
  input out;
  input s_axis_tvalid;

  wire [33:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENA_dly_D;
  wire ENB_I;
  wire ENB_dly;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [4:0]RSTA_SHFT_REG;
  wire [4:0]RSTB_SHFT_REG;
  wire \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ;
  wire \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ;
  wire \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ;
  wire m_aclk;
  wire out;
  wire p_1_out;
  wire p_3_out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;

  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_D_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ),
        .Q(ENA_dly_D),
        .R(1'b0));
  (* srl_bus_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop " *) 
  (* srl_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(s_aclk),
        .D(p_3_out),
        .Q(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_i_1 
       (.I0(RSTA_SHFT_REG[0]),
        .I1(RSTA_SHFT_REG[4]),
        .O(p_3_out));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_D_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(ENB_dly),
        .Q(ENB_dly_D),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(POR_B),
        .Q(ENB_dly),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.POR_B_i_1 
       (.I0(RSTB_SHFT_REG[0]),
        .I1(RSTB_SHFT_REG[4]),
        .O(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.POR_B_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(p_1_out),
        .Q(POR_B),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTA_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg " *) 
  (* srl_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(s_aclk),
        .D(RSTA_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTA_SHFT_REG[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTB_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg " *) 
  (* srl_name = "U0/\inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_aclk),
        .D(RSTB_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTB_SHFT_REG[4]),
        .R(1'b0));
  gpif2mst_async_34x512_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENA_dly_D(ENA_dly_D),
        .ENB_I(ENB_I),
        .POR_B(POR_B),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module gpif2mst_async_34x512_blk_mem_gen_prim_wrapper
   (D,
    m_aclk,
    s_aclk,
    ENB_I,
    POR_B,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    s_axis_tdata,
    s_axis_tuser,
    E,
    ENA_dly_D,
    out,
    s_axis_tvalid);
  output [33:0]D;
  input m_aclk;
  input s_aclk;
  input ENB_I;
  input POR_B;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [31:0]s_axis_tdata;
  input [1:0]s_axis_tuser;
  input [0:0]E;
  input ENA_dly_D;
  input out;
  input s_axis_tvalid;

  wire [33:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_68 ;
  wire \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_70 ;
  wire [0:0]E;
  wire ENA_I;
  wire ENA_dly_D;
  wire ENB_I;
  wire POR_B;
  wire [8:0]Q;
  wire m_aclk;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire [15:0]\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTPB_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(0),
    .DOB_REG(0),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({Q,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(m_aclk),
        .CLKBWRCLK(s_aclk),
        .DINADIN({s_axis_tdata[14:7],s_axis_tdata[5:0],s_axis_tuser}),
        .DINBDIN({s_axis_tdata[31:24],s_axis_tdata[22:15]}),
        .DINPADINP({1'b0,s_axis_tdata[6]}),
        .DINPBDINP({1'b0,s_axis_tdata[23]}),
        .DOUTADOUT({D[16:9],D[7:0]}),
        .DOUTBDOUT({D[33:26],D[24:17]}),
        .DOUTPADOUTP({\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_68 ,D[8]}),
        .DOUTPBDOUTP({\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_70 ,D[25]}),
        .ENARDEN(ENB_I),
        .ENBWREN(ENA_I),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(POR_B),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({E,E,E,E}));
  LUT3 #(
    .INIT(8'hBA)) 
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(ENA_dly_D),
        .I1(out),
        .I2(s_axis_tvalid),
        .O(ENA_I));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module gpif2mst_async_34x512_blk_mem_gen_top
   (D,
    ENB_dly_D,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    s_axis_tuser,
    E,
    out,
    s_axis_tvalid);
  output [33:0]D;
  output ENB_dly_D;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [1:0]s_axis_tuser;
  input [0:0]E;
  input out;
  input s_axis_tvalid;

  wire [33:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [8:0]Q;
  wire m_aclk;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;

  gpif2mst_async_34x512_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_2" *) 
module gpif2mst_async_34x512_blk_mem_gen_v8_4_2
   (D,
    ENB_dly_D,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    s_axis_tuser,
    E,
    out,
    s_axis_tvalid);
  output [33:0]D;
  output ENB_dly_D;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [1:0]s_axis_tuser;
  input [0:0]E;
  input out;
  input s_axis_tvalid;

  wire [33:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [8:0]Q;
  wire m_aclk;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;

  gpif2mst_async_34x512_blk_mem_gen_v8_4_2_synth inst_blk_mem_gen
       (.D(D),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_2_synth" *) 
module gpif2mst_async_34x512_blk_mem_gen_v8_4_2_synth
   (D,
    ENB_dly_D,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    s_axis_tuser,
    E,
    out,
    s_axis_tvalid);
  output [33:0]D;
  output ENB_dly_D;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [1:0]s_axis_tuser;
  input [0:0]E;
  input out;
  input s_axis_tvalid;

  wire [33:0]D;
  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [8:0]Q;
  wire m_aclk;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;

  gpif2mst_async_34x512_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module gpif2mst_async_34x512_clk_x_pntrs
   (WR_PNTR_RD,
    DI,
    \dest_out_bin_ff_reg[8] ,
    S,
    RD_PNTR_WR,
    v1_reg,
    v1_reg_0,
    \dest_out_bin_ff_reg[6] ,
    v1_reg_1,
    v1_reg_2,
    \dest_out_bin_ff_reg[7] ,
    \dest_out_bin_ff_reg[7]_0 ,
    \dest_out_bin_ff_reg[7]_1 ,
    \dest_out_bin_ff_reg[7]_2 ,
    \dest_out_bin_ff_reg[7]_3 ,
    \dest_out_bin_ff_reg[7]_4 ,
    \dest_out_bin_ff_reg[7]_5 ,
    \dest_out_bin_ff_reg[7]_6 ,
    \dest_out_bin_ff_reg[7]_7 ,
    O,
    Q,
    \gdiff.diff_pntr_pad_reg[9] ,
    \gmux.gm[3].gms.ms ,
    \gmux.gm[4].gms.ms ,
    s_aclk,
    \src_gray_ff_reg[8] ,
    m_aclk);
  output [8:0]WR_PNTR_RD;
  output [5:0]DI;
  output \dest_out_bin_ff_reg[8] ;
  output [0:0]S;
  output [8:0]RD_PNTR_WR;
  output [3:0]v1_reg;
  output [3:0]v1_reg_0;
  output [5:0]\dest_out_bin_ff_reg[6] ;
  output [3:0]v1_reg_1;
  output [0:0]v1_reg_2;
  output \dest_out_bin_ff_reg[7] ;
  output \dest_out_bin_ff_reg[7]_0 ;
  output \dest_out_bin_ff_reg[7]_1 ;
  output \dest_out_bin_ff_reg[7]_2 ;
  output \dest_out_bin_ff_reg[7]_3 ;
  output \dest_out_bin_ff_reg[7]_4 ;
  output \dest_out_bin_ff_reg[7]_5 ;
  output \dest_out_bin_ff_reg[7]_6 ;
  output \dest_out_bin_ff_reg[7]_7 ;
  output [0:0]O;
  input [8:0]Q;
  input [8:0]\gdiff.diff_pntr_pad_reg[9] ;
  input [7:0]\gmux.gm[3].gms.ms ;
  input [0:0]\gmux.gm[4].gms.ms ;
  input s_aclk;
  input [8:0]\src_gray_ff_reg[8] ;
  input m_aclk;

  wire [5:0]DI;
  wire [0:0]O;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [0:0]S;
  wire [8:0]WR_PNTR_RD;
  wire [5:0]\dest_out_bin_ff_reg[6] ;
  wire \dest_out_bin_ff_reg[7] ;
  wire \dest_out_bin_ff_reg[7]_0 ;
  wire \dest_out_bin_ff_reg[7]_1 ;
  wire \dest_out_bin_ff_reg[7]_2 ;
  wire \dest_out_bin_ff_reg[7]_3 ;
  wire \dest_out_bin_ff_reg[7]_4 ;
  wire \dest_out_bin_ff_reg[7]_5 ;
  wire \dest_out_bin_ff_reg[7]_6 ;
  wire \dest_out_bin_ff_reg[7]_7 ;
  wire \dest_out_bin_ff_reg[8] ;
  wire [8:1]diff_wr_rd__0;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_10_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_11_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_12_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_13_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_14_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_4_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_6_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_7_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_8_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_9_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_1 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_2 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_3 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_4 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_5 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_6 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_7 ;
  wire [8:0]\gdiff.diff_pntr_pad_reg[9] ;
  wire [7:0]\gmux.gm[3].gms.ms ;
  wire [0:0]\gmux.gm[4].gms.ms ;
  wire m_aclk;
  wire s_aclk;
  wire [8:0]\src_gray_ff_reg[8] ;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;
  wire [3:0]v1_reg_1;
  wire [0:0]v1_reg_2;
  wire [7:0]\NLW_g_rd.gvalid_low.rd_dc_i_reg[9]_i_3_CO_UNCONNECTED ;
  wire [7:1]\NLW_g_rd.gvalid_low.rd_dc_i_reg[9]_i_3_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \g_rd.gvalid_low.rd_dc_i[1]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .O(\dest_out_bin_ff_reg[7] ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \g_rd.gvalid_low.rd_dc_i[2]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .I1(diff_wr_rd__0[2]),
        .O(\dest_out_bin_ff_reg[7]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \g_rd.gvalid_low.rd_dc_i[3]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .I1(diff_wr_rd__0[2]),
        .I2(diff_wr_rd__0[3]),
        .O(\dest_out_bin_ff_reg[7]_7 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \g_rd.gvalid_low.rd_dc_i[4]_i_1 
       (.I0(diff_wr_rd__0[2]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[3]),
        .I3(diff_wr_rd__0[4]),
        .O(\dest_out_bin_ff_reg[7]_6 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_1 
       (.I0(diff_wr_rd__0[3]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[2]),
        .I3(diff_wr_rd__0[4]),
        .I4(diff_wr_rd__0[5]),
        .O(\dest_out_bin_ff_reg[7]_5 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \g_rd.gvalid_low.rd_dc_i[6]_i_1 
       (.I0(diff_wr_rd__0[4]),
        .I1(diff_wr_rd__0[2]),
        .I2(diff_wr_rd__0[1]),
        .I3(diff_wr_rd__0[3]),
        .I4(diff_wr_rd__0[5]),
        .I5(diff_wr_rd__0[6]),
        .O(\dest_out_bin_ff_reg[7]_4 ));
  LUT2 #(
    .INIT(4'h6)) 
    \g_rd.gvalid_low.rd_dc_i[7]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i[9]_i_4_n_0 ),
        .I1(diff_wr_rd__0[7]),
        .O(\dest_out_bin_ff_reg[7]_3 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \g_rd.gvalid_low.rd_dc_i[8]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i[9]_i_4_n_0 ),
        .I1(diff_wr_rd__0[7]),
        .I2(diff_wr_rd__0[8]),
        .O(\dest_out_bin_ff_reg[7]_2 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_10 
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_11 
       (.I0(WR_PNTR_RD[3]),
        .I1(Q[3]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_12 
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_13 
       (.I0(WR_PNTR_RD[1]),
        .I1(Q[1]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_14 
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_2 
       (.I0(diff_wr_rd__0[8]),
        .I1(\g_rd.gvalid_low.rd_dc_i[9]_i_4_n_0 ),
        .I2(diff_wr_rd__0[7]),
        .O(\dest_out_bin_ff_reg[7]_1 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_4 
       (.I0(diff_wr_rd__0[6]),
        .I1(diff_wr_rd__0[4]),
        .I2(diff_wr_rd__0[2]),
        .I3(diff_wr_rd__0[1]),
        .I4(diff_wr_rd__0[3]),
        .I5(diff_wr_rd__0[5]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_6 
       (.I0(WR_PNTR_RD[8]),
        .I1(Q[8]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_7 
       (.I0(WR_PNTR_RD[7]),
        .I1(Q[7]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_8 
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_9 
       (.I0(WR_PNTR_RD[5]),
        .I1(Q[5]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_9_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \g_rd.gvalid_low.rd_dc_i_reg[9]_i_3 
       (.CI(\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_g_rd.gvalid_low.rd_dc_i_reg[9]_i_3_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_g_rd.gvalid_low.rd_dc_i_reg[9]_i_3_O_UNCONNECTED [7:1],diff_wr_rd__0[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\g_rd.gvalid_low.rd_dc_i[9]_i_6_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \g_rd.gvalid_low.rd_dc_i_reg[9]_i_5 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_0 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_1 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_2 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_3 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_4 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_5 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_6 ,\g_rd.gvalid_low.rd_dc_i_reg[9]_i_5_n_7 }),
        .DI(WR_PNTR_RD[7:0]),
        .O({diff_wr_rd__0[7:1],O}),
        .S({\g_rd.gvalid_low.rd_dc_i[9]_i_7_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_8_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_9_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_10_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_11_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_12_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_13_n_0 ,\g_rd.gvalid_low.rd_dc_i[9]_i_14_n_0 }));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(RD_PNTR_WR[0]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [0]),
        .I2(RD_PNTR_WR[1]),
        .I3(\gdiff.diff_pntr_pad_reg[9] [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(RD_PNTR_WR[0]),
        .I1(\gmux.gm[3].gms.ms [0]),
        .I2(RD_PNTR_WR[1]),
        .I3(\gmux.gm[3].gms.ms [1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .I2(WR_PNTR_RD[1]),
        .I3(Q[1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gdiff.diff_pntr_pad_reg[9] [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gmux.gm[3].gms.ms [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gmux.gm[3].gms.ms [3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .I2(WR_PNTR_RD[3]),
        .I3(Q[3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(RD_PNTR_WR[4]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [4]),
        .I2(RD_PNTR_WR[5]),
        .I3(\gdiff.diff_pntr_pad_reg[9] [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[4]),
        .I1(\gmux.gm[3].gms.ms [4]),
        .I2(RD_PNTR_WR[5]),
        .I3(\gmux.gm[3].gms.ms [5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .I2(WR_PNTR_RD[5]),
        .I3(Q[5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [6]),
        .I2(RD_PNTR_WR[7]),
        .I3(\gdiff.diff_pntr_pad_reg[9] [7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gmux.gm[3].gms.ms [6]),
        .I2(RD_PNTR_WR[7]),
        .I3(\gmux.gm[3].gms.ms [7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .I2(WR_PNTR_RD[7]),
        .I3(Q[7]),
        .O(v1_reg_1[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__0 
       (.I0(WR_PNTR_RD[8]),
        .I1(\gmux.gm[4].gms.ms ),
        .O(v1_reg_2));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[8]),
        .I1(Q[8]),
        .O(\dest_out_bin_ff_reg[8] ));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry__0_i_1
       (.I0(RD_PNTR_WR[7]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [7]),
        .I2(RD_PNTR_WR[8]),
        .I3(\gdiff.diff_pntr_pad_reg[9] [8]),
        .O(S));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_10
       (.I0(RD_PNTR_WR[4]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [4]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [5]),
        .I3(RD_PNTR_WR[5]),
        .O(\dest_out_bin_ff_reg[6] [3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_11
       (.I0(RD_PNTR_WR[3]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [3]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [4]),
        .I3(RD_PNTR_WR[4]),
        .O(\dest_out_bin_ff_reg[6] [2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_12
       (.I0(RD_PNTR_WR[2]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [2]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [3]),
        .I3(RD_PNTR_WR[3]),
        .O(\dest_out_bin_ff_reg[6] [1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_13
       (.I0(RD_PNTR_WR[1]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [1]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [2]),
        .I3(RD_PNTR_WR[2]),
        .O(\dest_out_bin_ff_reg[6] [0]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_1__0
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_2__0
       (.I0(WR_PNTR_RD[5]),
        .I1(Q[5]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_3__0
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_4__0
       (.I0(WR_PNTR_RD[3]),
        .I1(Q[3]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_5__0
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_6__0
       (.I0(WR_PNTR_RD[1]),
        .I1(Q[1]),
        .O(DI[0]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_8
       (.I0(RD_PNTR_WR[6]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [6]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [7]),
        .I3(RD_PNTR_WR[7]),
        .O(\dest_out_bin_ff_reg[6] [5]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_9
       (.I0(RD_PNTR_WR[5]),
        .I1(\gdiff.diff_pntr_pad_reg[9] [5]),
        .I2(\gdiff.diff_pntr_pad_reg[9] [6]),
        .I3(RD_PNTR_WR[6]),
        .O(\dest_out_bin_ff_reg[6] [4]));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_34x512_xpm_cdc_gray rd_pntr_cdc_inst
       (.dest_clk(s_aclk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(m_aclk),
        .src_in_bin(Q));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_34x512_xpm_cdc_gray__2 wr_pntr_cdc_inst
       (.dest_clk(m_aclk),
        .dest_out_bin(WR_PNTR_RD),
        .src_clk(s_aclk),
        .src_in_bin(\src_gray_ff_reg[8] ));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module gpif2mst_async_34x512_compare
   (comp1,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg);
  output comp1;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire [0:0]v1_reg;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO " *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \gmux.gm[0].gm1.m1_CARRY4_CARRY8 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED [7:5],comp1,carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .DI({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED [7:5],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED [7:0]),
        .S({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED [7:5],v1_reg,\gmux.gm[4].gms.ms_0 }));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module gpif2mst_async_34x512_compare_0
   (ram_full_fb_i_reg,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg_0,
    out,
    s_axis_tvalid,
    comp1,
    ram_full_fb_i_reg_0);
  output ram_full_fb_i_reg;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg_0;
  input out;
  input s_axis_tvalid;
  input comp1;
  input ram_full_fb_i_reg_0;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire comp2;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire s_axis_tvalid;
  wire [0:0]v1_reg_0;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO " *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \gmux.gm[0].gm1.m1_CARRY4_CARRY8 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED [7:5],comp2,carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .DI({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED [7:5],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED [7:0]),
        .S({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED [7:5],v1_reg_0,\gmux.gm[4].gms.ms_0 }));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(comp2),
        .I1(out),
        .I2(s_axis_tvalid),
        .I3(comp1),
        .I4(ram_full_fb_i_reg_0),
        .O(ram_full_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module gpif2mst_async_34x512_compare_1
   (ram_empty_fb_i_reg,
    v1_reg,
    ram_empty_fb_i_reg_0,
    p_8_out,
    comp1);
  output ram_empty_fb_i_reg;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg_0;
  input p_8_out;
  input comp1;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp0;
  wire comp1;
  wire p_8_out;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire [3:0]v1_reg;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO " *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \gmux.gm[0].gm1.m1_CARRY4_CARRY8 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED [7:5],comp0,carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .DI({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED [7:5],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED [7:0]),
        .S({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED [7:5],ram_empty_fb_i_reg_0,v1_reg}));
  LUT3 #(
    .INIT(8'hEA)) 
    ram_empty_i_i_1
       (.I0(comp0),
        .I1(p_8_out),
        .I2(comp1),
        .O(ram_empty_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module gpif2mst_async_34x512_compare_2
   (comp1,
    v1_reg_0,
    ram_empty_fb_i_reg);
  output comp1;
  input [3:0]v1_reg_0;
  input [0:0]ram_empty_fb_i_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [0:0]ram_empty_fb_i_reg;
  wire [3:0]v1_reg_0;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:5]\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO " *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \gmux.gm[0].gm1.m1_CARRY4_CARRY8 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_CO_UNCONNECTED [7:5],comp1,carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .DI({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_DI_UNCONNECTED [7:5],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_O_UNCONNECTED [7:0]),
        .S({\NLW_gmux.gm[0].gm1.m1_CARRY4_CARRY8_S_UNCONNECTED [7:5],ram_empty_fb_i_reg,v1_reg_0}));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module gpif2mst_async_34x512_fifo_generator_ramfifo
   (wr_rst_busy,
    Q,
    axis_rd_data_count,
    axis_prog_full,
    axis_wr_data_count,
    s_axis_tready,
    m_axis_tvalid,
    axis_prog_empty,
    s_aclk,
    m_aclk,
    s_axis_tdata,
    s_axis_tuser,
    s_axis_tvalid,
    m_axis_tready,
    s_aresetn);
  output wr_rst_busy;
  output [33:0]Q;
  output [9:0]axis_rd_data_count;
  output axis_prog_full;
  output [9:0]axis_wr_data_count;
  output s_axis_tready;
  output m_axis_tvalid;
  output axis_prog_empty;
  input s_aclk;
  input m_aclk;
  input [31:0]s_axis_tdata;
  input [1:0]s_axis_tuser;
  input s_axis_tvalid;
  input m_axis_tready;
  input s_aresetn;

  wire [33:0]Q;
  wire axis_prog_empty;
  wire axis_prog_full;
  wire [9:0]axis_rd_data_count;
  wire [9:0]axis_wr_data_count;
  wire [0:0]diff_wr_rd;
  wire dout_i;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_10 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_11 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_12 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_13 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_14 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_15 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_16 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_34 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_35 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_36 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_37 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_38 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_39 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_45 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_46 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_47 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_48 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_49 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_50 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_51 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_52 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_53 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_9 ;
  wire [3:0]\gras.rsts/c0/v1_reg ;
  wire [4:4]\gras.rsts/c1/v1_reg ;
  wire [3:0]\gwas.wsts/c1/v1_reg ;
  wire [3:0]\gwas.wsts/c2/v1_reg ;
  wire m_aclk;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire p_0_in;
  wire [8:0]p_0_out;
  wire [8:0]p_13_out;
  wire [8:0]p_14_out;
  wire p_20_out;
  wire [8:0]p_24_out;
  wire [8:0]p_25_out;
  wire [8:8]rd_pntr_plus1;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire rstblk_n_1;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axis_tdata;
  wire s_axis_tready;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire [7:0]wr_pntr_plus2;
  wire wr_rst_busy;

  gpif2mst_async_34x512_clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.DI({\gntv_or_sync_fifo.gcx.clkx_n_9 ,\gntv_or_sync_fifo.gcx.clkx_n_10 ,\gntv_or_sync_fifo.gcx.clkx_n_11 ,\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 }),
        .O(diff_wr_rd),
        .Q(p_0_out),
        .RD_PNTR_WR(p_25_out),
        .S(\gntv_or_sync_fifo.gcx.clkx_n_16 ),
        .WR_PNTR_RD(p_24_out),
        .\dest_out_bin_ff_reg[6] ({\gntv_or_sync_fifo.gcx.clkx_n_34 ,\gntv_or_sync_fifo.gcx.clkx_n_35 ,\gntv_or_sync_fifo.gcx.clkx_n_36 ,\gntv_or_sync_fifo.gcx.clkx_n_37 ,\gntv_or_sync_fifo.gcx.clkx_n_38 ,\gntv_or_sync_fifo.gcx.clkx_n_39 }),
        .\dest_out_bin_ff_reg[7] (\gntv_or_sync_fifo.gcx.clkx_n_45 ),
        .\dest_out_bin_ff_reg[7]_0 (\gntv_or_sync_fifo.gcx.clkx_n_46 ),
        .\dest_out_bin_ff_reg[7]_1 (\gntv_or_sync_fifo.gcx.clkx_n_47 ),
        .\dest_out_bin_ff_reg[7]_2 (\gntv_or_sync_fifo.gcx.clkx_n_48 ),
        .\dest_out_bin_ff_reg[7]_3 (\gntv_or_sync_fifo.gcx.clkx_n_49 ),
        .\dest_out_bin_ff_reg[7]_4 (\gntv_or_sync_fifo.gcx.clkx_n_50 ),
        .\dest_out_bin_ff_reg[7]_5 (\gntv_or_sync_fifo.gcx.clkx_n_51 ),
        .\dest_out_bin_ff_reg[7]_6 (\gntv_or_sync_fifo.gcx.clkx_n_52 ),
        .\dest_out_bin_ff_reg[7]_7 (\gntv_or_sync_fifo.gcx.clkx_n_53 ),
        .\dest_out_bin_ff_reg[8] (\gntv_or_sync_fifo.gcx.clkx_n_15 ),
        .\gdiff.diff_pntr_pad_reg[9] (p_14_out),
        .\gmux.gm[3].gms.ms (wr_pntr_plus2),
        .\gmux.gm[4].gms.ms (rd_pntr_plus1),
        .m_aclk(m_aclk),
        .s_aclk(s_aclk),
        .\src_gray_ff_reg[8] (p_13_out),
        .v1_reg(\gwas.wsts/c1/v1_reg ),
        .v1_reg_0(\gwas.wsts/c2/v1_reg ),
        .v1_reg_1(\gras.rsts/c0/v1_reg ),
        .v1_reg_2(\gras.rsts/c1/v1_reg ));
  gpif2mst_async_34x512_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.DI({\gntv_or_sync_fifo.gcx.clkx_n_9 ,\gntv_or_sync_fifo.gcx.clkx_n_10 ,\gntv_or_sync_fifo.gcx.clkx_n_11 ,\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 }),
        .E(dout_i),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .O(diff_wr_rd),
        .Q(p_0_out),
        .WR_PNTR_RD(p_24_out),
        .axis_prog_empty(axis_prog_empty),
        .axis_rd_data_count(axis_rd_data_count),
        .\g_rd.gvalid_low.rd_dc_i_reg[1] (\gntv_or_sync_fifo.gcx.clkx_n_45 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_46 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[3] (\gntv_or_sync_fifo.gcx.clkx_n_53 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[4] (\gntv_or_sync_fifo.gcx.clkx_n_52 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[5] (\gntv_or_sync_fifo.gcx.clkx_n_51 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[6] (\gntv_or_sync_fifo.gcx.clkx_n_50 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[7] (\gntv_or_sync_fifo.gcx.clkx_n_49 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[8] (\gntv_or_sync_fifo.gcx.clkx_n_48 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[9] (\gntv_or_sync_fifo.gcx.clkx_n_47 ),
        .\gc0.count_d1_reg[0] (rstblk_n_1),
        .\gc0.count_reg[8] (rd_pntr_plus1),
        .m_aclk(m_aclk),
        .m_axis_tready(m_axis_tready),
        .m_axis_tvalid(m_axis_tvalid),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_15 ),
        .ram_empty_fb_i_reg_0(\gras.rsts/c1/v1_reg ),
        .v1_reg(\gras.rsts/c0/v1_reg ));
  gpif2mst_async_34x512_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.E(p_20_out),
        .Q(p_13_out),
        .RD_PNTR_WR(p_25_out),
        .S(\gntv_or_sync_fifo.gcx.clkx_n_16 ),
        .axis_prog_full(axis_prog_full),
        .axis_wr_data_count(axis_wr_data_count),
        .\gdiff.diff_pntr_pad_reg[8] ({\gntv_or_sync_fifo.gcx.clkx_n_34 ,\gntv_or_sync_fifo.gcx.clkx_n_35 ,\gntv_or_sync_fifo.gcx.clkx_n_36 ,\gntv_or_sync_fifo.gcx.clkx_n_37 ,\gntv_or_sync_fifo.gcx.clkx_n_38 ,\gntv_or_sync_fifo.gcx.clkx_n_39 }),
        .\gic0.gc0.count_d1_reg[1] (rstblk_n_0),
        .\gic0.gc0.count_d1_reg[8] (p_14_out),
        .\gic0.gc0.count_reg[7] (wr_pntr_plus2),
        .\gmux.gm[4].gms.ms (\gwas.wsts/c1/v1_reg ),
        .\gmux.gm[4].gms.ms_0 (\gwas.wsts/c2/v1_reg ),
        .out(p_0_in),
        .ram_full_fb_i_reg(rst_full_gen_i),
        .s_aclk(s_aclk),
        .s_axis_tready(s_axis_tready),
        .s_axis_tvalid(s_axis_tvalid));
  gpif2mst_async_34x512_memory \gntv_or_sync_fifo.mem 
       (.\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_13_out),
        .E(p_20_out),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .Q(p_0_out),
        .\goreg_bm.dout_i_reg[33]_0 (Q),
        .\goreg_bm.dout_i_reg[33]_1 (dout_i),
        .m_aclk(m_aclk),
        .out(p_0_in),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid));
  gpif2mst_async_34x512_reset_blk_ramfifo rstblk
       (.m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 (rstblk_n_1),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 (rstblk_n_0),
        .out(rst_full_gen_i),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module gpif2mst_async_34x512_fifo_generator_top
   (wr_rst_busy,
    Q,
    axis_rd_data_count,
    axis_prog_full,
    axis_wr_data_count,
    s_axis_tready,
    m_axis_tvalid,
    axis_prog_empty,
    s_aclk,
    m_aclk,
    s_axis_tdata,
    s_axis_tuser,
    s_axis_tvalid,
    m_axis_tready,
    s_aresetn);
  output wr_rst_busy;
  output [33:0]Q;
  output [9:0]axis_rd_data_count;
  output axis_prog_full;
  output [9:0]axis_wr_data_count;
  output s_axis_tready;
  output m_axis_tvalid;
  output axis_prog_empty;
  input s_aclk;
  input m_aclk;
  input [31:0]s_axis_tdata;
  input [1:0]s_axis_tuser;
  input s_axis_tvalid;
  input m_axis_tready;
  input s_aresetn;

  wire [33:0]Q;
  wire axis_prog_empty;
  wire axis_prog_full;
  wire [9:0]axis_rd_data_count;
  wire [9:0]axis_wr_data_count;
  wire m_aclk;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axis_tdata;
  wire s_axis_tready;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire wr_rst_busy;

  gpif2mst_async_34x512_fifo_generator_ramfifo \grf.rf 
       (.Q(Q),
        .axis_prog_empty(axis_prog_empty),
        .axis_prog_full(axis_prog_full),
        .axis_rd_data_count(axis_rd_data_count),
        .axis_wr_data_count(axis_wr_data_count),
        .m_aclk(m_aclk),
        .m_axis_tready(m_axis_tready),
        .m_axis_tvalid(m_axis_tvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tready(s_axis_tready),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "32" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "4" *) (* C_AXIS_TSTRB_WIDTH = "4" *) 
(* C_AXIS_TUSER_WIDTH = "2" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "10" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "18" *) 
(* C_DIN_WIDTH_AXIS = "34" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "32" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "18" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynquplus" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "1" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_IMPLEMENTATION_TYPE_AXIS = "11" *) (* C_IMPLEMENTATION_TYPE_RACH = "12" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "11" *) (* C_IMPLEMENTATION_TYPE_WACH = "12" *) (* C_IMPLEMENTATION_TYPE_WDCH = "11" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "12" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "1" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "2" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "4kx4" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "13" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1021" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "13" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1021" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "13" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "1" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "508" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "15" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "15" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "15" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "1022" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "1" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "10" *) 
(* C_RD_DEPTH = "1024" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "10" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "10" *) 
(* C_WR_DEPTH = "1024" *) (* C_WR_DEPTH_AXIS = "512" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "10" *) 
(* C_WR_PNTR_WIDTH_AXIS = "9" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_3" *) 
module gpif2mst_async_34x512_fifo_generator_v13_2_3
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [17:0]din;
  input wr_en;
  input rd_en;
  input [9:0]prog_empty_thresh;
  input [9:0]prog_empty_thresh_assert;
  input [9:0]prog_empty_thresh_negate;
  input [9:0]prog_full_thresh;
  input [9:0]prog_full_thresh_assert;
  input [9:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [17:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [9:0]data_count;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [31:0]s_axis_tdata;
  input [3:0]s_axis_tstrb;
  input [3:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [1:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [31:0]m_axis_tdata;
  output [3:0]m_axis_tstrb;
  output [3:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [1:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [8:0]axis_prog_full_thresh;
  input [8:0]axis_prog_empty_thresh;
  output [9:0]axis_data_count;
  output [9:0]axis_wr_data_count;
  output [9:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire axis_prog_empty;
  wire axis_prog_full;
  wire [9:0]axis_rd_data_count;
  wire [9:0]axis_wr_data_count;
  wire m_aclk;
  wire [31:0]m_axis_tdata;
  wire m_axis_tready;
  wire [1:0]m_axis_tuser;
  wire m_axis_tvalid;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axis_tdata;
  wire s_axis_tready;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire wr_rst_busy;

  assign almost_empty = \<const1> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign data_count[9] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[17] = \<const0> ;
  assign dout[16] = \<const0> ;
  assign dout[15] = \<const0> ;
  assign dout[14] = \<const0> ;
  assign dout[13] = \<const0> ;
  assign dout[12] = \<const0> ;
  assign dout[11] = \<const0> ;
  assign dout[10] = \<const0> ;
  assign dout[9] = \<const0> ;
  assign dout[8] = \<const0> ;
  assign dout[7] = \<const0> ;
  assign dout[6] = \<const0> ;
  assign dout[5] = \<const0> ;
  assign dout[4] = \<const0> ;
  assign dout[3] = \<const0> ;
  assign dout[2] = \<const0> ;
  assign dout[1] = \<const0> ;
  assign dout[0] = \<const0> ;
  assign empty = \<const1> ;
  assign full = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[3] = \<const0> ;
  assign m_axis_tkeep[2] = \<const0> ;
  assign m_axis_tkeep[1] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const1> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[9] = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[9] = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  gpif2mst_async_34x512_fifo_generator_v13_2_3_synth inst_fifo_gen
       (.Q({m_axis_tdata,m_axis_tuser}),
        .axis_prog_empty(axis_prog_empty),
        .axis_prog_full(axis_prog_full),
        .axis_rd_data_count(axis_rd_data_count),
        .axis_wr_data_count(axis_wr_data_count),
        .m_aclk(m_aclk),
        .m_axis_tready(m_axis_tready),
        .m_axis_tvalid(m_axis_tvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tready(s_axis_tready),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_3_synth" *) 
module gpif2mst_async_34x512_fifo_generator_v13_2_3_synth
   (wr_rst_busy,
    Q,
    axis_rd_data_count,
    axis_prog_full,
    axis_wr_data_count,
    s_axis_tready,
    m_axis_tvalid,
    axis_prog_empty,
    s_aclk,
    m_aclk,
    s_axis_tdata,
    s_axis_tuser,
    s_axis_tvalid,
    m_axis_tready,
    s_aresetn);
  output wr_rst_busy;
  output [33:0]Q;
  output [9:0]axis_rd_data_count;
  output axis_prog_full;
  output [9:0]axis_wr_data_count;
  output s_axis_tready;
  output m_axis_tvalid;
  output axis_prog_empty;
  input s_aclk;
  input m_aclk;
  input [31:0]s_axis_tdata;
  input [1:0]s_axis_tuser;
  input s_axis_tvalid;
  input m_axis_tready;
  input s_aresetn;

  wire [33:0]Q;
  wire axis_prog_empty;
  wire axis_prog_full;
  wire [9:0]axis_rd_data_count;
  wire [9:0]axis_wr_data_count;
  wire m_aclk;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axis_tdata;
  wire s_axis_tready;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire wr_rst_busy;

  gpif2mst_async_34x512_fifo_generator_top \gaxis_fifo.gaxisf.axisf 
       (.Q(Q),
        .axis_prog_empty(axis_prog_empty),
        .axis_prog_full(axis_prog_full),
        .axis_rd_data_count(axis_rd_data_count),
        .axis_wr_data_count(axis_wr_data_count),
        .m_aclk(m_aclk),
        .m_axis_tready(m_axis_tready),
        .m_axis_tvalid(m_axis_tvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tready(s_axis_tready),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module gpif2mst_async_34x512_memory
   (ENB_dly_D,
    \goreg_bm.dout_i_reg[33]_0 ,
    s_aclk,
    m_aclk,
    ENB_I,
    Q,
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    s_axis_tdata,
    s_axis_tuser,
    E,
    out,
    s_axis_tvalid,
    \goreg_bm.dout_i_reg[33]_1 );
  output ENB_dly_D;
  output [33:0]\goreg_bm.dout_i_reg[33]_0 ;
  input s_aclk;
  input m_aclk;
  input ENB_I;
  input [8:0]Q;
  input [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [31:0]s_axis_tdata;
  input [1:0]s_axis_tuser;
  input [0:0]E;
  input out;
  input s_axis_tvalid;
  input [0:0]\goreg_bm.dout_i_reg[33]_1 ;

  wire [8:0]\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [8:0]Q;
  wire [33:0]doutb;
  wire [33:0]\goreg_bm.dout_i_reg[33]_0 ;
  wire [0:0]\goreg_bm.dout_i_reg[33]_1 ;
  wire m_aclk;
  wire out;
  wire s_aclk;
  wire [31:0]s_axis_tdata;
  wire [1:0]s_axis_tuser;
  wire s_axis_tvalid;

  gpif2mst_async_34x512_blk_mem_gen_v8_4_2 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .Q(Q),
        .m_aclk(m_aclk),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[0]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[10]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[11]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[12]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[13]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[14]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[15]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[16]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[17]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[18]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[19]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[1]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[20]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[21]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[22]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[23]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[24]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[25]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[26]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[27]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[28]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[29]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[2]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[30]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[31]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[32] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[32]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[33] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[33]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[3]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[4]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[5]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[6]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[7]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[8]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(m_aclk),
        .CE(\goreg_bm.dout_i_reg[33]_1 ),
        .D(doutb[9]),
        .Q(\goreg_bm.dout_i_reg[33]_0 [9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module gpif2mst_async_34x512_rd_bin_cntr
   (DI,
    Q,
    \gc0.count_reg[8]_0 ,
    v1_reg,
    \gc0.count_d1_reg[7]_0 ,
    S,
    p_8_out,
    WR_PNTR_RD,
    \gc0.count_d1_reg[0]_0 ,
    m_aclk);
  output [0:0]DI;
  output [8:0]Q;
  output [0:0]\gc0.count_reg[8]_0 ;
  output [3:0]v1_reg;
  output [0:0]\gc0.count_d1_reg[7]_0 ;
  output [7:0]S;
  input p_8_out;
  input [8:0]WR_PNTR_RD;
  input \gc0.count_d1_reg[0]_0 ;
  input m_aclk;

  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire [8:0]WR_PNTR_RD;
  wire \gc0.count[8]_i_2_n_0 ;
  wire \gc0.count_d1_reg[0]_0 ;
  wire [0:0]\gc0.count_d1_reg[7]_0 ;
  wire [0:0]\gc0.count_reg[8]_0 ;
  wire m_aclk;
  wire p_8_out;
  wire [8:0]plusOp__1;
  wire [7:0]rd_pntr_plus1;
  wire [3:0]v1_reg;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .O(plusOp__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[2]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1 
       (.I0(rd_pntr_plus1[2]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .I4(rd_pntr_plus1[4]),
        .O(plusOp__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[0]),
        .I3(rd_pntr_plus1[2]),
        .I4(rd_pntr_plus1[4]),
        .I5(rd_pntr_plus1[5]),
        .O(plusOp__1[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[6]_i_1 
       (.I0(\gc0.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus1[6]),
        .O(plusOp__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[7]_i_1 
       (.I0(\gc0.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus1[6]),
        .I2(rd_pntr_plus1[7]),
        .O(plusOp__1[7]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[8]_i_1 
       (.I0(rd_pntr_plus1[6]),
        .I1(\gc0.count[8]_i_2_n_0 ),
        .I2(rd_pntr_plus1[7]),
        .I3(\gc0.count_reg[8]_0 ),
        .O(plusOp__1[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc0.count[8]_i_2 
       (.I0(rd_pntr_plus1[5]),
        .I1(rd_pntr_plus1[3]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[0]),
        .I4(rd_pntr_plus1[2]),
        .I5(rd_pntr_plus1[4]),
        .O(\gc0.count[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[0]),
        .Q(Q[0]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[1]),
        .Q(Q[1]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[2]),
        .Q(Q[2]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[3]),
        .Q(Q[3]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[4]),
        .Q(Q[4]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[5]),
        .Q(Q[5]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[6]),
        .Q(Q[6]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(rd_pntr_plus1[7]),
        .Q(Q[7]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[8] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(\gc0.count_reg[8]_0 ),
        .Q(Q[8]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[0]),
        .Q(rd_pntr_plus1[0]),
        .S(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[1]),
        .Q(rd_pntr_plus1[1]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[2]),
        .Q(rd_pntr_plus1[2]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[3]),
        .Q(rd_pntr_plus1[3]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[4]),
        .Q(rd_pntr_plus1[4]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[5]),
        .Q(rd_pntr_plus1[5]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[6]),
        .Q(rd_pntr_plus1[6]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[7]),
        .Q(rd_pntr_plus1[7]),
        .R(\gc0.count_d1_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[8] 
       (.C(m_aclk),
        .CE(p_8_out),
        .D(plusOp__1[8]),
        .Q(\gc0.count_reg[8]_0 ),
        .R(\gc0.count_d1_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__2 
       (.I0(rd_pntr_plus1[0]),
        .I1(WR_PNTR_RD[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(WR_PNTR_RD[1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(rd_pntr_plus1[3]),
        .I3(WR_PNTR_RD[3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[4]),
        .I1(WR_PNTR_RD[4]),
        .I2(rd_pntr_plus1[5]),
        .I3(WR_PNTR_RD[5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(rd_pntr_plus1[7]),
        .I3(WR_PNTR_RD[7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry__0_i_1__0
       (.I0(Q[7]),
        .I1(WR_PNTR_RD[7]),
        .I2(Q[8]),
        .I3(WR_PNTR_RD[8]),
        .O(\gc0.count_d1_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_10__0
       (.I0(Q[4]),
        .I1(WR_PNTR_RD[4]),
        .I2(Q[5]),
        .I3(WR_PNTR_RD[5]),
        .O(S[5]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_11__0
       (.I0(Q[3]),
        .I1(WR_PNTR_RD[3]),
        .I2(Q[4]),
        .I3(WR_PNTR_RD[4]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_12__0
       (.I0(Q[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(Q[3]),
        .I3(WR_PNTR_RD[3]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_13__0
       (.I0(Q[1]),
        .I1(WR_PNTR_RD[1]),
        .I2(Q[2]),
        .I3(WR_PNTR_RD[2]),
        .O(S[2]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    plusOp__0_carry_i_14__0
       (.I0(WR_PNTR_RD[0]),
        .I1(p_8_out),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(WR_PNTR_RD[1]),
        .O(S[1]));
  LUT3 #(
    .INIT(8'h96)) 
    plusOp__0_carry_i_15__0
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .I2(p_8_out),
        .O(S[0]));
  LUT3 #(
    .INIT(8'h71)) 
    plusOp__0_carry_i_7__0
       (.I0(Q[0]),
        .I1(p_8_out),
        .I2(WR_PNTR_RD[0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_8__0
       (.I0(Q[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(Q[7]),
        .I3(WR_PNTR_RD[7]),
        .O(S[7]));
  LUT4 #(
    .INIT(16'hB44B)) 
    plusOp__0_carry_i_9__0
       (.I0(Q[5]),
        .I1(WR_PNTR_RD[5]),
        .I2(Q[6]),
        .I3(WR_PNTR_RD[6]),
        .O(S[6]));
endmodule

(* ORIG_REF_NAME = "rd_dc_fwft_ext_as" *) 
module gpif2mst_async_34x512_rd_dc_fwft_ext_as
   (axis_rd_data_count,
    rd_dc_i,
    \g_rd.gvalid_low.rd_dc_i_reg[9]_0 ,
    m_aclk,
    \g_rd.gvalid_low.rd_dc_i_reg[8]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[7]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[6]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[5]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[4]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[3]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[2]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[1]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[0]_0 );
  output [9:0]axis_rd_data_count;
  input [0:0]rd_dc_i;
  input \g_rd.gvalid_low.rd_dc_i_reg[9]_0 ;
  input m_aclk;
  input \g_rd.gvalid_low.rd_dc_i_reg[8]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[6]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[5]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[4]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[3]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[2]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[1]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[0]_0 ;

  wire [9:0]axis_rd_data_count;
  wire \g_rd.gvalid_low.rd_dc_i_reg[0]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[1]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[2]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[3]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[4]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[5]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[6]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[8]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9]_0 ;
  wire m_aclk;
  wire [0:0]rd_dc_i;

  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[0]_0 ),
        .Q(axis_rd_data_count[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[1]_0 ),
        .Q(axis_rd_data_count[1]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[2]_0 ),
        .Q(axis_rd_data_count[2]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[3]_0 ),
        .Q(axis_rd_data_count[3]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[4]_0 ),
        .Q(axis_rd_data_count[4]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[5]_0 ),
        .Q(axis_rd_data_count[5]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[6]_0 ),
        .Q(axis_rd_data_count[6]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ),
        .Q(axis_rd_data_count[7]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[8]_0 ),
        .Q(axis_rd_data_count[8]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[9] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[9]_0 ),
        .Q(axis_rd_data_count[9]),
        .R(rd_dc_i));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module gpif2mst_async_34x512_rd_fwft
   (ENB_I,
    p_8_out,
    E,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    rd_dc_i,
    m_axis_tvalid,
    empty_fwft_i_reg_0,
    m_aclk,
    ENB_dly_D,
    out,
    m_axis_tready,
    O);
  output ENB_I;
  output p_8_out;
  output [0:0]E;
  output \gpregsm1.curr_fwft_state_reg[1]_0 ;
  output [0:0]rd_dc_i;
  output m_axis_tvalid;
  input empty_fwft_i_reg_0;
  input m_aclk;
  input ENB_dly_D;
  input out;
  input m_axis_tready;
  input [0:0]O;

  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [0:0]O;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0__1;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i_reg0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0__1;
  wire empty_fwft_i_reg_0;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire m_aclk;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire [1:0]next_fwft_state;
  wire out;
  wire p_8_out;
  wire [0:0]rd_dc_i;
  (* DONT_TOUCH *) wire user_valid;

  LUT4 #(
    .INIT(16'hAABA)) 
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(ENB_dly_D),
        .I1(empty_fwft_i_reg_0),
        .I2(p_8_out),
        .I3(out),
        .O(ENB_I));
  LUT6 #(
    .INIT(64'hFFFFF02F20000000)) 
    aempty_fwft_fb_i_i_1
       (.I0(m_axis_tready),
        .I1(empty_fwft_fb_o_i),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(out),
        .I5(aempty_fwft_fb_i),
        .O(aempty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_fb_i),
        .S(empty_fwft_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_i),
        .S(empty_fwft_i_reg_0));
  LUT5 #(
    .INIT(32'hFF0F0400)) 
    empty_fwft_fb_i_i_1
       (.I0(empty_fwft_fb_o_i),
        .I1(m_axis_tready),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .I4(empty_fwft_fb_i),
        .O(empty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_fb_i),
        .S(empty_fwft_i_reg_0));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(m_axis_tready),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i_reg0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i_reg0),
        .Q(empty_fwft_fb_o_i),
        .S(empty_fwft_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_i),
        .S(empty_fwft_i_reg_0));
  LUT4 #(
    .INIT(16'h00D0)) 
    \g_rd.gvalid_low.rd_dc_i[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(O),
        .I2(user_valid),
        .I3(empty_fwft_i_reg_0),
        .O(\gpregsm1.curr_fwft_state_reg[1]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_1 
       (.I0(empty_fwft_i_reg_0),
        .I1(curr_fwft_state[1]),
        .I2(user_valid),
        .O(rd_dc_i));
  LUT5 #(
    .INIT(32'h04555555)) 
    \gc0.count_d1[8]_i_1 
       (.I0(out),
        .I1(m_axis_tready),
        .I2(empty_fwft_fb_o_i),
        .I3(curr_fwft_state[1]),
        .I4(curr_fwft_state[0]),
        .O(p_8_out));
  LUT5 #(
    .INIT(32'h00004F00)) 
    \goreg_bm.dout_i[33]_i_1 
       (.I0(empty_fwft_fb_o_i),
        .I1(m_axis_tready),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(empty_fwft_i_reg_0),
        .O(E));
  LUT4 #(
    .INIT(16'hFBAA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(m_axis_tready),
        .I2(empty_fwft_fb_o_i),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT5 #(
    .INIT(32'hA200FFFF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(m_axis_tready),
        .I2(empty_fwft_fb_o_i),
        .I3(curr_fwft_state[0]),
        .I4(out),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]),
        .R(empty_fwft_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]),
        .R(empty_fwft_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(user_valid),
        .R(empty_fwft_i_reg_0));
  LUT1 #(
    .INIT(2'h1)) 
    m_axis_tvalid_INST_0
       (.I0(empty_fwft_i),
        .O(m_axis_tvalid));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module gpif2mst_async_34x512_rd_logic
   (axis_rd_data_count,
    axis_prog_empty,
    ENB_I,
    E,
    Q,
    \gc0.count_reg[8] ,
    m_axis_tvalid,
    v1_reg,
    ram_empty_fb_i_reg,
    ram_empty_fb_i_reg_0,
    \gc0.count_d1_reg[0] ,
    m_aclk,
    \g_rd.gvalid_low.rd_dc_i_reg[9] ,
    \g_rd.gvalid_low.rd_dc_i_reg[8] ,
    \g_rd.gvalid_low.rd_dc_i_reg[7] ,
    \g_rd.gvalid_low.rd_dc_i_reg[6] ,
    \g_rd.gvalid_low.rd_dc_i_reg[5] ,
    \g_rd.gvalid_low.rd_dc_i_reg[4] ,
    \g_rd.gvalid_low.rd_dc_i_reg[3] ,
    \g_rd.gvalid_low.rd_dc_i_reg[2] ,
    \g_rd.gvalid_low.rd_dc_i_reg[1] ,
    DI,
    ENB_dly_D,
    m_axis_tready,
    WR_PNTR_RD,
    O);
  output [9:0]axis_rd_data_count;
  output axis_prog_empty;
  output ENB_I;
  output [0:0]E;
  output [8:0]Q;
  output [0:0]\gc0.count_reg[8] ;
  output m_axis_tvalid;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg;
  input [0:0]ram_empty_fb_i_reg_0;
  input \gc0.count_d1_reg[0] ;
  input m_aclk;
  input \g_rd.gvalid_low.rd_dc_i_reg[9] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[8] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[7] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[6] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[5] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[4] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[3] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[2] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[1] ;
  input [5:0]DI;
  input ENB_dly_D;
  input m_axis_tready;
  input [8:0]WR_PNTR_RD;
  input [0:0]O;

  wire [5:0]DI;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [0:0]O;
  wire [8:0]Q;
  wire [8:0]WR_PNTR_RD;
  wire axis_prog_empty;
  wire [9:0]axis_rd_data_count;
  wire [3:0]\c1/v1_reg ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[1] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[2] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[3] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[4] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[5] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[6] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[7] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[8] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[9] ;
  wire \gc0.count_d1_reg[0] ;
  wire [0:0]\gc0.count_reg[8] ;
  wire \gr1.gr1_int.rfwft_n_3 ;
  wire m_aclk;
  wire m_axis_tready;
  wire m_axis_tvalid;
  wire p_2_out;
  wire p_8_out;
  wire ram_empty_fb_i_reg;
  wire [0:0]ram_empty_fb_i_reg_0;
  wire [9:9]rd_dc_i;
  wire rpntr_n_0;
  wire rpntr_n_15;
  wire rpntr_n_16;
  wire rpntr_n_17;
  wire rpntr_n_18;
  wire rpntr_n_19;
  wire rpntr_n_20;
  wire rpntr_n_21;
  wire rpntr_n_22;
  wire rpntr_n_23;
  wire [3:0]v1_reg;

  gpif2mst_async_34x512_rd_fwft \gr1.gr1_int.rfwft 
       (.E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .O(O),
        .empty_fwft_i_reg_0(\gc0.count_d1_reg[0] ),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (\gr1.gr1_int.rfwft_n_3 ),
        .m_aclk(m_aclk),
        .m_axis_tready(m_axis_tready),
        .m_axis_tvalid(m_axis_tvalid),
        .out(p_2_out),
        .p_8_out(p_8_out),
        .rd_dc_i(rd_dc_i));
  gpif2mst_async_34x512_rd_dc_fwft_ext_as \gr1.grdc2.rdc 
       (.axis_rd_data_count(axis_rd_data_count),
        .\g_rd.gvalid_low.rd_dc_i_reg[0]_0 (\gr1.gr1_int.rfwft_n_3 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[1]_0 (\g_rd.gvalid_low.rd_dc_i_reg[1] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[2]_0 (\g_rd.gvalid_low.rd_dc_i_reg[2] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[3]_0 (\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[4]_0 (\g_rd.gvalid_low.rd_dc_i_reg[4] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[5]_0 (\g_rd.gvalid_low.rd_dc_i_reg[5] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[6]_0 (\g_rd.gvalid_low.rd_dc_i_reg[6] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[7]_0 (\g_rd.gvalid_low.rd_dc_i_reg[7] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[8]_0 (\g_rd.gvalid_low.rd_dc_i_reg[8] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[9]_0 (\g_rd.gvalid_low.rd_dc_i_reg[9] ),
        .m_aclk(m_aclk),
        .rd_dc_i(rd_dc_i));
  gpif2mst_async_34x512_rd_pe_as \gras.gpe.rdpe 
       (.DI({DI,rpntr_n_0}),
        .S({rpntr_n_16,rpntr_n_17,rpntr_n_18,rpntr_n_19,rpntr_n_20,rpntr_n_21,rpntr_n_22,rpntr_n_23}),
        .axis_prog_empty(axis_prog_empty),
        .\gdiff.diff_pntr_pad_reg[9]_0 (rpntr_n_15),
        .\gpe1.prog_empty_i_reg_0 (\gc0.count_d1_reg[0] ),
        .m_aclk(m_aclk),
        .out(p_2_out));
  gpif2mst_async_34x512_rd_status_flags_as \gras.rsts 
       (.m_aclk(m_aclk),
        .out(p_2_out),
        .p_8_out(p_8_out),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg),
        .ram_empty_fb_i_reg_1(ram_empty_fb_i_reg_0),
        .ram_empty_fb_i_reg_2(\gc0.count_d1_reg[0] ),
        .v1_reg(v1_reg),
        .v1_reg_0(\c1/v1_reg ));
  gpif2mst_async_34x512_rd_bin_cntr rpntr
       (.DI(rpntr_n_0),
        .Q(Q),
        .S({rpntr_n_16,rpntr_n_17,rpntr_n_18,rpntr_n_19,rpntr_n_20,rpntr_n_21,rpntr_n_22,rpntr_n_23}),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\gc0.count_d1_reg[0]_0 (\gc0.count_d1_reg[0] ),
        .\gc0.count_d1_reg[7]_0 (rpntr_n_15),
        .\gc0.count_reg[8]_0 (\gc0.count_reg[8] ),
        .m_aclk(m_aclk),
        .p_8_out(p_8_out),
        .v1_reg(\c1/v1_reg ));
endmodule

(* ORIG_REF_NAME = "rd_pe_as" *) 
module gpif2mst_async_34x512_rd_pe_as
   (axis_prog_empty,
    DI,
    S,
    \gdiff.diff_pntr_pad_reg[9]_0 ,
    \gpe1.prog_empty_i_reg_0 ,
    m_aclk,
    out);
  output axis_prog_empty;
  input [6:0]DI;
  input [7:0]S;
  input [0:0]\gdiff.diff_pntr_pad_reg[9]_0 ;
  input \gpe1.prog_empty_i_reg_0 ;
  input m_aclk;
  input out;

  wire [6:0]DI;
  wire [7:0]S;
  wire axis_prog_empty;
  wire [9:1]diff_pntr_pad;
  wire [0:0]\gdiff.diff_pntr_pad_reg[9]_0 ;
  wire \gpe1.prog_empty_i_i_1_n_0 ;
  wire \gpe1.prog_empty_i_i_2_n_0 ;
  wire \gpe1.prog_empty_i_i_3_n_0 ;
  wire \gpe1.prog_empty_i_reg_0 ;
  wire m_aclk;
  wire out;
  wire [9:1]plusOp;
  wire plusOp__0_carry_n_0;
  wire plusOp__0_carry_n_1;
  wire plusOp__0_carry_n_2;
  wire plusOp__0_carry_n_3;
  wire plusOp__0_carry_n_4;
  wire plusOp__0_carry_n_5;
  wire plusOp__0_carry_n_6;
  wire plusOp__0_carry_n_7;
  wire [7:0]NLW_plusOp__0_carry__0_CO_UNCONNECTED;
  wire [7:1]NLW_plusOp__0_carry__0_O_UNCONNECTED;

  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(diff_pntr_pad[1]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(diff_pntr_pad[2]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(diff_pntr_pad[3]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[4]),
        .Q(diff_pntr_pad[4]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[5]),
        .Q(diff_pntr_pad[5]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[6]),
        .Q(diff_pntr_pad[6]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[7]),
        .Q(diff_pntr_pad[7]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[8]),
        .Q(diff_pntr_pad[8]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[9] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(plusOp[9]),
        .Q(diff_pntr_pad[9]),
        .R(\gpe1.prog_empty_i_reg_0 ));
  LUT6 #(
    .INIT(64'h8888888888888BBB)) 
    \gpe1.prog_empty_i_i_1 
       (.I0(axis_prog_empty),
        .I1(out),
        .I2(diff_pntr_pad[1]),
        .I3(diff_pntr_pad[2]),
        .I4(\gpe1.prog_empty_i_i_2_n_0 ),
        .I5(\gpe1.prog_empty_i_i_3_n_0 ),
        .O(\gpe1.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gpe1.prog_empty_i_i_2 
       (.I0(diff_pntr_pad[7]),
        .I1(diff_pntr_pad[6]),
        .I2(diff_pntr_pad[9]),
        .I3(diff_pntr_pad[8]),
        .O(\gpe1.prog_empty_i_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \gpe1.prog_empty_i_i_3 
       (.I0(diff_pntr_pad[3]),
        .I1(diff_pntr_pad[5]),
        .I2(diff_pntr_pad[4]),
        .O(\gpe1.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gpe1.prog_empty_i_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\gpe1.prog_empty_i_i_1_n_0 ),
        .Q(axis_prog_empty),
        .S(\gpe1.prog_empty_i_reg_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    plusOp__0_carry
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({plusOp__0_carry_n_0,plusOp__0_carry_n_1,plusOp__0_carry_n_2,plusOp__0_carry_n_3,plusOp__0_carry_n_4,plusOp__0_carry_n_5,plusOp__0_carry_n_6,plusOp__0_carry_n_7}),
        .DI({DI,1'b0}),
        .O(plusOp[8:1]),
        .S(S));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    plusOp__0_carry__0
       (.CI(plusOp__0_carry_n_0),
        .CI_TOP(1'b0),
        .CO(NLW_plusOp__0_carry__0_CO_UNCONNECTED[7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_plusOp__0_carry__0_O_UNCONNECTED[7:1],plusOp[9]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gdiff.diff_pntr_pad_reg[9]_0 }));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module gpif2mst_async_34x512_rd_status_flags_as
   (out,
    v1_reg,
    ram_empty_fb_i_reg_0,
    v1_reg_0,
    ram_empty_fb_i_reg_1,
    ram_empty_fb_i_reg_2,
    m_aclk,
    p_8_out);
  output out;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg_0;
  input [3:0]v1_reg_0;
  input [0:0]ram_empty_fb_i_reg_1;
  input ram_empty_fb_i_reg_2;
  input m_aclk;
  input p_8_out;

  wire c0_n_0;
  wire comp1;
  wire m_aclk;
  wire p_8_out;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  wire ram_empty_fb_i_reg_0;
  wire [0:0]ram_empty_fb_i_reg_1;
  wire ram_empty_fb_i_reg_2;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;

  assign out = ram_empty_fb_i;
  gpif2mst_async_34x512_compare_1 c0
       (.comp1(comp1),
        .p_8_out(p_8_out),
        .ram_empty_fb_i_reg(c0_n_0),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg_0),
        .v1_reg(v1_reg));
  gpif2mst_async_34x512_compare_2 c1
       (.comp1(comp1),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg_1),
        .v1_reg_0(v1_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(c0_n_0),
        .Q(ram_empty_fb_i),
        .S(ram_empty_fb_i_reg_2));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(c0_n_0),
        .Q(ram_empty_i),
        .S(ram_empty_fb_i_reg_2));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module gpif2mst_async_34x512_reset_blk_ramfifo
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ,
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ,
    wr_rst_busy,
    out,
    s_aclk,
    m_aclk,
    s_aresetn);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  output wr_rst_busy;
  output out;
  input s_aclk;
  input m_aclk;
  input s_aresetn;

  wire arst_sync_rd_rst;
  wire dest_out;
  wire dest_rst;
  wire inverted_reset;
  wire m_aclk;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  wire [3:0]rd_rst_wr_ext;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  wire s_aclk;
  wire s_aresetn;
  wire sckt_rd_rst_wr;
  wire wr_rst_busy_i__0;
  wire wr_rst_busy_i_n_0;
  wire [1:0]wr_rst_rd_ext;

  assign out = rst_d3;
  assign wr_rst_busy = wr_rst_busy_i__0;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(wr_rst_busy_i__0),
        .Q(rst_d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rst_d1),
        .Q(rst_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDSE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rst_d2),
        .Q(rst_d3),
        .S(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(wr_rst_rd_ext[1]),
        .I1(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ),
        .I2(arst_sync_rd_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .Q(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hD0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(rd_rst_wr_ext[1]),
        .I1(rd_rst_wr_ext[0]),
        .I2(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .Q(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .S(dest_rst));
  FDSE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(wr_rst_busy_i_n_0),
        .Q(wr_rst_busy_i__0),
        .S(dest_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]),
        .R(1'b0));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_34x512_xpm_cdc_single \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(s_aclk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(m_aclk),
        .src_in(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_34x512_xpm_cdc_single__2 \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(m_aclk),
        .dest_out(dest_out),
        .src_clk(s_aclk),
        .src_in(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_34x512_xpm_cdc_sync_rst \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(m_aclk),
        .dest_rst(arst_sync_rd_rst),
        .src_rst(inverted_reset));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  gpif2mst_async_34x512_xpm_cdc_sync_rst__2 \ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(s_aclk),
        .dest_rst(dest_rst),
        .src_rst(inverted_reset));
  LUT1 #(
    .INIT(2'h1)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst_i_1 
       (.I0(s_aresetn),
        .O(inverted_reset));
  LUT5 #(
    .INIT(32'hF020F0F0)) 
    wr_rst_busy_i
       (.I0(rd_rst_wr_ext[1]),
        .I1(rd_rst_wr_ext[0]),
        .I2(wr_rst_busy_i__0),
        .I3(rd_rst_wr_ext[2]),
        .I4(rd_rst_wr_ext[3]),
        .O(wr_rst_busy_i_n_0));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module gpif2mst_async_34x512_wr_bin_cntr
   (S,
    Q,
    DI,
    \gic0.gc0.count_d1_reg[8]_0 ,
    \gic0.gc0.count_d2_reg[8]_0 ,
    v1_reg,
    \gic0.gc0.count_reg[7]_0 ,
    v1_reg_0,
    D,
    \gic0.gc0.count_d1_reg[0]_0 ,
    RD_PNTR_WR,
    O,
    \wr_data_count_i_reg[9] ,
    s_axis_tvalid,
    out,
    \gic0.gc0.count_d1_reg[1]_0 ,
    E,
    s_aclk);
  output [7:0]S;
  output [8:0]Q;
  output [5:0]DI;
  output [8:0]\gic0.gc0.count_d1_reg[8]_0 ;
  output [0:0]\gic0.gc0.count_d2_reg[8]_0 ;
  output [0:0]v1_reg;
  output [7:0]\gic0.gc0.count_reg[7]_0 ;
  output [0:0]v1_reg_0;
  output [8:0]D;
  output [1:0]\gic0.gc0.count_d1_reg[0]_0 ;
  input [8:0]RD_PNTR_WR;
  input [6:0]O;
  input [0:0]\wr_data_count_i_reg[9] ;
  input s_axis_tvalid;
  input out;
  input \gic0.gc0.count_d1_reg[1]_0 ;
  input [0:0]E;
  input s_aclk;

  wire [8:0]D;
  wire [5:0]DI;
  wire [0:0]E;
  wire [6:0]O;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [7:0]S;
  wire \gic0.gc0.count[8]_i_2_n_0 ;
  wire [1:0]\gic0.gc0.count_d1_reg[0]_0 ;
  wire \gic0.gc0.count_d1_reg[1]_0 ;
  wire [8:0]\gic0.gc0.count_d1_reg[8]_0 ;
  wire [0:0]\gic0.gc0.count_d2_reg[8]_0 ;
  wire [7:0]\gic0.gc0.count_reg[7]_0 ;
  wire out;
  wire [8:0]plusOp__0;
  wire s_aclk;
  wire s_axis_tvalid;
  wire [0:0]v1_reg;
  wire [0:0]v1_reg_0;
  wire \wr_data_count_i[9]_i_2_n_0 ;
  wire [0:0]\wr_data_count_i_reg[9] ;
  wire [8:8]wr_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .I2(\gic0.gc0.count_reg[7]_0 [2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [1]),
        .I1(\gic0.gc0.count_reg[7]_0 [0]),
        .I2(\gic0.gc0.count_reg[7]_0 [2]),
        .I3(\gic0.gc0.count_reg[7]_0 [3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [2]),
        .I1(\gic0.gc0.count_reg[7]_0 [0]),
        .I2(\gic0.gc0.count_reg[7]_0 [1]),
        .I3(\gic0.gc0.count_reg[7]_0 [3]),
        .I4(\gic0.gc0.count_reg[7]_0 [4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc0.count[5]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [3]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .I2(\gic0.gc0.count_reg[7]_0 [0]),
        .I3(\gic0.gc0.count_reg[7]_0 [2]),
        .I4(\gic0.gc0.count_reg[7]_0 [4]),
        .I5(\gic0.gc0.count_reg[7]_0 [5]),
        .O(plusOp__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[6]_i_1 
       (.I0(\gic0.gc0.count[8]_i_2_n_0 ),
        .I1(\gic0.gc0.count_reg[7]_0 [6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[7]_i_1 
       (.I0(\gic0.gc0.count[8]_i_2_n_0 ),
        .I1(\gic0.gc0.count_reg[7]_0 [6]),
        .I2(\gic0.gc0.count_reg[7]_0 [7]),
        .O(plusOp__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[8]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [6]),
        .I1(\gic0.gc0.count[8]_i_2_n_0 ),
        .I2(\gic0.gc0.count_reg[7]_0 [7]),
        .I3(wr_pntr_plus2),
        .O(plusOp__0[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc0.count[8]_i_2 
       (.I0(\gic0.gc0.count_reg[7]_0 [5]),
        .I1(\gic0.gc0.count_reg[7]_0 [3]),
        .I2(\gic0.gc0.count_reg[7]_0 [1]),
        .I3(\gic0.gc0.count_reg[7]_0 [0]),
        .I4(\gic0.gc0.count_reg[7]_0 [2]),
        .I5(\gic0.gc0.count_reg[7]_0 [4]),
        .O(\gic0.gc0.count[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [0]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [0]),
        .S(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [1]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [1]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [2]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [3]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [4]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[5] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [5]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[6] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [6]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[7] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [7]),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[8] 
       (.C(s_aclk),
        .CE(E),
        .D(wr_pntr_plus2),
        .Q(\gic0.gc0.count_d1_reg[8]_0 [8]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[5] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[6] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[7] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[8] 
       (.C(s_aclk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(\gic0.gc0.count_reg[7]_0 [0]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(\gic0.gc0.count_reg[7]_0 [1]),
        .S(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(\gic0.gc0.count_reg[7]_0 [2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(\gic0.gc0.count_reg[7]_0 [3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[4]),
        .Q(\gic0.gc0.count_reg[7]_0 [4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[5] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[5]),
        .Q(\gic0.gc0.count_reg[7]_0 [5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[6] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[6]),
        .Q(\gic0.gc0.count_reg[7]_0 [6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[7] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[7]),
        .Q(\gic0.gc0.count_reg[7]_0 [7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[8] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[8]),
        .Q(wr_pntr_plus2),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(wr_pntr_plus2),
        .I1(RD_PNTR_WR[8]),
        .O(v1_reg_0));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__2 
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [8]),
        .I1(RD_PNTR_WR[8]),
        .O(v1_reg));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1
       (.I0(Q[8]),
        .I1(RD_PNTR_WR[8]),
        .O(\gic0.gc0.count_d2_reg[8]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1
       (.I0(Q[7]),
        .I1(RD_PNTR_WR[7]),
        .O(S[7]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2
       (.I0(Q[6]),
        .I1(RD_PNTR_WR[6]),
        .O(S[6]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3
       (.I0(Q[5]),
        .I1(RD_PNTR_WR[5]),
        .O(S[5]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4
       (.I0(Q[4]),
        .I1(RD_PNTR_WR[4]),
        .O(S[4]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_5
       (.I0(Q[3]),
        .I1(RD_PNTR_WR[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_6
       (.I0(Q[2]),
        .I1(RD_PNTR_WR[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_7
       (.I0(Q[1]),
        .I1(RD_PNTR_WR[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_8
       (.I0(Q[0]),
        .I1(RD_PNTR_WR[0]),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_1
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [6]),
        .I1(RD_PNTR_WR[6]),
        .O(DI[5]));
  LUT6 #(
    .INIT(64'hF75108AE08AEF751)) 
    plusOp__0_carry_i_14
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [0]),
        .I1(s_axis_tvalid),
        .I2(out),
        .I3(RD_PNTR_WR[0]),
        .I4(\gic0.gc0.count_d1_reg[8]_0 [1]),
        .I5(RD_PNTR_WR[1]),
        .O(\gic0.gc0.count_d1_reg[0]_0 [1]));
  LUT4 #(
    .INIT(16'h9969)) 
    plusOp__0_carry_i_15
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [0]),
        .I1(RD_PNTR_WR[0]),
        .I2(s_axis_tvalid),
        .I3(out),
        .O(\gic0.gc0.count_d1_reg[0]_0 [0]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_2
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [5]),
        .I1(RD_PNTR_WR[5]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_3
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [4]),
        .I1(RD_PNTR_WR[4]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_4
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [3]),
        .I1(RD_PNTR_WR[3]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_5
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [2]),
        .I1(RD_PNTR_WR[2]),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h2)) 
    plusOp__0_carry_i_6
       (.I0(\gic0.gc0.count_d1_reg[8]_0 [1]),
        .I1(RD_PNTR_WR[1]),
        .O(DI[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_data_count_i[1]_i_1 
       (.I0(O[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[2]_i_1 
       (.I0(O[0]),
        .I1(O[1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_data_count_i[3]_i_1 
       (.I0(O[0]),
        .I1(O[1]),
        .I2(O[2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_data_count_i[4]_i_1 
       (.I0(O[1]),
        .I1(O[0]),
        .I2(O[2]),
        .I3(O[3]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_data_count_i[5]_i_1 
       (.I0(O[2]),
        .I1(O[0]),
        .I2(O[1]),
        .I3(O[3]),
        .I4(O[4]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wr_data_count_i[6]_i_1 
       (.I0(O[3]),
        .I1(O[1]),
        .I2(O[0]),
        .I3(O[2]),
        .I4(O[4]),
        .I5(O[5]),
        .O(D[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[7]_i_1 
       (.I0(\wr_data_count_i[9]_i_2_n_0 ),
        .I1(O[6]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_data_count_i[8]_i_1 
       (.I0(\wr_data_count_i[9]_i_2_n_0 ),
        .I1(O[6]),
        .I2(\wr_data_count_i_reg[9] ),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \wr_data_count_i[9]_i_1 
       (.I0(\wr_data_count_i_reg[9] ),
        .I1(\wr_data_count_i[9]_i_2_n_0 ),
        .I2(O[6]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \wr_data_count_i[9]_i_2 
       (.I0(O[5]),
        .I1(O[3]),
        .I2(O[1]),
        .I3(O[0]),
        .I4(O[2]),
        .I5(O[4]),
        .O(\wr_data_count_i[9]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "wr_dc_fwft_ext_as" *) 
module gpif2mst_async_34x512_wr_dc_fwft_ext_as
   (O,
    \gic0.gc0.count_d2_reg[7] ,
    axis_wr_data_count,
    Q,
    S,
    \wr_data_count_i_reg[9]_0 ,
    \wr_data_count_i_reg[0]_0 ,
    D,
    s_aclk);
  output [6:0]O;
  output [0:0]\gic0.gc0.count_d2_reg[7] ;
  output [9:0]axis_wr_data_count;
  input [7:0]Q;
  input [7:0]S;
  input [0:0]\wr_data_count_i_reg[9]_0 ;
  input \wr_data_count_i_reg[0]_0 ;
  input [8:0]D;
  input s_aclk;

  wire [8:0]D;
  wire [6:0]O;
  wire [7:0]Q;
  wire [7:0]S;
  wire [9:0]axis_wr_data_count;
  wire [0:0]\gic0.gc0.count_d2_reg[7] ;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_15;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire minusOp_carry_n_4;
  wire minusOp_carry_n_5;
  wire minusOp_carry_n_6;
  wire minusOp_carry_n_7;
  wire s_aclk;
  wire \wr_data_count_i_reg[0]_0 ;
  wire [0:0]\wr_data_count_i_reg[9]_0 ;
  wire [7:0]NLW_minusOp_carry__0_CO_UNCONNECTED;
  wire [7:1]NLW_minusOp_carry__0_O_UNCONNECTED;

  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    minusOp_carry
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3,minusOp_carry_n_4,minusOp_carry_n_5,minusOp_carry_n_6,minusOp_carry_n_7}),
        .DI(Q),
        .O({O,minusOp_carry_n_15}),
        .S(S));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CI_TOP(1'b0),
        .CO(NLW_minusOp_carry__0_CO_UNCONNECTED[7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_minusOp_carry__0_O_UNCONNECTED[7:1],\gic0.gc0.count_d2_reg[7] }),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\wr_data_count_i_reg[9]_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(minusOp_carry_n_15),
        .Q(axis_wr_data_count[0]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(axis_wr_data_count[1]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(axis_wr_data_count[2]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(axis_wr_data_count[3]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(axis_wr_data_count[4]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[5] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(axis_wr_data_count[5]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[6] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(axis_wr_data_count[6]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[7] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(axis_wr_data_count[7]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[8] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(axis_wr_data_count[8]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[9] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(axis_wr_data_count[9]),
        .R(\wr_data_count_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module gpif2mst_async_34x512_wr_logic
   (out,
    Q,
    \gic0.gc0.count_d1_reg[8] ,
    E,
    \gic0.gc0.count_reg[7] ,
    s_axis_tready,
    axis_prog_full,
    axis_wr_data_count,
    \gmux.gm[4].gms.ms ,
    \gmux.gm[4].gms.ms_0 ,
    \gdiff.diff_pntr_pad_reg[8] ,
    S,
    \gic0.gc0.count_d1_reg[1] ,
    s_aclk,
    RD_PNTR_WR,
    s_axis_tvalid,
    ram_full_fb_i_reg);
  output out;
  output [8:0]Q;
  output [8:0]\gic0.gc0.count_d1_reg[8] ;
  output [0:0]E;
  output [7:0]\gic0.gc0.count_reg[7] ;
  output s_axis_tready;
  output axis_prog_full;
  output [9:0]axis_wr_data_count;
  input [3:0]\gmux.gm[4].gms.ms ;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [5:0]\gdiff.diff_pntr_pad_reg[8] ;
  input [0:0]S;
  input \gic0.gc0.count_d1_reg[1] ;
  input s_aclk;
  input [8:0]RD_PNTR_WR;
  input s_axis_tvalid;
  input ram_full_fb_i_reg;

  wire [0:0]E;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [0:0]S;
  wire axis_prog_full;
  wire [9:0]axis_wr_data_count;
  wire [4:4]\c1/v1_reg ;
  wire [4:4]\c2/v1_reg ;
  wire [5:0]\gdiff.diff_pntr_pad_reg[8] ;
  wire \gic0.gc0.count_d1_reg[1] ;
  wire [8:0]\gic0.gc0.count_d1_reg[8] ;
  wire [7:0]\gic0.gc0.count_reg[7] ;
  wire [3:0]\gmux.gm[4].gms.ms ;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire \gwas.gwdc1.wdcext_n_0 ;
  wire \gwas.gwdc1.wdcext_n_1 ;
  wire \gwas.gwdc1.wdcext_n_2 ;
  wire \gwas.gwdc1.wdcext_n_3 ;
  wire \gwas.gwdc1.wdcext_n_4 ;
  wire \gwas.gwdc1.wdcext_n_5 ;
  wire \gwas.gwdc1.wdcext_n_6 ;
  wire \gwas.gwdc1.wdcext_n_7 ;
  wire \gwas.wsts_n_1 ;
  wire out;
  wire ram_full_fb_i_reg;
  wire s_aclk;
  wire s_axis_tready;
  wire s_axis_tvalid;
  wire wpntr_n_0;
  wire wpntr_n_1;
  wire wpntr_n_17;
  wire wpntr_n_18;
  wire wpntr_n_19;
  wire wpntr_n_2;
  wire wpntr_n_20;
  wire wpntr_n_21;
  wire wpntr_n_22;
  wire wpntr_n_3;
  wire wpntr_n_32;
  wire wpntr_n_4;
  wire wpntr_n_43;
  wire wpntr_n_44;
  wire wpntr_n_45;
  wire wpntr_n_46;
  wire wpntr_n_47;
  wire wpntr_n_48;
  wire wpntr_n_49;
  wire wpntr_n_5;
  wire wpntr_n_50;
  wire wpntr_n_51;
  wire wpntr_n_52;
  wire wpntr_n_53;
  wire wpntr_n_6;
  wire wpntr_n_7;

  gpif2mst_async_34x512_wr_pf_as \gwas.gpf.wrpf 
       (.DI({wpntr_n_17,wpntr_n_18,wpntr_n_19,wpntr_n_20,wpntr_n_21,wpntr_n_22,\gwas.wsts_n_1 }),
        .S({\gdiff.diff_pntr_pad_reg[8] ,wpntr_n_52,wpntr_n_53}),
        .axis_prog_full(axis_prog_full),
        .\gdiff.diff_pntr_pad_reg[2]_0 (\gic0.gc0.count_d1_reg[1] ),
        .\gdiff.diff_pntr_pad_reg[9]_0 (S),
        .\gpf1.prog_full_i_reg_0 (ram_full_fb_i_reg),
        .out(out),
        .s_aclk(s_aclk));
  gpif2mst_async_34x512_wr_dc_fwft_ext_as \gwas.gwdc1.wdcext 
       (.D({wpntr_n_43,wpntr_n_44,wpntr_n_45,wpntr_n_46,wpntr_n_47,wpntr_n_48,wpntr_n_49,wpntr_n_50,wpntr_n_51}),
        .O({\gwas.gwdc1.wdcext_n_0 ,\gwas.gwdc1.wdcext_n_1 ,\gwas.gwdc1.wdcext_n_2 ,\gwas.gwdc1.wdcext_n_3 ,\gwas.gwdc1.wdcext_n_4 ,\gwas.gwdc1.wdcext_n_5 ,\gwas.gwdc1.wdcext_n_6 }),
        .Q(Q[7:0]),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3,wpntr_n_4,wpntr_n_5,wpntr_n_6,wpntr_n_7}),
        .axis_wr_data_count(axis_wr_data_count),
        .\gic0.gc0.count_d2_reg[7] (\gwas.gwdc1.wdcext_n_7 ),
        .s_aclk(s_aclk),
        .\wr_data_count_i_reg[0]_0 (\gic0.gc0.count_d1_reg[1] ),
        .\wr_data_count_i_reg[9]_0 (wpntr_n_32));
  gpif2mst_async_34x512_wr_status_flags_as \gwas.wsts 
       (.DI(\gwas.wsts_n_1 ),
        .E(E),
        .Q(\gic0.gc0.count_d1_reg[8] [0]),
        .RD_PNTR_WR(RD_PNTR_WR[0]),
        .\gmux.gm[4].gms.ms (\gmux.gm[4].gms.ms ),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms_0 ),
        .out(out),
        .ram_full_fb_i_reg_0(\gic0.gc0.count_d1_reg[1] ),
        .ram_full_fb_i_reg_1(ram_full_fb_i_reg),
        .s_aclk(s_aclk),
        .s_axis_tready(s_axis_tready),
        .s_axis_tvalid(s_axis_tvalid),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ));
  gpif2mst_async_34x512_wr_bin_cntr wpntr
       (.D({wpntr_n_43,wpntr_n_44,wpntr_n_45,wpntr_n_46,wpntr_n_47,wpntr_n_48,wpntr_n_49,wpntr_n_50,wpntr_n_51}),
        .DI({wpntr_n_17,wpntr_n_18,wpntr_n_19,wpntr_n_20,wpntr_n_21,wpntr_n_22}),
        .E(E),
        .O({\gwas.gwdc1.wdcext_n_0 ,\gwas.gwdc1.wdcext_n_1 ,\gwas.gwdc1.wdcext_n_2 ,\gwas.gwdc1.wdcext_n_3 ,\gwas.gwdc1.wdcext_n_4 ,\gwas.gwdc1.wdcext_n_5 ,\gwas.gwdc1.wdcext_n_6 }),
        .Q(Q),
        .RD_PNTR_WR(RD_PNTR_WR),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3,wpntr_n_4,wpntr_n_5,wpntr_n_6,wpntr_n_7}),
        .\gic0.gc0.count_d1_reg[0]_0 ({wpntr_n_52,wpntr_n_53}),
        .\gic0.gc0.count_d1_reg[1]_0 (\gic0.gc0.count_d1_reg[1] ),
        .\gic0.gc0.count_d1_reg[8]_0 (\gic0.gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8]_0 (wpntr_n_32),
        .\gic0.gc0.count_reg[7]_0 (\gic0.gc0.count_reg[7] ),
        .out(out),
        .s_aclk(s_aclk),
        .s_axis_tvalid(s_axis_tvalid),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .\wr_data_count_i_reg[9] (\gwas.gwdc1.wdcext_n_7 ));
endmodule

(* ORIG_REF_NAME = "wr_pf_as" *) 
module gpif2mst_async_34x512_wr_pf_as
   (axis_prog_full,
    DI,
    S,
    \gdiff.diff_pntr_pad_reg[9]_0 ,
    \gdiff.diff_pntr_pad_reg[2]_0 ,
    s_aclk,
    \gpf1.prog_full_i_reg_0 ,
    out);
  output axis_prog_full;
  input [6:0]DI;
  input [7:0]S;
  input [0:0]\gdiff.diff_pntr_pad_reg[9]_0 ;
  input \gdiff.diff_pntr_pad_reg[2]_0 ;
  input s_aclk;
  input \gpf1.prog_full_i_reg_0 ;
  input out;

  wire [6:0]DI;
  wire [7:0]S;
  wire axis_prog_full;
  wire \gdiff.diff_pntr_pad_reg[2]_0 ;
  wire [0:0]\gdiff.diff_pntr_pad_reg[9]_0 ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[2] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[3] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[4] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[5] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[6] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[7] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[8] ;
  wire \gdiff.diff_pntr_pad_reg_n_0_[9] ;
  wire \gpf1.prog_full_i_i_1_n_0 ;
  wire \gpf1.prog_full_i_i_2_n_0 ;
  wire \gpf1.prog_full_i_i_3_n_0 ;
  wire \gpf1.prog_full_i_reg_0 ;
  wire out;
  wire plusOp__0_carry__0_n_15;
  wire plusOp__0_carry_n_0;
  wire plusOp__0_carry_n_1;
  wire plusOp__0_carry_n_10;
  wire plusOp__0_carry_n_11;
  wire plusOp__0_carry_n_12;
  wire plusOp__0_carry_n_13;
  wire plusOp__0_carry_n_14;
  wire plusOp__0_carry_n_2;
  wire plusOp__0_carry_n_3;
  wire plusOp__0_carry_n_4;
  wire plusOp__0_carry_n_5;
  wire plusOp__0_carry_n_6;
  wire plusOp__0_carry_n_7;
  wire plusOp__0_carry_n_8;
  wire plusOp__0_carry_n_9;
  wire s_aclk;
  wire [0:0]NLW_plusOp__0_carry_O_UNCONNECTED;
  wire [7:0]NLW_plusOp__0_carry__0_CO_UNCONNECTED;
  wire [7:1]NLW_plusOp__0_carry__0_O_UNCONNECTED;

  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_14),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[2] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_13),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[3] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_12),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[4] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[5] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_11),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[5] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[6] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_10),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[6] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[7] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_9),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[7] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[8] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry_n_8),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[8] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[9] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(plusOp__0_carry__0_n_15),
        .Q(\gdiff.diff_pntr_pad_reg_n_0_[9] ),
        .R(\gdiff.diff_pntr_pad_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h0F010001)) 
    \gpf1.prog_full_i_i_1 
       (.I0(\gpf1.prog_full_i_i_2_n_0 ),
        .I1(\gpf1.prog_full_i_i_3_n_0 ),
        .I2(\gpf1.prog_full_i_reg_0 ),
        .I3(out),
        .I4(axis_prog_full),
        .O(\gpf1.prog_full_i_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h777FFFFF)) 
    \gpf1.prog_full_i_i_2 
       (.I0(\gdiff.diff_pntr_pad_reg_n_0_[8] ),
        .I1(\gdiff.diff_pntr_pad_reg_n_0_[7] ),
        .I2(\gdiff.diff_pntr_pad_reg_n_0_[3] ),
        .I3(\gdiff.diff_pntr_pad_reg_n_0_[2] ),
        .I4(\gdiff.diff_pntr_pad_reg_n_0_[9] ),
        .O(\gpf1.prog_full_i_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \gpf1.prog_full_i_i_3 
       (.I0(\gdiff.diff_pntr_pad_reg_n_0_[4] ),
        .I1(\gdiff.diff_pntr_pad_reg_n_0_[6] ),
        .I2(\gdiff.diff_pntr_pad_reg_n_0_[5] ),
        .O(\gpf1.prog_full_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \gpf1.prog_full_i_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(\gpf1.prog_full_i_i_1_n_0 ),
        .Q(axis_prog_full),
        .S(\gdiff.diff_pntr_pad_reg[2]_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    plusOp__0_carry
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({plusOp__0_carry_n_0,plusOp__0_carry_n_1,plusOp__0_carry_n_2,plusOp__0_carry_n_3,plusOp__0_carry_n_4,plusOp__0_carry_n_5,plusOp__0_carry_n_6,plusOp__0_carry_n_7}),
        .DI({DI,1'b0}),
        .O({plusOp__0_carry_n_8,plusOp__0_carry_n_9,plusOp__0_carry_n_10,plusOp__0_carry_n_11,plusOp__0_carry_n_12,plusOp__0_carry_n_13,plusOp__0_carry_n_14,NLW_plusOp__0_carry_O_UNCONNECTED[0]}),
        .S(S));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    plusOp__0_carry__0
       (.CI(plusOp__0_carry_n_0),
        .CI_TOP(1'b0),
        .CO(NLW_plusOp__0_carry__0_CO_UNCONNECTED[7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_plusOp__0_carry__0_O_UNCONNECTED[7:1],plusOp__0_carry__0_n_15}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gdiff.diff_pntr_pad_reg[9]_0 }));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module gpif2mst_async_34x512_wr_status_flags_as
   (out,
    DI,
    E,
    s_axis_tready,
    \gmux.gm[4].gms.ms ,
    v1_reg,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg_0,
    ram_full_fb_i_reg_0,
    s_aclk,
    RD_PNTR_WR,
    s_axis_tvalid,
    Q,
    ram_full_fb_i_reg_1);
  output out;
  output [0:0]DI;
  output [0:0]E;
  output s_axis_tready;
  input [3:0]\gmux.gm[4].gms.ms ;
  input [0:0]v1_reg;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg_0;
  input ram_full_fb_i_reg_0;
  input s_aclk;
  input [0:0]RD_PNTR_WR;
  input s_axis_tvalid;
  input [0:0]Q;
  input ram_full_fb_i_reg_1;

  wire [0:0]DI;
  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]RD_PNTR_WR;
  wire c2_n_0;
  wire comp1;
  wire [3:0]\gmux.gm[4].gms.ms ;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  wire ram_full_fb_i_reg_1;
  (* DONT_TOUCH *) wire ram_full_i;
  wire s_aclk;
  wire s_axis_tready;
  wire s_axis_tvalid;
  wire [0:0]v1_reg;
  wire [0:0]v1_reg_0;

  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_3 
       (.I0(s_axis_tvalid),
        .I1(ram_full_fb_i),
        .O(E));
  gpif2mst_async_34x512_compare c1
       (.comp1(comp1),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms ),
        .v1_reg(v1_reg));
  gpif2mst_async_34x512_compare_0 c2
       (.comp1(comp1),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms_0 ),
        .out(ram_full_fb_i),
        .ram_full_fb_i_reg(c2_n_0),
        .ram_full_fb_i_reg_0(ram_full_fb_i_reg_1),
        .s_axis_tvalid(s_axis_tvalid),
        .v1_reg_0(v1_reg_0));
  LUT4 #(
    .INIT(16'h7510)) 
    plusOp__0_carry_i_7
       (.I0(RD_PNTR_WR),
        .I1(ram_full_fb_i),
        .I2(s_axis_tvalid),
        .I3(Q),
        .O(DI));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(s_aclk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_full_fb_i),
        .S(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(s_aclk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_full_i),
        .S(ram_full_fb_i_reg_0));
  LUT1 #(
    .INIT(2'h1)) 
    s_axis_tready_INST_0
       (.I0(ram_full_i),
        .O(s_axis_tready));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl;// ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
